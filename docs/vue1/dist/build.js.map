{"version":3,"sources":["webpack:///build.js","webpack:///webpack/bootstrap 24bad91f02da4dbdccaf","webpack:///./~/vue/dist/vue.js","webpack:///./~/vuets/lib/index.js","webpack:///./src/Hello.ts","webpack:///./src/home/index.ts","webpack:///./src/App.vue","webpack:///./~/vue-router/dist/vue-router.js","webpack:///App.vue","webpack:///./src/App.vue?8f31","webpack:///./~/css-loader/lib/css-base.js","webpack:///./src/App.vue?d818","webpack:///./~/vue-style-loader/addStyles.js","webpack:///./src/App.vue?9539","webpack:///(webpack)/buildin/global.js","webpack:///./src/main.ts"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","__webpack_require__.i","value","d","__webpack_require__.d","name","getter","Object","defineProperty","configurable","enumerable","get","n","__webpack_require__.n","__esModule","getDefault","getModuleExports","o","__webpack_require__.o","object","property","prototype","hasOwnProperty","p","s","global","factory","set","obj","key","val","hasOwn","_isVue","_data","ob","__ob__","convert","dep","notify","vms","length","vm","_proxy","_digest","del","_unproxy","isLiteral","exp","literalValueRE","test","isReserved","str","charCodeAt","_toString","toString","toNumber","parsed","Number","isNaN","toBoolean","stripQuotes","a","b","slice","camelize","replace","camelizeRE","toUpper","_","toUpperCase","hyphenate","hyphenateRE","toLowerCase","classify","classifyRE","bind","fn","ctx","arguments","apply","toArray","list","start","ret","Array","extend","to","from","keys","isObject","isPlainObject","OBJECT_STRING","def","writable","_debounce","func","wait","timeout","args","context","timestamp","result","later","last","Date","now","setTimeout","indexOf","arr","cancellable","cb","cancelled","cancel","cb.cancel","looseEqual","JSON","stringify","Cache","limit","size","head","tail","undefined","_keymap","create","pushFilter","lastFilterIndex","trim","filter","tokens","match","filterTokenRE","map","processFilterArg","push","dir","filters","arg","reservedArgRE","dynamic","stripped","parseDirective","hit","cache$1","inSingle","inDouble","curly","square","paren","prev","expression","put","compileRegex","open","config","delimiters","regexEscapeRE","close","unsafeOpen","unsafeDelimiters","unsafeClose","tagRE","RegExp","htmlRE","cache","parseText","text","lastIndex","index","first","exec","html","oneTime","tag","tokensToExp","token","formatToken","join","single","filterRE","appendWithTransition","el","target","applyTransition","appendChild","beforeWithTransition","before","removeWithTransition","remove","direction","op","transition","__v_trans","hooks","transitionEndEvent","_isCompiled","$parent","action","query","selector","document","querySelector","warn","inDoc","node","doc","ownerDocument","documentElement","parent","parentNode","nodeType","contains","getAttr","_attr","getAttribute","removeAttribute","getBindAttr","hasBindAttr","hasAttribute","insertBefore","after","nextSibling","removeChild","prepend","firstChild","replaceChild","getClass","classname","className","baseVal","setClass","cls","isIE9","namespaceURI","setAttribute","addClass","classList","add","cur","removeClass","tar","extractContent","asFragment","child","rawContent","isTemplate","isFragment","content","hasChildNodes","trimNode","createDocumentFragment","createElement","isTrimmable","lastChild","data","tagName","createAnchor","persist","anchor","debug","createComment","createTextNode","__v_anchor","findRef","hasAttributes","attrs","attributes","refRE","mapNodeRange","end","next","removeNodeRange","frag","onRemoved","removed","done","nodes","getOuterHTML","outerHTML","container","cloneNode","innerHTML","checkComponentAttr","options","hasAttrs","commonTagRE","reservedTagRE","resolveAsset","id","is","getIsBinding","expectedTag","_componentNameMap","isUnknownElement","mergeData","toVal","fromVal","mergeAssets","parentVal","childVal","res","guardArrayAssets","guardComponents","components","ids","Vue","guardProps","props","isArray","type","assets","asset","mergeOptions","mergeField","strats","defaultStrat","propsData","mixins","mixin","mixinOptions","warnMissing","camelizedId","charAt","Dep","uid$1","subs","withoutConversion","shouldConvert","Observer","hasProto","augment","protoAugment","copyAugment","arrayMethods","arrayKeys","observeArray","walk","src","__proto__","observe","isExtensible","addVm","defineReactive","getOwnPropertyDescriptor","setter","childOb","reactiveGetter","depend","e","reactiveSetter","newVal","getPathCharType","ch","code","parse","path","maybeUnescapeQuote","nextChar","IN_SINGLE_QUOTE","mode","IN_DOUBLE_QUOTE","newChar","actions","APPEND","BEFORE_PATH","subPathDepth","IN_SUB_PATH","trimmed","PUSH","typeMap","pathStateMachine","ERROR","AFTER_PATH","raw","parsePath","pathCache","getPath","parseExpression","setPath","original","warnNonExistent","$set","noop","save","isString","saved","newlineRE","rewrite","allowedKeywordsRE","restoreRE","restore","makeGetterFn","body","Function","compileSetter","scope","needSet","expressionCache","isSimplePath","improperKeywordsRE","saveRE","wsRE","identRE","pathTestRE","literalValueRE$1","flushBatcherQueue","_again","runBatcherQueue","queue","userQueue","devtools","emit","has","circular","waiting","watcher","run","_maxUpdateCount","Watcher","expOrFn","isFn","_watchers","uid$2","active","dirty","lazy","deps","newDeps","depIds","_Set","newDepIds","prevError","twoWay","queued","shallow","traverse","seen","seenObjects","clear","isA","isO","depId","isRealTemplate","stringToFragment","templateString","cacheKey","templateCache","tagMatch","tagRE$1","entityMatch","entityRE","commentMatch","commentRE","wrap","efault","depth","prefix","suffix","nodeToFragment","textContent","clonedNode","querySelectorAll","cloned","hasBrokenTemplate","tempClone","hasTextareaCloneBug","parseTemplate","template","shouldClone","idSelectorCache","getElementById","Fragment","linker","host","parentFrag","children","childFrags","inserted","unlink","childNodes","singleBefore","singleRemove","multiBefore","multiRemove","__v_frag","withTransition","method","callHook","attach","shouldCallRemove","self","beforeRemove","detach","destroy","_isAttached","$el","_callHook","FragmentFactory","cid","constructor","cacheId","linkerCache","compile","$options","findPrevFrag","previousSibling","forId","findVmFromFrag","__vue__","getTrackByKey","trackByKey","getValue","multi","init","selected","_value","keyFilter","handler","codes","charCode","parseInt","keyCodes","concat","keyHandler","keyCode","stopFilter","stopHandler","stopPropagation","preventFilter","preventHandler","preventDefault","selfFilter","selfHandler","currentTarget","normalize$1","_key","k","split","callActivateHooks","called","total","compileProps","propOptions","names","attr","prop","empty","identRE$1","propBindingModes","ONE_WAY","TWO_WAY","ONE_TIME","optimizedLiteral","settablePathRE","parentPath","lowerCaseName","required","makePropsLinkFn","propsLinkFn","_props","inlineProps","initProp","$get","_context","_bindDir","propDef","Boolean","processPropValue","rawValue","isSimple","getPropDefaultValue","coerceProp","coerced","assertProp","updateProp","valid","expectedTypes","expectedType","String","validator","formatType","coerce","pushJob","job","queue$1","nextTick","flush","f","offsetHeight","Transition","enterClass","leaveClass","pendingCssEvent","pendingCssCb","pendingJsCb","entered","left","justEntered","typeCache","TYPE_TRANSITION","TYPE_ANIMATION","forEach","partial","nodeLinkFn","_asComponent","compileNode","childLinkFn","terminal","isScript","compileNodeList","compositeLinkFn","dirs","linkAndCapture","compositeLinkCapturer","makeUnlinkFn","originalDirCount","_directives","sort","directiveComparator","_bind","descriptor","priority","DEFAULT_PRIORITY","contextDirs","destroying","teardownDirs","_teardown","$remove","compileAndLinkProps","propDirs","compileRoot","contextOptions","containerAttrs","_containerAttrs","replacerAttrs","_replacerAttrs","contextLinkFn","replacerLinkFn","compileDirectives","onRE","plural","rootLinkFn","selfDirs","_skip","removeText","wholeText","processTextToken","makeTextNodeLinkFn","linkFn","skip","previousElementSibling","rawName","termDef","j","modifierRE","matched","dirAttrRE","DEFAULT_TERMINAL_PRIORITY","modifiers","parseModifiers","dirName","makeTerminalNodeLinkFn","checkComponent","setTokenType","directives","textNodeLinkFn","fragClone","$eval","nodeList","linkFns","makeChildLinkFn","childrenLinkFn","component","ref","internalDirectives","literal","componentLinkFn","$refs","pushDir","interpTokens","hasOneTimeToken","interp","hasOneTime","some","transitionRE","bindRE","on","dirDef","makeNodeLinkFn","transclude","extractAttrs","_content","replacer","mergeAttrs","specialCharRE","resolveSlots","contents","_slotContents","extractFragment","noop$1","Directive","_bound","_locked","_listeners","_host","_scope","_frag","_vue_directives","_init","search","inBrowser","window","__VUE_DEVTOOLS_GLOBAL_HOOK__","UA","navigator","userAgent","isIE","isAndroid","isIos","iosVersionMatch","iosVersion","hasMutationObserverBug","indexedDB","transitionProp","animationProp","animationEndEvent","isWebkitTrans","ontransitionend","onwebkittransitionend","isWebkitAnim","onanimationend","onwebkitanimationend","nextTickHandler","pending","copies","callbacks","timerFunc","MutationObserver","setImmediate","counter","observer","textNode","characterData","Set","_Set.prototype.has","_Set.prototype.add","_Set.prototype.clear","p.put","entry","shift","newer","older","p.shift","p.get","returnEntry","directive","freeze","defineProperties","silent","async","warnExpressionErrors","_delimitersChanged","_assetTypes","_propBindingModes","formatComponentName","hasConsole","console","msg","error","HTMLUnknownElement","HTMLElement","optionMergeStrategies","strats.data","mergedDataFn","mergedInstanceDataFn","instanceData","defaultData","strats.el","created","ready","attached","detached","beforeCompile","compiled","beforeDestroy","destroyed","activate","strats.activate","watch","events","strats.events","methods","computed","strats.computed","addSub","Dep.prototype.addSub","sub","removeSub","Dep.prototype.removeSub","Dep.prototype.depend","addDep","Dep.prototype.notify","update","arrayProto","mutator","splice","item","getOwnPropertyNames","Observer.prototype.walk","Observer.prototype.observeArray","items","Observer.prototype.convert","Observer.prototype.addVm","removeVm","Observer.prototype.removeVm","util","debounce","event","useCapture","addEventListener","off","removeEventListener","uid","IN_IDENT","IN_PATH","BEFORE_IDENT","INC_SUB_PATH_DEPTH","PUSH_SUB_PATH","allowedKeywords","improperKeywords","Watcher.prototype.get","beforeGet","deep","preProcess","_applyFilters","postProcess","afterGet","Watcher.prototype.set","forContext","$forContext","alias","_withLock","$key","$index","Watcher.prototype.beforeGet","Watcher.prototype.addDep","Watcher.prototype.afterGet","tmp","Watcher.prototype.update","sync","Error","q","user","Watcher.prototype.run","oldValue","evaluate","Watcher.prototype.evaluate","current","Watcher.prototype.depend","teardown","Watcher.prototype.teardown","_isBeingDestroyed","_vForRemoving","legend","tr","col","td","th","option","optgroup","thead","tbody","colgroup","caption","tfoot","g","defs","symbol","use","image","circle","ellipse","line","polygon","polyline","rect","t","placeholder","Fragment.prototype.callHook","hook","Fragment.prototype.beforeRemove","$destroy","_watcher","Fragment.prototype.destroy","FragmentFactory.prototype.create","uid$3","vFor","FOR","params","inMatch","itMatch","iterator","isOption","diff","updateRef","updateModel","convertedFromObject","fromObject","trackBy","oldFrags","frags","inDocument","$value","primitive","getCachedFrag","reused","fresh","removalIndex","totalRemoved","deleteCachedFrag","w","insertionIndex","prevEl","targetPrev","staggerCb","staggerAnchor","currentPrev","move","insert","parentScope","$els","cacheFrag","hash","refs","model","__v_model","forceUpdate","staggerAmount","getStagger","warnDuplicate","trans","stagger","_preProcess","_postProcess","Math","floor","unbind","vFor.warnDuplicate","vIf","IF","invalid","nextElementSibling","elseEl","elseFrag","elseFactory","handlers","text$2","isRange","number","composing","listener","focused","rawListener","this.rawListener","hasjQuery","jQuery","afterBind","radio","this.getValue","this.listener","checked","select","_this","this.forceUpdate","multiple","initValue","$on","selectedIndex","$off","checkbox","getBooleanValue","_trueValue","_falseValue","MODEL","checkFilters","hasRead","hasWrite","_unbind","read","write","esc","tab","enter","space","up","right","down","on$1","ON","acceptStatement","iframeBind","this.iframeBind","contentWindow","capture","stop","prevent","reset","prefixes","camelPrefixes","importantRE","propCache","testEl","style","cssText","handleObject","reduce","handleSingle","camel","upper","kebab","prefixed","isImportant","setProperty","xlinkRE","disallowedInterpAttrRE","attrWithPropsRE","enumeratedAttrRE","modelProps","text$1","swap","show","toggle","display","bind$1","BIND","attrValue","modelProp","setAttributeNS","xlinkNS","EL","cloak","$once","bindingModes","childKey","parentWatcher","childWatcher","transDurationProp","animDurationProp","raf","requestAnimationFrame","waitForTransitionStart","p$1","p$1.enter","cancelPending","callHookWithCb","enterCancelled","enterNextTick","p$1.enterNextTick","enterDone","getCssTransitionType","setupCssCb","p$1.enterDone","leave","p$1.leave","leaveCancelled","leaveDone","leaveNextTick","p$1.leaveNextTick","p$1.leaveDone","p$1.cancelPending","hasPending","p$1.callHook","p$1.callHookWithCb","p$1.getCssTransitionType","getBoundingClientRect","width","height","offsetWidth","getClientRects","inlineStyles","computedStyles","getComputedStyle","transDuration","animDuration","p$1.setupCssCb","onEnd","this.pendingCssCb","vClass","cleanup","prevKeys","COMPONENT","keepAlive","inlineTemplate","pendingComponentCb","Component","pendingRemovals","pendingRemovalCb","setComponent","invalidatePending","resolveComponent","mountComponent","unbuild","childVM","ComponentName","_resolveComponent","activateHooks","cached","getCached","newComponent","build","waitingFor","_updateRef","extraOptions","_linkerCachable","_ref","_isRouterView","_isFragment","defer","_inactive","_cleanup","transitionMode","$before","transition$1","TRANSITION","oldId","compiler","eventRE","Directive.prototype._bind","_setupParams","_checkStatement","_update","this._update","oldVal","Directive.prototype._setupParams","mappedKey","_setupParamWatcher","Directive.prototype._setupParamWatcher","unwatch","$watch","paramWatchers","immediate","_paramUnwatchFns","Directive.prototype._checkStatement","$event","Directive.prototype.set","Directive.prototype._withLock","Directive.prototype.on","Directive.prototype._teardown","listeners","unwatchFns","filterRE$1","initMixin","Vue.prototype._init","$root","$children","_uid","_events","_eventsCount","_fragment","_fragmentStart","_fragmentEnd","_isDestroyed","_isReady","_unlinkFn","_initState","_initEvents","$mount","stateMixin","makeComputedGetter","owner","computedGetter","newData","_setData","Vue.prototype._initState","_initProps","_initMeta","_initMethods","_initData","_initComputed","Vue.prototype._initProps","_propsUnlinkFn","Vue.prototype._initData","dataFn","Vue.prototype._setData","oldData","Vue.prototype._proxy","proxyGetter","proxySetter","Vue.prototype._unproxy","Vue.prototype._digest","Vue.prototype._initComputed","userDef","Vue.prototype._initMethods","Vue.prototype._initMeta","metas","_meta","eventsMixin","registerCallbacks","register","onAttached","callAttach","onDetached","callDetach","Vue.prototype._initEvents","_fromParent","_initDOMHooks","Vue.prototype._initDOMHooks","Vue.prototype._callHook","$emit","lifecycleMixin","Vue.prototype._updateRef","_compile","Vue.prototype._compile","_initElement","rootLinker","contentLinkFn","ctor","rootUnlinkFn","contentUnlinkFn","this._unlinkFn","Vue.prototype._initElement","Vue.prototype._bindDir","_destroy","Vue.prototype._destroy","deferCleanup","destroyReady","pendingRemoval","Vue.prototype._cleanup","miscMixin","Vue.prototype._applyFilters","offset","Vue.prototype._resolveComponent","resolved","requested","pendingCallbacks","cbs","resolve","reject","reason","dataAPI","Vue.prototype.$get","asStatement","statementHandler","$arguments","Vue.prototype.$set","$delete","Vue.prototype.$delete","Vue.prototype.$watch","unwatchFn","Vue.prototype.$eval","$interpolate","Vue.prototype.$interpolate","$log","Vue.prototype.$log","log","domAPI","op1","op2","targetIsDetached","shouldCallHook","append","beforeWithCb","removeWithCb","$nextTick","Vue.prototype.$nextTick","$appendTo","Vue.prototype.$appendTo","$prependTo","Vue.prototype.$prependTo","Vue.prototype.$before","$after","Vue.prototype.$after","Vue.prototype.$remove","realCb","eventsAPI","modifyListenerCount","count","hookRE","Vue.prototype.$on","Vue.prototype.$once","Vue.prototype.$off","Vue.prototype.$emit","isSource","shouldPropagate","hasParentCbs","$broadcast","Vue.prototype.$broadcast","source","$dispatch","Vue.prototype.$dispatch","lifecycleAPI","Vue.prototype.$mount","Vue.prototype.$destroy","$compile","Vue.prototype.$compile","elementDirectives","slot","SLOT","fallback","elseBlock","PARTIAL","convertArray","digitsRE","orderBy","baseCompare","sortKeyIndex","sortKey","sortKeys","order","comparator","firstArg","filterBy","delimiter","limitBy","json","indent","capitalize","uppercase","lowercase","currency","_currency","decimals","parseFloat","isFinite","stringified","abs","toFixed","_int","_float","sign","pluralize","delay","installGlobalAPI","transitions","partials","parsers","Vue.extend","extendOptions","Super","isFirstExtend","_Ctor","Sub","Vue.use","plugin","installed","unshift","install","Vue.mixin","definition","version","createFnActivateV1","fnActivate","createFnDeactivateV1","fnDeactivate","createFnActivateV2","route","redirect","createFnDeactivateV2","fillHookOpts","opts","vue2","beforeRouteEnter","beforeRouteLeave","canDeactivate","fillOpts","pt","opts.data","__WEBPACK_IMPORTED_MODULE_0_vue__","clazz","vueVersion","__WEBPACK_IMPORTED_MODULE_0_vuets__","Hello","deactivate","Hello.activate","Hello.deactivate","Hello.prototype.append","Home","Home.activate","Home.deactivate","Home.prototype.append","__vue_script__","__vue_template__","default","Target","matcher","delegate","Matcher","routes","generateMatch","startingPath","nestedCallback","fullPath","eachRoute","baseRoute","callback","binding","routeArray","len","substr","tryDecode","uri","asComponent","decodeURIComponent","decodeURI","noWarning","StaticSegment","string","DynamicSegment","StarSegment","EpsilonSegment","State","charSpec","nextStates","sortSolutions","states","specificity","RecognizeResults","queryParams","addSegment","currentState","segment","eachChar","decodeQueryParamPart","part","warn$1","resolvePath","base","relative","stack","pop","segments","isPromise","then","getRouteConfig","resolveAsyncComponent","resolver","exports$1","mapParams","genQuery","canReuse","view","canReuseFn","fromComponent","expectBoolean","canActivate","aborted","callHooks","reuse","activateQueue","activateHook","dataHook","waitForData","activated","loading","$loadingRouteData","saveChildView","_routerView","cachedChildView","_keepAliveRouterView","childView","afterData","router","_rendered","_transitionOnLoad","setCurrent","afterActivate","loadData","postActivate","processData","promises","resolvedVal","all","applyOverride","_Vue$util","root","_parent","$router","$route","_children","_defineMeta","hooksToMergeRE","strats.route","View","componentDef","viewDef","_isDynamicLiteral","parentView","_rootView","_currentTransition","elementDirective","Link","toggleClasses","onPriority","activeId","childLinks","link","existingId","LINK_UPDATE","this.cb","activeIds","updateClasses","onRouteUpdate","onClick","exact","prevActiveClass","activeClass","defaultPrevented","metaKey","ctrlKey","shiftKey","button","go","protocol","location","hostname","port","pathname","history","rootRE","newPath","stringifyPath","updateActiveMatch","updateHref","activeRE","queryStringRE","isAbsolute","href","formatPath","_linkActiveClass","dest","trailingSlashRE","guardComponent","comp","babelHelpers","babelHelpers.classCallCheck","instance","Constructor","TypeError","willAddRoute","addChild","contextEntered","escapeRegex","validChars","regex","generate","invalidChars","repeat","isEqual","state","chars","returned","proto","F","RouteRecognizer","rootState","allSegments","isEmpty","results","as","handlersFor","hasRoute","output","generateQueryString","pairs","pair","encodeURIComponent","arrayPair","parseQueryString","queryString","keyLength","recognize","pathLen","isSlashDropped","queryStart","solutions","captures","currentCapture","isDynamic","addRouteCallback","hashRE","HTML5History","onChange","classCallCheck","baseEl","HTML5History.prototype.start","url","HTML5History.prototype.stop","HTML5History.prototype.go","replaceState","pos","x","pageXOffset","y","pageYOffset","pushState","hashMatch","HTML5History.prototype.formatPath","HashHistory","hashbang","HashHistory.prototype.start","formattedPath","HashHistory.prototype.stop","HashHistory.prototype.go","HashHistory.prototype.formatPath","isAbsoloute","AbstractHistory","currentPath","AbstractHistory.prototype.start","AbstractHistory.prototype.stop","AbstractHistory.prototype.go","AbstractHistory.prototype.formatPath","RouteTransition","abort","RouteTransition.prototype.abort","RouteTransition.prototype.redirect","RouteTransition.prototype.start","deactivateQueue","reverseDeactivateQueue","reverse","reuseQueue","runQueue","_onTransitionValidated","_view","RouteTransition.prototype.runQueue","step","RouteTransition.prototype.callHook","_ref$expectBoolean","_ref$postActivate","nextCalled","onError","err","_suppress","onPromiseError","nextWithBoolean","ok","nextWithData","exposed","RouteTransition.prototype.callHooks","internalKeysRE","Route","_recognizer","_notFoundHandler","historyBackends","abstract","html5","Router","_ref$hashbang","_ref$abstract","_ref$history","_ref$saveScrollPosition","saveScrollPosition","_ref$transitionOnLoad","transitionOnLoad","_ref$suppressTransitionError","suppressTransitionError","_ref$root","_ref$linkActiveClass","linkActiveClass","app","_guardRecognizer","_started","_startCb","_currentRoute","_notFoundRedirect","_previousTransition","_beforeEachHooks","_afterEachHooks","_root","_abstract","_hashbang","hasPushState","_history","_historyFallback","History","_match","_saveScrollPosition","Router.prototype.map","_map","Router.prototype.on","rootPath","_notFound","_addRoute","Router.prototype.redirect","_addRedirect","Router.prototype.alias","_addAlias","beforeEach","Router.prototype.beforeEach","afterEach","Router.prototype.afterEach","Router.prototype.go","Router.prototype.replace","Router.prototype.start","App","_appContainer","Ctor","_appConstructor","_location","assign","Router.prototype.stop","Router.prototype.stringifyPath","generatedPath","currentParams","targetParams","encodeURI","Router.prototype._addRoute","subRoutes","subPath","Router.prototype._notFound","Router.prototype._addRedirect","redirectPath","_addGuard","Router.prototype._addAlias","aliasPath","Router.prototype._addGuard","mappedPath","_handler","_this2","realPath","_checkGuard","Router.prototype._checkGuard","Router.prototype._match","_this3","currentRoute","currentTransition","_prevTransition","beforeHooks","startTransition","_postTransition","Router.prototype._onTransitionValidated","Router.prototype._postTransition","scrollTo","scrollX","offsetTop","Router.install","externalVue","module.exports","list.toString","list.i","mediaQuery","alreadyImportedModules","addStylesToDom","styles","domStyle","stylesInDom","parts","addStyle","listToStyles","newStyles","css","media","sourceMap","createStyleElement","styleElement","getHeadElement","lastStyleElementInsertedAtTop","styleElementsInsertedAtTop","insertAt","singleton","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","applyToTag","idx","updateStyle","newObj","styleSheet","replaceText","cssNode","sources","btoa","unescape","memoize","memo","isOldIE","getElementsByTagName","DEBUG","newList","mayRemove","textStore","replacement","locals","eval","__WEBPACK_IMPORTED_MODULE_1_vue_router__","__WEBPACK_IMPORTED_MODULE_2__home___","__WEBPACK_IMPORTED_MODULE_3__Hello__"],"mappings":"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","file":"build.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmory imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmory exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tObject.defineProperty(exports, name, {\n/******/ \t\t\tconfigurable: false,\n/******/ \t\t\tenumerable: true,\n/******/ \t\t\tget: getter\n/******/ \t\t});\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 13);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/*!\n * Vue.js v1.0.26\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n(function (global, factory) {\n   true ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Vue = factory());\n}(this, function () { 'use strict';\n\n  function set(obj, key, val) {\n    if (hasOwn(obj, key)) {\n      obj[key] = val;\n      return;\n    }\n    if (obj._isVue) {\n      set(obj._data, key, val);\n      return;\n    }\n    var ob = obj.__ob__;\n    if (!ob) {\n      obj[key] = val;\n      return;\n    }\n    ob.convert(key, val);\n    ob.dep.notify();\n    if (ob.vms) {\n      var i = ob.vms.length;\n      while (i--) {\n        var vm = ob.vms[i];\n        vm._proxy(key);\n        vm._digest();\n      }\n    }\n    return val;\n  }\n\n  /**\n   * Delete a property and trigger change if necessary.\n   *\n   * @param {Object} obj\n   * @param {String} key\n   */\n\n  function del(obj, key) {\n    if (!hasOwn(obj, key)) {\n      return;\n    }\n    delete obj[key];\n    var ob = obj.__ob__;\n    if (!ob) {\n      if (obj._isVue) {\n        delete obj._data[key];\n        obj._digest();\n      }\n      return;\n    }\n    ob.dep.notify();\n    if (ob.vms) {\n      var i = ob.vms.length;\n      while (i--) {\n        var vm = ob.vms[i];\n        vm._unproxy(key);\n        vm._digest();\n      }\n    }\n  }\n\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  /**\n   * Check whether the object has the property.\n   *\n   * @param {Object} obj\n   * @param {String} key\n   * @return {Boolean}\n   */\n\n  function hasOwn(obj, key) {\n    return hasOwnProperty.call(obj, key);\n  }\n\n  /**\n   * Check if an expression is a literal value.\n   *\n   * @param {String} exp\n   * @return {Boolean}\n   */\n\n  var literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\n  function isLiteral(exp) {\n    return literalValueRE.test(exp);\n  }\n\n  /**\n   * Check if a string starts with $ or _\n   *\n   * @param {String} str\n   * @return {Boolean}\n   */\n\n  function isReserved(str) {\n    var c = (str + '').charCodeAt(0);\n    return c === 0x24 || c === 0x5F;\n  }\n\n  /**\n   * Guard text output, make sure undefined outputs\n   * empty string\n   *\n   * @param {*} value\n   * @return {String}\n   */\n\n  function _toString(value) {\n    return value == null ? '' : value.toString();\n  }\n\n  /**\n   * Check and convert possible numeric strings to numbers\n   * before setting back to data\n   *\n   * @param {*} value\n   * @return {*|Number}\n   */\n\n  function toNumber(value) {\n    if (typeof value !== 'string') {\n      return value;\n    } else {\n      var parsed = Number(value);\n      return isNaN(parsed) ? value : parsed;\n    }\n  }\n\n  /**\n   * Convert string boolean literals into real booleans.\n   *\n   * @param {*} value\n   * @return {*|Boolean}\n   */\n\n  function toBoolean(value) {\n    return value === 'true' ? true : value === 'false' ? false : value;\n  }\n\n  /**\n   * Strip quotes from a string\n   *\n   * @param {String} str\n   * @return {String | false}\n   */\n\n  function stripQuotes(str) {\n    var a = str.charCodeAt(0);\n    var b = str.charCodeAt(str.length - 1);\n    return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n  }\n\n  /**\n   * Camelize a hyphen-delmited string.\n   *\n   * @param {String} str\n   * @return {String}\n   */\n\n  var camelizeRE = /-(\\w)/g;\n\n  function camelize(str) {\n    return str.replace(camelizeRE, toUpper);\n  }\n\n  function toUpper(_, c) {\n    return c ? c.toUpperCase() : '';\n  }\n\n  /**\n   * Hyphenate a camelCase string.\n   *\n   * @param {String} str\n   * @return {String}\n   */\n\n  var hyphenateRE = /([a-z\\d])([A-Z])/g;\n\n  function hyphenate(str) {\n    return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n  }\n\n  /**\n   * Converts hyphen/underscore/slash delimitered names into\n   * camelized classNames.\n   *\n   * e.g. my-component => MyComponent\n   *      some_else    => SomeElse\n   *      some/comp    => SomeComp\n   *\n   * @param {String} str\n   * @return {String}\n   */\n\n  var classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\n  function classify(str) {\n    return str.replace(classifyRE, toUpper);\n  }\n\n  /**\n   * Simple bind, faster than native\n   *\n   * @param {Function} fn\n   * @param {Object} ctx\n   * @return {Function}\n   */\n\n  function bind(fn, ctx) {\n    return function (a) {\n      var l = arguments.length;\n      return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n    };\n  }\n\n  /**\n   * Convert an Array-like object to a real Array.\n   *\n   * @param {Array-like} list\n   * @param {Number} [start] - start index\n   * @return {Array}\n   */\n\n  function toArray(list, start) {\n    start = start || 0;\n    var i = list.length - start;\n    var ret = new Array(i);\n    while (i--) {\n      ret[i] = list[i + start];\n    }\n    return ret;\n  }\n\n  /**\n   * Mix properties into target object.\n   *\n   * @param {Object} to\n   * @param {Object} from\n   */\n\n  function extend(to, from) {\n    var keys = Object.keys(from);\n    var i = keys.length;\n    while (i--) {\n      to[keys[i]] = from[keys[i]];\n    }\n    return to;\n  }\n\n  /**\n   * Quick object check - this is primarily used to tell\n   * Objects from primitive values when we know the value\n   * is a JSON-compliant type.\n   *\n   * @param {*} obj\n   * @return {Boolean}\n   */\n\n  function isObject(obj) {\n    return obj !== null && typeof obj === 'object';\n  }\n\n  /**\n   * Strict object type check. Only returns true\n   * for plain JavaScript objects.\n   *\n   * @param {*} obj\n   * @return {Boolean}\n   */\n\n  var toString = Object.prototype.toString;\n  var OBJECT_STRING = '[object Object]';\n\n  function isPlainObject(obj) {\n    return toString.call(obj) === OBJECT_STRING;\n  }\n\n  /**\n   * Array type check.\n   *\n   * @param {*} obj\n   * @return {Boolean}\n   */\n\n  var isArray = Array.isArray;\n\n  /**\n   * Define a property.\n   *\n   * @param {Object} obj\n   * @param {String} key\n   * @param {*} val\n   * @param {Boolean} [enumerable]\n   */\n\n  function def(obj, key, val, enumerable) {\n    Object.defineProperty(obj, key, {\n      value: val,\n      enumerable: !!enumerable,\n      writable: true,\n      configurable: true\n    });\n  }\n\n  /**\n   * Debounce a function so it only gets called after the\n   * input stops arriving after the given wait period.\n   *\n   * @param {Function} func\n   * @param {Number} wait\n   * @return {Function} - the debounced function\n   */\n\n  function _debounce(func, wait) {\n    var timeout, args, context, timestamp, result;\n    var later = function later() {\n      var last = Date.now() - timestamp;\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      }\n    };\n    return function () {\n      context = this;\n      args = arguments;\n      timestamp = Date.now();\n      if (!timeout) {\n        timeout = setTimeout(later, wait);\n      }\n      return result;\n    };\n  }\n\n  /**\n   * Manual indexOf because it's slightly faster than\n   * native.\n   *\n   * @param {Array} arr\n   * @param {*} obj\n   */\n\n  function indexOf(arr, obj) {\n    var i = arr.length;\n    while (i--) {\n      if (arr[i] === obj) return i;\n    }\n    return -1;\n  }\n\n  /**\n   * Make a cancellable version of an async callback.\n   *\n   * @param {Function} fn\n   * @return {Function}\n   */\n\n  function cancellable(fn) {\n    var cb = function cb() {\n      if (!cb.cancelled) {\n        return fn.apply(this, arguments);\n      }\n    };\n    cb.cancel = function () {\n      cb.cancelled = true;\n    };\n    return cb;\n  }\n\n  /**\n   * Check if two values are loosely equal - that is,\n   * if they are plain objects, do they have the same shape?\n   *\n   * @param {*} a\n   * @param {*} b\n   * @return {Boolean}\n   */\n\n  function looseEqual(a, b) {\n    /* eslint-disable eqeqeq */\n    return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n    /* eslint-enable eqeqeq */\n  }\n\n  var hasProto = ('__proto__' in {});\n\n  // Browser environment sniffing\n  var inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\n  // detect devtools\n  var devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n  // UA sniffing for working around browser-specific quirks\n  var UA = inBrowser && window.navigator.userAgent.toLowerCase();\n  var isIE = UA && UA.indexOf('trident') > 0;\n  var isIE9 = UA && UA.indexOf('msie 9.0') > 0;\n  var isAndroid = UA && UA.indexOf('android') > 0;\n  var isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\n  var iosVersionMatch = isIos && UA.match(/os ([\\d_]+)/);\n  var iosVersion = iosVersionMatch && iosVersionMatch[1].split('_');\n\n  // detecting iOS UIWebView by indexedDB\n  var hasMutationObserverBug = iosVersion && Number(iosVersion[0]) >= 9 && Number(iosVersion[1]) >= 3 && !window.indexedDB;\n\n  var transitionProp = undefined;\n  var transitionEndEvent = undefined;\n  var animationProp = undefined;\n  var animationEndEvent = undefined;\n\n  // Transition property/event sniffing\n  if (inBrowser && !isIE9) {\n    var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n    var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n    transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n    transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n    animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n    animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n  }\n\n  /**\n   * Defer a task to execute it asynchronously. Ideally this\n   * should be executed as a microtask, so we leverage\n   * MutationObserver if it's available, and fallback to\n   * setTimeout(0).\n   *\n   * @param {Function} cb\n   * @param {Object} ctx\n   */\n\n  var nextTick = (function () {\n    var callbacks = [];\n    var pending = false;\n    var timerFunc;\n    function nextTickHandler() {\n      pending = false;\n      var copies = callbacks.slice(0);\n      callbacks = [];\n      for (var i = 0; i < copies.length; i++) {\n        copies[i]();\n      }\n    }\n\n    /* istanbul ignore if */\n    if (typeof MutationObserver !== 'undefined' && !hasMutationObserverBug) {\n      var counter = 1;\n      var observer = new MutationObserver(nextTickHandler);\n      var textNode = document.createTextNode(counter);\n      observer.observe(textNode, {\n        characterData: true\n      });\n      timerFunc = function () {\n        counter = (counter + 1) % 2;\n        textNode.data = counter;\n      };\n    } else {\n      // webpack attempts to inject a shim for setImmediate\n      // if it is used as a global, so we have to work around that to\n      // avoid bundling unnecessary code.\n      var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n      timerFunc = context.setImmediate || setTimeout;\n    }\n    return function (cb, ctx) {\n      var func = ctx ? function () {\n        cb.call(ctx);\n      } : cb;\n      callbacks.push(func);\n      if (pending) return;\n      pending = true;\n      timerFunc(nextTickHandler, 0);\n    };\n  })();\n\n  var _Set = undefined;\n  /* istanbul ignore if */\n  if (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n    // use native Set when available.\n    _Set = Set;\n  } else {\n    // a non-standard Set polyfill that only works with primitive keys.\n    _Set = function () {\n      this.set = Object.create(null);\n    };\n    _Set.prototype.has = function (key) {\n      return this.set[key] !== undefined;\n    };\n    _Set.prototype.add = function (key) {\n      this.set[key] = 1;\n    };\n    _Set.prototype.clear = function () {\n      this.set = Object.create(null);\n    };\n  }\n\n  function Cache(limit) {\n    this.size = 0;\n    this.limit = limit;\n    this.head = this.tail = undefined;\n    this._keymap = Object.create(null);\n  }\n\n  var p = Cache.prototype;\n\n  /**\n   * Put <value> into the cache associated with <key>.\n   * Returns the entry which was removed to make room for\n   * the new entry. Otherwise undefined is returned.\n   * (i.e. if there was enough room already).\n   *\n   * @param {String} key\n   * @param {*} value\n   * @return {Entry|undefined}\n   */\n\n  p.put = function (key, value) {\n    var removed;\n\n    var entry = this.get(key, true);\n    if (!entry) {\n      if (this.size === this.limit) {\n        removed = this.shift();\n      }\n      entry = {\n        key: key\n      };\n      this._keymap[key] = entry;\n      if (this.tail) {\n        this.tail.newer = entry;\n        entry.older = this.tail;\n      } else {\n        this.head = entry;\n      }\n      this.tail = entry;\n      this.size++;\n    }\n    entry.value = value;\n\n    return removed;\n  };\n\n  /**\n   * Purge the least recently used (oldest) entry from the\n   * cache. Returns the removed entry or undefined if the\n   * cache was empty.\n   */\n\n  p.shift = function () {\n    var entry = this.head;\n    if (entry) {\n      this.head = this.head.newer;\n      this.head.older = undefined;\n      entry.newer = entry.older = undefined;\n      this._keymap[entry.key] = undefined;\n      this.size--;\n    }\n    return entry;\n  };\n\n  /**\n   * Get and register recent use of <key>. Returns the value\n   * associated with <key> or undefined if not in cache.\n   *\n   * @param {String} key\n   * @param {Boolean} returnEntry\n   * @return {Entry|*}\n   */\n\n  p.get = function (key, returnEntry) {\n    var entry = this._keymap[key];\n    if (entry === undefined) return;\n    if (entry === this.tail) {\n      return returnEntry ? entry : entry.value;\n    }\n    // HEAD--------------TAIL\n    //   <.older   .newer>\n    //  <--- add direction --\n    //   A  B  C  <D>  E\n    if (entry.newer) {\n      if (entry === this.head) {\n        this.head = entry.newer;\n      }\n      entry.newer.older = entry.older; // C <-- E.\n    }\n    if (entry.older) {\n      entry.older.newer = entry.newer; // C. --> E\n    }\n    entry.newer = undefined; // D --x\n    entry.older = this.tail; // D. --> E\n    if (this.tail) {\n      this.tail.newer = entry; // E. <-- D\n    }\n    this.tail = entry;\n    return returnEntry ? entry : entry.value;\n  };\n\n  var cache$1 = new Cache(1000);\n  var filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\n  var reservedArgRE = /^in$|^-?\\d+/;\n\n  /**\n   * Parser state\n   */\n\n  var str;\n  var dir;\n  var c;\n  var prev;\n  var i;\n  var l;\n  var lastFilterIndex;\n  var inSingle;\n  var inDouble;\n  var curly;\n  var square;\n  var paren;\n  /**\n   * Push a filter to the current directive object\n   */\n\n  function pushFilter() {\n    var exp = str.slice(lastFilterIndex, i).trim();\n    var filter;\n    if (exp) {\n      filter = {};\n      var tokens = exp.match(filterTokenRE);\n      filter.name = tokens[0];\n      if (tokens.length > 1) {\n        filter.args = tokens.slice(1).map(processFilterArg);\n      }\n    }\n    if (filter) {\n      (dir.filters = dir.filters || []).push(filter);\n    }\n    lastFilterIndex = i + 1;\n  }\n\n  /**\n   * Check if an argument is dynamic and strip quotes.\n   *\n   * @param {String} arg\n   * @return {Object}\n   */\n\n  function processFilterArg(arg) {\n    if (reservedArgRE.test(arg)) {\n      return {\n        value: toNumber(arg),\n        dynamic: false\n      };\n    } else {\n      var stripped = stripQuotes(arg);\n      var dynamic = stripped === arg;\n      return {\n        value: dynamic ? arg : stripped,\n        dynamic: dynamic\n      };\n    }\n  }\n\n  /**\n   * Parse a directive value and extract the expression\n   * and its filters into a descriptor.\n   *\n   * Example:\n   *\n   * \"a + 1 | uppercase\" will yield:\n   * {\n   *   expression: 'a + 1',\n   *   filters: [\n   *     { name: 'uppercase', args: null }\n   *   ]\n   * }\n   *\n   * @param {String} s\n   * @return {Object}\n   */\n\n  function parseDirective(s) {\n    var hit = cache$1.get(s);\n    if (hit) {\n      return hit;\n    }\n\n    // reset parser state\n    str = s;\n    inSingle = inDouble = false;\n    curly = square = paren = 0;\n    lastFilterIndex = 0;\n    dir = {};\n\n    for (i = 0, l = str.length; i < l; i++) {\n      prev = c;\n      c = str.charCodeAt(i);\n      if (inSingle) {\n        // check single quote\n        if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n      } else if (inDouble) {\n        // check double quote\n        if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n      } else if (c === 0x7C && // pipe\n      str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n        if (dir.expression == null) {\n          // first filter, end of expression\n          lastFilterIndex = i + 1;\n          dir.expression = str.slice(0, i).trim();\n        } else {\n          // already has filter\n          pushFilter();\n        }\n      } else {\n        switch (c) {\n          case 0x22:\n            inDouble = true;break; // \"\n          case 0x27:\n            inSingle = true;break; // '\n          case 0x28:\n            paren++;break; // (\n          case 0x29:\n            paren--;break; // )\n          case 0x5B:\n            square++;break; // [\n          case 0x5D:\n            square--;break; // ]\n          case 0x7B:\n            curly++;break; // {\n          case 0x7D:\n            curly--;break; // }\n        }\n      }\n    }\n\n    if (dir.expression == null) {\n      dir.expression = str.slice(0, i).trim();\n    } else if (lastFilterIndex !== 0) {\n      pushFilter();\n    }\n\n    cache$1.put(s, dir);\n    return dir;\n  }\n\nvar directive = Object.freeze({\n    parseDirective: parseDirective\n  });\n\n  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n  var cache = undefined;\n  var tagRE = undefined;\n  var htmlRE = undefined;\n  /**\n   * Escape a string so it can be used in a RegExp\n   * constructor.\n   *\n   * @param {String} str\n   */\n\n  function escapeRegex(str) {\n    return str.replace(regexEscapeRE, '\\\\$&');\n  }\n\n  function compileRegex() {\n    var open = escapeRegex(config.delimiters[0]);\n    var close = escapeRegex(config.delimiters[1]);\n    var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n    var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n    tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n    htmlRE = new RegExp('^' + unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '$');\n    // reset cache\n    cache = new Cache(1000);\n  }\n\n  /**\n   * Parse a template text string into an array of tokens.\n   *\n   * @param {String} text\n   * @return {Array<Object> | null}\n   *               - {String} type\n   *               - {String} value\n   *               - {Boolean} [html]\n   *               - {Boolean} [oneTime]\n   */\n\n  function parseText(text) {\n    if (!cache) {\n      compileRegex();\n    }\n    var hit = cache.get(text);\n    if (hit) {\n      return hit;\n    }\n    if (!tagRE.test(text)) {\n      return null;\n    }\n    var tokens = [];\n    var lastIndex = tagRE.lastIndex = 0;\n    var match, index, html, value, first, oneTime;\n    /* eslint-disable no-cond-assign */\n    while (match = tagRE.exec(text)) {\n      /* eslint-enable no-cond-assign */\n      index = match.index;\n      // push text token\n      if (index > lastIndex) {\n        tokens.push({\n          value: text.slice(lastIndex, index)\n        });\n      }\n      // tag token\n      html = htmlRE.test(match[0]);\n      value = html ? match[1] : match[2];\n      first = value.charCodeAt(0);\n      oneTime = first === 42; // *\n      value = oneTime ? value.slice(1) : value;\n      tokens.push({\n        tag: true,\n        value: value.trim(),\n        html: html,\n        oneTime: oneTime\n      });\n      lastIndex = index + match[0].length;\n    }\n    if (lastIndex < text.length) {\n      tokens.push({\n        value: text.slice(lastIndex)\n      });\n    }\n    cache.put(text, tokens);\n    return tokens;\n  }\n\n  /**\n   * Format a list of tokens into an expression.\n   * e.g. tokens parsed from 'a {{b}} c' can be serialized\n   * into one single expression as '\"a \" + b + \" c\"'.\n   *\n   * @param {Array} tokens\n   * @param {Vue} [vm]\n   * @return {String}\n   */\n\n  function tokensToExp(tokens, vm) {\n    if (tokens.length > 1) {\n      return tokens.map(function (token) {\n        return formatToken(token, vm);\n      }).join('+');\n    } else {\n      return formatToken(tokens[0], vm, true);\n    }\n  }\n\n  /**\n   * Format a single token.\n   *\n   * @param {Object} token\n   * @param {Vue} [vm]\n   * @param {Boolean} [single]\n   * @return {String}\n   */\n\n  function formatToken(token, vm, single) {\n    return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n  }\n\n  /**\n   * For an attribute with multiple interpolation tags,\n   * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n   * the whole thing into a single watchable expression, we\n   * have to inline those filters. This function does exactly\n   * that. This is a bit hacky but it avoids heavy changes\n   * to directive parser and watcher mechanism.\n   *\n   * @param {String} exp\n   * @param {Boolean} single\n   * @return {String}\n   */\n\n  var filterRE = /[^|]\\|[^|]/;\n  function inlineFilters(exp, single) {\n    if (!filterRE.test(exp)) {\n      return single ? exp : '(' + exp + ')';\n    } else {\n      var dir = parseDirective(exp);\n      if (!dir.filters) {\n        return '(' + exp + ')';\n      } else {\n        return 'this._applyFilters(' + dir.expression + // value\n        ',null,' + // oldValue (null for read)\n        JSON.stringify(dir.filters) + // filter descriptors\n        ',false)'; // write?\n      }\n    }\n  }\n\nvar text = Object.freeze({\n    compileRegex: compileRegex,\n    parseText: parseText,\n    tokensToExp: tokensToExp\n  });\n\n  var delimiters = ['{{', '}}'];\n  var unsafeDelimiters = ['{{{', '}}}'];\n\n  var config = Object.defineProperties({\n\n    /**\n     * Whether to print debug messages.\n     * Also enables stack trace for warnings.\n     *\n     * @type {Boolean}\n     */\n\n    debug: false,\n\n    /**\n     * Whether to suppress warnings.\n     *\n     * @type {Boolean}\n     */\n\n    silent: false,\n\n    /**\n     * Whether to use async rendering.\n     */\n\n    async: true,\n\n    /**\n     * Whether to warn against errors caught when evaluating\n     * expressions.\n     */\n\n    warnExpressionErrors: true,\n\n    /**\n     * Whether to allow devtools inspection.\n     * Disabled by default in production builds.\n     */\n\n    devtools: 'development' !== 'production',\n\n    /**\n     * Internal flag to indicate the delimiters have been\n     * changed.\n     *\n     * @type {Boolean}\n     */\n\n    _delimitersChanged: true,\n\n    /**\n     * List of asset types that a component can own.\n     *\n     * @type {Array}\n     */\n\n    _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n    /**\n     * prop binding modes\n     */\n\n    _propBindingModes: {\n      ONE_WAY: 0,\n      TWO_WAY: 1,\n      ONE_TIME: 2\n    },\n\n    /**\n     * Max circular updates allowed in a batcher flush cycle.\n     */\n\n    _maxUpdateCount: 100\n\n  }, {\n    delimiters: { /**\n                   * Interpolation delimiters. Changing these would trigger\n                   * the text parser to re-compile the regular expressions.\n                   *\n                   * @type {Array<String>}\n                   */\n\n      get: function get() {\n        return delimiters;\n      },\n      set: function set(val) {\n        delimiters = val;\n        compileRegex();\n      },\n      configurable: true,\n      enumerable: true\n    },\n    unsafeDelimiters: {\n      get: function get() {\n        return unsafeDelimiters;\n      },\n      set: function set(val) {\n        unsafeDelimiters = val;\n        compileRegex();\n      },\n      configurable: true,\n      enumerable: true\n    }\n  });\n\n  var warn = undefined;\n  var formatComponentName = undefined;\n\n  if (true) {\n    (function () {\n      var hasConsole = typeof console !== 'undefined';\n\n      warn = function (msg, vm) {\n        if (hasConsole && !config.silent) {\n          console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n        }\n      };\n\n      formatComponentName = function (vm) {\n        var name = vm._isVue ? vm.$options.name : vm.name;\n        return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n      };\n    })();\n  }\n\n  /**\n   * Append with transition.\n   *\n   * @param {Element} el\n   * @param {Element} target\n   * @param {Vue} vm\n   * @param {Function} [cb]\n   */\n\n  function appendWithTransition(el, target, vm, cb) {\n    applyTransition(el, 1, function () {\n      target.appendChild(el);\n    }, vm, cb);\n  }\n\n  /**\n   * InsertBefore with transition.\n   *\n   * @param {Element} el\n   * @param {Element} target\n   * @param {Vue} vm\n   * @param {Function} [cb]\n   */\n\n  function beforeWithTransition(el, target, vm, cb) {\n    applyTransition(el, 1, function () {\n      before(el, target);\n    }, vm, cb);\n  }\n\n  /**\n   * Remove with transition.\n   *\n   * @param {Element} el\n   * @param {Vue} vm\n   * @param {Function} [cb]\n   */\n\n  function removeWithTransition(el, vm, cb) {\n    applyTransition(el, -1, function () {\n      remove(el);\n    }, vm, cb);\n  }\n\n  /**\n   * Apply transitions with an operation callback.\n   *\n   * @param {Element} el\n   * @param {Number} direction\n   *                  1: enter\n   *                 -1: leave\n   * @param {Function} op - the actual DOM operation\n   * @param {Vue} vm\n   * @param {Function} [cb]\n   */\n\n  function applyTransition(el, direction, op, vm, cb) {\n    var transition = el.__v_trans;\n    if (!transition ||\n    // skip if there are no js hooks and CSS transition is\n    // not supported\n    !transition.hooks && !transitionEndEvent ||\n    // skip transitions for initial compile\n    !vm._isCompiled ||\n    // if the vm is being manipulated by a parent directive\n    // during the parent's compilation phase, skip the\n    // animation.\n    vm.$parent && !vm.$parent._isCompiled) {\n      op();\n      if (cb) cb();\n      return;\n    }\n    var action = direction > 0 ? 'enter' : 'leave';\n    transition[action](op, cb);\n  }\n\nvar transition = Object.freeze({\n    appendWithTransition: appendWithTransition,\n    beforeWithTransition: beforeWithTransition,\n    removeWithTransition: removeWithTransition,\n    applyTransition: applyTransition\n  });\n\n  /**\n   * Query an element selector if it's not an element already.\n   *\n   * @param {String|Element} el\n   * @return {Element}\n   */\n\n  function query(el) {\n    if (typeof el === 'string') {\n      var selector = el;\n      el = document.querySelector(el);\n      if (!el) {\n        'development' !== 'production' && warn('Cannot find element: ' + selector);\n      }\n    }\n    return el;\n  }\n\n  /**\n   * Check if a node is in the document.\n   * Note: document.documentElement.contains should work here\n   * but always returns false for comment nodes in phantomjs,\n   * making unit tests difficult. This is fixed by doing the\n   * contains() check on the node's parentNode instead of\n   * the node itself.\n   *\n   * @param {Node} node\n   * @return {Boolean}\n   */\n\n  function inDoc(node) {\n    if (!node) return false;\n    var doc = node.ownerDocument.documentElement;\n    var parent = node.parentNode;\n    return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n  }\n\n  /**\n   * Get and remove an attribute from a node.\n   *\n   * @param {Node} node\n   * @param {String} _attr\n   */\n\n  function getAttr(node, _attr) {\n    var val = node.getAttribute(_attr);\n    if (val !== null) {\n      node.removeAttribute(_attr);\n    }\n    return val;\n  }\n\n  /**\n   * Get an attribute with colon or v-bind: prefix.\n   *\n   * @param {Node} node\n   * @param {String} name\n   * @return {String|null}\n   */\n\n  function getBindAttr(node, name) {\n    var val = getAttr(node, ':' + name);\n    if (val === null) {\n      val = getAttr(node, 'v-bind:' + name);\n    }\n    return val;\n  }\n\n  /**\n   * Check the presence of a bind attribute.\n   *\n   * @param {Node} node\n   * @param {String} name\n   * @return {Boolean}\n   */\n\n  function hasBindAttr(node, name) {\n    return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n  }\n\n  /**\n   * Insert el before target\n   *\n   * @param {Element} el\n   * @param {Element} target\n   */\n\n  function before(el, target) {\n    target.parentNode.insertBefore(el, target);\n  }\n\n  /**\n   * Insert el after target\n   *\n   * @param {Element} el\n   * @param {Element} target\n   */\n\n  function after(el, target) {\n    if (target.nextSibling) {\n      before(el, target.nextSibling);\n    } else {\n      target.parentNode.appendChild(el);\n    }\n  }\n\n  /**\n   * Remove el from DOM\n   *\n   * @param {Element} el\n   */\n\n  function remove(el) {\n    el.parentNode.removeChild(el);\n  }\n\n  /**\n   * Prepend el to target\n   *\n   * @param {Element} el\n   * @param {Element} target\n   */\n\n  function prepend(el, target) {\n    if (target.firstChild) {\n      before(el, target.firstChild);\n    } else {\n      target.appendChild(el);\n    }\n  }\n\n  /**\n   * Replace target with el\n   *\n   * @param {Element} target\n   * @param {Element} el\n   */\n\n  function replace(target, el) {\n    var parent = target.parentNode;\n    if (parent) {\n      parent.replaceChild(el, target);\n    }\n  }\n\n  /**\n   * Add event listener shorthand.\n   *\n   * @param {Element} el\n   * @param {String} event\n   * @param {Function} cb\n   * @param {Boolean} [useCapture]\n   */\n\n  function on(el, event, cb, useCapture) {\n    el.addEventListener(event, cb, useCapture);\n  }\n\n  /**\n   * Remove event listener shorthand.\n   *\n   * @param {Element} el\n   * @param {String} event\n   * @param {Function} cb\n   */\n\n  function off(el, event, cb) {\n    el.removeEventListener(event, cb);\n  }\n\n  /**\n   * For IE9 compat: when both class and :class are present\n   * getAttribute('class') returns wrong value...\n   *\n   * @param {Element} el\n   * @return {String}\n   */\n\n  function getClass(el) {\n    var classname = el.className;\n    if (typeof classname === 'object') {\n      classname = classname.baseVal || '';\n    }\n    return classname;\n  }\n\n  /**\n   * In IE9, setAttribute('class') will result in empty class\n   * if the element also has the :class attribute; However in\n   * PhantomJS, setting `className` does not work on SVG elements...\n   * So we have to do a conditional check here.\n   *\n   * @param {Element} el\n   * @param {String} cls\n   */\n\n  function setClass(el, cls) {\n    /* istanbul ignore if */\n    if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n      el.className = cls;\n    } else {\n      el.setAttribute('class', cls);\n    }\n  }\n\n  /**\n   * Add class with compatibility for IE & SVG\n   *\n   * @param {Element} el\n   * @param {String} cls\n   */\n\n  function addClass(el, cls) {\n    if (el.classList) {\n      el.classList.add(cls);\n    } else {\n      var cur = ' ' + getClass(el) + ' ';\n      if (cur.indexOf(' ' + cls + ' ') < 0) {\n        setClass(el, (cur + cls).trim());\n      }\n    }\n  }\n\n  /**\n   * Remove class with compatibility for IE & SVG\n   *\n   * @param {Element} el\n   * @param {String} cls\n   */\n\n  function removeClass(el, cls) {\n    if (el.classList) {\n      el.classList.remove(cls);\n    } else {\n      var cur = ' ' + getClass(el) + ' ';\n      var tar = ' ' + cls + ' ';\n      while (cur.indexOf(tar) >= 0) {\n        cur = cur.replace(tar, ' ');\n      }\n      setClass(el, cur.trim());\n    }\n    if (!el.className) {\n      el.removeAttribute('class');\n    }\n  }\n\n  /**\n   * Extract raw content inside an element into a temporary\n   * container div\n   *\n   * @param {Element} el\n   * @param {Boolean} asFragment\n   * @return {Element|DocumentFragment}\n   */\n\n  function extractContent(el, asFragment) {\n    var child;\n    var rawContent;\n    /* istanbul ignore if */\n    if (isTemplate(el) && isFragment(el.content)) {\n      el = el.content;\n    }\n    if (el.hasChildNodes()) {\n      trimNode(el);\n      rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n      /* eslint-disable no-cond-assign */\n      while (child = el.firstChild) {\n        /* eslint-enable no-cond-assign */\n        rawContent.appendChild(child);\n      }\n    }\n    return rawContent;\n  }\n\n  /**\n   * Trim possible empty head/tail text and comment\n   * nodes inside a parent.\n   *\n   * @param {Node} node\n   */\n\n  function trimNode(node) {\n    var child;\n    /* eslint-disable no-sequences */\n    while ((child = node.firstChild, isTrimmable(child))) {\n      node.removeChild(child);\n    }\n    while ((child = node.lastChild, isTrimmable(child))) {\n      node.removeChild(child);\n    }\n    /* eslint-enable no-sequences */\n  }\n\n  function isTrimmable(node) {\n    return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n  }\n\n  /**\n   * Check if an element is a template tag.\n   * Note if the template appears inside an SVG its tagName\n   * will be in lowercase.\n   *\n   * @param {Element} el\n   */\n\n  function isTemplate(el) {\n    return el.tagName && el.tagName.toLowerCase() === 'template';\n  }\n\n  /**\n   * Create an \"anchor\" for performing dom insertion/removals.\n   * This is used in a number of scenarios:\n   * - fragment instance\n   * - v-html\n   * - v-if\n   * - v-for\n   * - component\n   *\n   * @param {String} content\n   * @param {Boolean} persist - IE trashes empty textNodes on\n   *                            cloneNode(true), so in certain\n   *                            cases the anchor needs to be\n   *                            non-empty to be persisted in\n   *                            templates.\n   * @return {Comment|Text}\n   */\n\n  function createAnchor(content, persist) {\n    var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n    anchor.__v_anchor = true;\n    return anchor;\n  }\n\n  /**\n   * Find a component ref attribute that starts with $.\n   *\n   * @param {Element} node\n   * @return {String|undefined}\n   */\n\n  var refRE = /^v-ref:/;\n\n  function findRef(node) {\n    if (node.hasAttributes()) {\n      var attrs = node.attributes;\n      for (var i = 0, l = attrs.length; i < l; i++) {\n        var name = attrs[i].name;\n        if (refRE.test(name)) {\n          return camelize(name.replace(refRE, ''));\n        }\n      }\n    }\n  }\n\n  /**\n   * Map a function to a range of nodes .\n   *\n   * @param {Node} node\n   * @param {Node} end\n   * @param {Function} op\n   */\n\n  function mapNodeRange(node, end, op) {\n    var next;\n    while (node !== end) {\n      next = node.nextSibling;\n      op(node);\n      node = next;\n    }\n    op(end);\n  }\n\n  /**\n   * Remove a range of nodes with transition, store\n   * the nodes in a fragment with correct ordering,\n   * and call callback when done.\n   *\n   * @param {Node} start\n   * @param {Node} end\n   * @param {Vue} vm\n   * @param {DocumentFragment} frag\n   * @param {Function} cb\n   */\n\n  function removeNodeRange(start, end, vm, frag, cb) {\n    var done = false;\n    var removed = 0;\n    var nodes = [];\n    mapNodeRange(start, end, function (node) {\n      if (node === end) done = true;\n      nodes.push(node);\n      removeWithTransition(node, vm, onRemoved);\n    });\n    function onRemoved() {\n      removed++;\n      if (done && removed >= nodes.length) {\n        for (var i = 0; i < nodes.length; i++) {\n          frag.appendChild(nodes[i]);\n        }\n        cb && cb();\n      }\n    }\n  }\n\n  /**\n   * Check if a node is a DocumentFragment.\n   *\n   * @param {Node} node\n   * @return {Boolean}\n   */\n\n  function isFragment(node) {\n    return node && node.nodeType === 11;\n  }\n\n  /**\n   * Get outerHTML of elements, taking care\n   * of SVG elements in IE as well.\n   *\n   * @param {Element} el\n   * @return {String}\n   */\n\n  function getOuterHTML(el) {\n    if (el.outerHTML) {\n      return el.outerHTML;\n    } else {\n      var container = document.createElement('div');\n      container.appendChild(el.cloneNode(true));\n      return container.innerHTML;\n    }\n  }\n\n  var commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\n  var reservedTagRE = /^(slot|partial|component)$/i;\n\n  var isUnknownElement = undefined;\n  if (true) {\n    isUnknownElement = function (el, tag) {\n      if (tag.indexOf('-') > -1) {\n        // http://stackoverflow.com/a/28210364/1070244\n        return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n      } else {\n        return (/HTMLUnknownElement/.test(el.toString()) &&\n          // Chrome returns unknown for several HTML5 elements.\n          // https://code.google.com/p/chromium/issues/detail?id=540526\n          // Firefox returns unknown for some \"Interactive elements.\"\n          !/^(data|time|rtc|rb|details|dialog|summary)$/.test(tag)\n        );\n      }\n    };\n  }\n\n  /**\n   * Check if an element is a component, if yes return its\n   * component id.\n   *\n   * @param {Element} el\n   * @param {Object} options\n   * @return {Object|undefined}\n   */\n\n  function checkComponentAttr(el, options) {\n    var tag = el.tagName.toLowerCase();\n    var hasAttrs = el.hasAttributes();\n    if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n      if (resolveAsset(options, 'components', tag)) {\n        return { id: tag };\n      } else {\n        var is = hasAttrs && getIsBinding(el, options);\n        if (is) {\n          return is;\n        } else if (true) {\n          var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n          if (expectedTag) {\n            warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n          } else if (isUnknownElement(el, tag)) {\n            warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n          }\n        }\n      }\n    } else if (hasAttrs) {\n      return getIsBinding(el, options);\n    }\n  }\n\n  /**\n   * Get \"is\" binding from an element.\n   *\n   * @param {Element} el\n   * @param {Object} options\n   * @return {Object|undefined}\n   */\n\n  function getIsBinding(el, options) {\n    // dynamic syntax\n    var exp = el.getAttribute('is');\n    if (exp != null) {\n      if (resolveAsset(options, 'components', exp)) {\n        el.removeAttribute('is');\n        return { id: exp };\n      }\n    } else {\n      exp = getBindAttr(el, 'is');\n      if (exp != null) {\n        return { id: exp, dynamic: true };\n      }\n    }\n  }\n\n  /**\n   * Option overwriting strategies are functions that handle\n   * how to merge a parent option value and a child option\n   * value into the final value.\n   *\n   * All strategy functions follow the same signature:\n   *\n   * @param {*} parentVal\n   * @param {*} childVal\n   * @param {Vue} [vm]\n   */\n\n  var strats = config.optionMergeStrategies = Object.create(null);\n\n  /**\n   * Helper that recursively merges two data objects together.\n   */\n\n  function mergeData(to, from) {\n    var key, toVal, fromVal;\n    for (key in from) {\n      toVal = to[key];\n      fromVal = from[key];\n      if (!hasOwn(to, key)) {\n        set(to, key, fromVal);\n      } else if (isObject(toVal) && isObject(fromVal)) {\n        mergeData(toVal, fromVal);\n      }\n    }\n    return to;\n  }\n\n  /**\n   * Data\n   */\n\n  strats.data = function (parentVal, childVal, vm) {\n    if (!vm) {\n      // in a Vue.extend merge, both should be functions\n      if (!childVal) {\n        return parentVal;\n      }\n      if (typeof childVal !== 'function') {\n        'development' !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n        return parentVal;\n      }\n      if (!parentVal) {\n        return childVal;\n      }\n      // when parentVal & childVal are both present,\n      // we need to return a function that returns the\n      // merged result of both functions... no need to\n      // check if parentVal is a function here because\n      // it has to be a function to pass previous merges.\n      return function mergedDataFn() {\n        return mergeData(childVal.call(this), parentVal.call(this));\n      };\n    } else if (parentVal || childVal) {\n      return function mergedInstanceDataFn() {\n        // instance merge\n        var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n        var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n        if (instanceData) {\n          return mergeData(instanceData, defaultData);\n        } else {\n          return defaultData;\n        }\n      };\n    }\n  };\n\n  /**\n   * El\n   */\n\n  strats.el = function (parentVal, childVal, vm) {\n    if (!vm && childVal && typeof childVal !== 'function') {\n      'development' !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n      return;\n    }\n    var ret = childVal || parentVal;\n    // invoke the element factory if this is instance merge\n    return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n  };\n\n  /**\n   * Hooks and param attributes are merged as arrays.\n   */\n\n  strats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n    return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n  };\n\n  /**\n   * Assets\n   *\n   * When a vm is present (instance creation), we need to do\n   * a three-way merge between constructor options, instance\n   * options and parent options.\n   */\n\n  function mergeAssets(parentVal, childVal) {\n    var res = Object.create(parentVal || null);\n    return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n  }\n\n  config._assetTypes.forEach(function (type) {\n    strats[type + 's'] = mergeAssets;\n  });\n\n  /**\n   * Events & Watchers.\n   *\n   * Events & watchers hashes should not overwrite one\n   * another, so we merge them as arrays.\n   */\n\n  strats.watch = strats.events = function (parentVal, childVal) {\n    if (!childVal) return parentVal;\n    if (!parentVal) return childVal;\n    var ret = {};\n    extend(ret, parentVal);\n    for (var key in childVal) {\n      var parent = ret[key];\n      var child = childVal[key];\n      if (parent && !isArray(parent)) {\n        parent = [parent];\n      }\n      ret[key] = parent ? parent.concat(child) : [child];\n    }\n    return ret;\n  };\n\n  /**\n   * Other object hashes.\n   */\n\n  strats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n    if (!childVal) return parentVal;\n    if (!parentVal) return childVal;\n    var ret = Object.create(null);\n    extend(ret, parentVal);\n    extend(ret, childVal);\n    return ret;\n  };\n\n  /**\n   * Default strategy.\n   */\n\n  var defaultStrat = function defaultStrat(parentVal, childVal) {\n    return childVal === undefined ? parentVal : childVal;\n  };\n\n  /**\n   * Make sure component options get converted to actual\n   * constructors.\n   *\n   * @param {Object} options\n   */\n\n  function guardComponents(options) {\n    if (options.components) {\n      var components = options.components = guardArrayAssets(options.components);\n      var ids = Object.keys(components);\n      var def;\n      if (true) {\n        var map = options._componentNameMap = {};\n      }\n      for (var i = 0, l = ids.length; i < l; i++) {\n        var key = ids[i];\n        if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n          'development' !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n          continue;\n        }\n        // record a all lowercase <-> kebab-case mapping for\n        // possible custom element case error warning\n        if (true) {\n          map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n        }\n        def = components[key];\n        if (isPlainObject(def)) {\n          components[key] = Vue.extend(def);\n        }\n      }\n    }\n  }\n\n  /**\n   * Ensure all props option syntax are normalized into the\n   * Object-based format.\n   *\n   * @param {Object} options\n   */\n\n  function guardProps(options) {\n    var props = options.props;\n    var i, val;\n    if (isArray(props)) {\n      options.props = {};\n      i = props.length;\n      while (i--) {\n        val = props[i];\n        if (typeof val === 'string') {\n          options.props[val] = null;\n        } else if (val.name) {\n          options.props[val.name] = val;\n        }\n      }\n    } else if (isPlainObject(props)) {\n      var keys = Object.keys(props);\n      i = keys.length;\n      while (i--) {\n        val = props[keys[i]];\n        if (typeof val === 'function') {\n          props[keys[i]] = { type: val };\n        }\n      }\n    }\n  }\n\n  /**\n   * Guard an Array-format assets option and converted it\n   * into the key-value Object format.\n   *\n   * @param {Object|Array} assets\n   * @return {Object}\n   */\n\n  function guardArrayAssets(assets) {\n    if (isArray(assets)) {\n      var res = {};\n      var i = assets.length;\n      var asset;\n      while (i--) {\n        asset = assets[i];\n        var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n        if (!id) {\n          'development' !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n        } else {\n          res[id] = asset;\n        }\n      }\n      return res;\n    }\n    return assets;\n  }\n\n  /**\n   * Merge two option objects into a new one.\n   * Core utility used in both instantiation and inheritance.\n   *\n   * @param {Object} parent\n   * @param {Object} child\n   * @param {Vue} [vm] - if vm is present, indicates this is\n   *                     an instantiation merge.\n   */\n\n  function mergeOptions(parent, child, vm) {\n    guardComponents(child);\n    guardProps(child);\n    if (true) {\n      if (child.propsData && !vm) {\n        warn('propsData can only be used as an instantiation option.');\n      }\n    }\n    var options = {};\n    var key;\n    if (child['extends']) {\n      parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n    }\n    if (child.mixins) {\n      for (var i = 0, l = child.mixins.length; i < l; i++) {\n        var mixin = child.mixins[i];\n        var mixinOptions = mixin.prototype instanceof Vue ? mixin.options : mixin;\n        parent = mergeOptions(parent, mixinOptions, vm);\n      }\n    }\n    for (key in parent) {\n      mergeField(key);\n    }\n    for (key in child) {\n      if (!hasOwn(parent, key)) {\n        mergeField(key);\n      }\n    }\n    function mergeField(key) {\n      var strat = strats[key] || defaultStrat;\n      options[key] = strat(parent[key], child[key], vm, key);\n    }\n    return options;\n  }\n\n  /**\n   * Resolve an asset.\n   * This function is used because child instances need access\n   * to assets defined in its ancestor chain.\n   *\n   * @param {Object} options\n   * @param {String} type\n   * @param {String} id\n   * @param {Boolean} warnMissing\n   * @return {Object|Function}\n   */\n\n  function resolveAsset(options, type, id, warnMissing) {\n    /* istanbul ignore if */\n    if (typeof id !== 'string') {\n      return;\n    }\n    var assets = options[type];\n    var camelizedId;\n    var res = assets[id] ||\n    // camelCase ID\n    assets[camelizedId = camelize(id)] ||\n    // Pascal Case ID\n    assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n    if ('development' !== 'production' && warnMissing && !res) {\n      warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n    }\n    return res;\n  }\n\n  var uid$1 = 0;\n\n  /**\n   * A dep is an observable that can have multiple\n   * directives subscribing to it.\n   *\n   * @constructor\n   */\n  function Dep() {\n    this.id = uid$1++;\n    this.subs = [];\n  }\n\n  // the current target watcher being evaluated.\n  // this is globally unique because there could be only one\n  // watcher being evaluated at any time.\n  Dep.target = null;\n\n  /**\n   * Add a directive subscriber.\n   *\n   * @param {Directive} sub\n   */\n\n  Dep.prototype.addSub = function (sub) {\n    this.subs.push(sub);\n  };\n\n  /**\n   * Remove a directive subscriber.\n   *\n   * @param {Directive} sub\n   */\n\n  Dep.prototype.removeSub = function (sub) {\n    this.subs.$remove(sub);\n  };\n\n  /**\n   * Add self as a dependency to the target watcher.\n   */\n\n  Dep.prototype.depend = function () {\n    Dep.target.addDep(this);\n  };\n\n  /**\n   * Notify all subscribers of a new value.\n   */\n\n  Dep.prototype.notify = function () {\n    // stablize the subscriber list first\n    var subs = toArray(this.subs);\n    for (var i = 0, l = subs.length; i < l; i++) {\n      subs[i].update();\n    }\n  };\n\n  var arrayProto = Array.prototype;\n  var arrayMethods = Object.create(arrayProto)\n\n  /**\n   * Intercept mutating methods and emit events\n   */\n\n  ;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n    // cache original method\n    var original = arrayProto[method];\n    def(arrayMethods, method, function mutator() {\n      // avoid leaking arguments:\n      // http://jsperf.com/closure-with-arguments\n      var i = arguments.length;\n      var args = new Array(i);\n      while (i--) {\n        args[i] = arguments[i];\n      }\n      var result = original.apply(this, args);\n      var ob = this.__ob__;\n      var inserted;\n      switch (method) {\n        case 'push':\n          inserted = args;\n          break;\n        case 'unshift':\n          inserted = args;\n          break;\n        case 'splice':\n          inserted = args.slice(2);\n          break;\n      }\n      if (inserted) ob.observeArray(inserted);\n      // notify change\n      ob.dep.notify();\n      return result;\n    });\n  });\n\n  /**\n   * Swap the element at the given index with a new value\n   * and emits corresponding event.\n   *\n   * @param {Number} index\n   * @param {*} val\n   * @return {*} - replaced element\n   */\n\n  def(arrayProto, '$set', function $set(index, val) {\n    if (index >= this.length) {\n      this.length = Number(index) + 1;\n    }\n    return this.splice(index, 1, val)[0];\n  });\n\n  /**\n   * Convenience method to remove the element at given index or target element reference.\n   *\n   * @param {*} item\n   */\n\n  def(arrayProto, '$remove', function $remove(item) {\n    /* istanbul ignore if */\n    if (!this.length) return;\n    var index = indexOf(this, item);\n    if (index > -1) {\n      return this.splice(index, 1);\n    }\n  });\n\n  var arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n  /**\n   * By default, when a reactive property is set, the new value is\n   * also converted to become reactive. However in certain cases, e.g.\n   * v-for scope alias and props, we don't want to force conversion\n   * because the value may be a nested value under a frozen data structure.\n   *\n   * So whenever we want to set a reactive property without forcing\n   * conversion on the new value, we wrap that call inside this function.\n   */\n\n  var shouldConvert = true;\n\n  function withoutConversion(fn) {\n    shouldConvert = false;\n    fn();\n    shouldConvert = true;\n  }\n\n  /**\n   * Observer class that are attached to each observed\n   * object. Once attached, the observer converts target\n   * object's property keys into getter/setters that\n   * collect dependencies and dispatches updates.\n   *\n   * @param {Array|Object} value\n   * @constructor\n   */\n\n  function Observer(value) {\n    this.value = value;\n    this.dep = new Dep();\n    def(value, '__ob__', this);\n    if (isArray(value)) {\n      var augment = hasProto ? protoAugment : copyAugment;\n      augment(value, arrayMethods, arrayKeys);\n      this.observeArray(value);\n    } else {\n      this.walk(value);\n    }\n  }\n\n  // Instance methods\n\n  /**\n   * Walk through each property and convert them into\n   * getter/setters. This method should only be called when\n   * value type is Object.\n   *\n   * @param {Object} obj\n   */\n\n  Observer.prototype.walk = function (obj) {\n    var keys = Object.keys(obj);\n    for (var i = 0, l = keys.length; i < l; i++) {\n      this.convert(keys[i], obj[keys[i]]);\n    }\n  };\n\n  /**\n   * Observe a list of Array items.\n   *\n   * @param {Array} items\n   */\n\n  Observer.prototype.observeArray = function (items) {\n    for (var i = 0, l = items.length; i < l; i++) {\n      observe(items[i]);\n    }\n  };\n\n  /**\n   * Convert a property into getter/setter so we can emit\n   * the events when the property is accessed/changed.\n   *\n   * @param {String} key\n   * @param {*} val\n   */\n\n  Observer.prototype.convert = function (key, val) {\n    defineReactive(this.value, key, val);\n  };\n\n  /**\n   * Add an owner vm, so that when $set/$delete mutations\n   * happen we can notify owner vms to proxy the keys and\n   * digest the watchers. This is only called when the object\n   * is observed as an instance's root $data.\n   *\n   * @param {Vue} vm\n   */\n\n  Observer.prototype.addVm = function (vm) {\n    (this.vms || (this.vms = [])).push(vm);\n  };\n\n  /**\n   * Remove an owner vm. This is called when the object is\n   * swapped out as an instance's $data object.\n   *\n   * @param {Vue} vm\n   */\n\n  Observer.prototype.removeVm = function (vm) {\n    this.vms.$remove(vm);\n  };\n\n  // helpers\n\n  /**\n   * Augment an target Object or Array by intercepting\n   * the prototype chain using __proto__\n   *\n   * @param {Object|Array} target\n   * @param {Object} src\n   */\n\n  function protoAugment(target, src) {\n    /* eslint-disable no-proto */\n    target.__proto__ = src;\n    /* eslint-enable no-proto */\n  }\n\n  /**\n   * Augment an target Object or Array by defining\n   * hidden properties.\n   *\n   * @param {Object|Array} target\n   * @param {Object} proto\n   */\n\n  function copyAugment(target, src, keys) {\n    for (var i = 0, l = keys.length; i < l; i++) {\n      var key = keys[i];\n      def(target, key, src[key]);\n    }\n  }\n\n  /**\n   * Attempt to create an observer instance for a value,\n   * returns the new observer if successfully observed,\n   * or the existing observer if the value already has one.\n   *\n   * @param {*} value\n   * @param {Vue} [vm]\n   * @return {Observer|undefined}\n   * @static\n   */\n\n  function observe(value, vm) {\n    if (!value || typeof value !== 'object') {\n      return;\n    }\n    var ob;\n    if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n      ob = value.__ob__;\n    } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n      ob = new Observer(value);\n    }\n    if (ob && vm) {\n      ob.addVm(vm);\n    }\n    return ob;\n  }\n\n  /**\n   * Define a reactive property on an Object.\n   *\n   * @param {Object} obj\n   * @param {String} key\n   * @param {*} val\n   */\n\n  function defineReactive(obj, key, val) {\n    var dep = new Dep();\n\n    var property = Object.getOwnPropertyDescriptor(obj, key);\n    if (property && property.configurable === false) {\n      return;\n    }\n\n    // cater for pre-defined getter/setters\n    var getter = property && property.get;\n    var setter = property && property.set;\n\n    var childOb = observe(val);\n    Object.defineProperty(obj, key, {\n      enumerable: true,\n      configurable: true,\n      get: function reactiveGetter() {\n        var value = getter ? getter.call(obj) : val;\n        if (Dep.target) {\n          dep.depend();\n          if (childOb) {\n            childOb.dep.depend();\n          }\n          if (isArray(value)) {\n            for (var e, i = 0, l = value.length; i < l; i++) {\n              e = value[i];\n              e && e.__ob__ && e.__ob__.dep.depend();\n            }\n          }\n        }\n        return value;\n      },\n      set: function reactiveSetter(newVal) {\n        var value = getter ? getter.call(obj) : val;\n        if (newVal === value) {\n          return;\n        }\n        if (setter) {\n          setter.call(obj, newVal);\n        } else {\n          val = newVal;\n        }\n        childOb = observe(newVal);\n        dep.notify();\n      }\n    });\n  }\n\n\n\n  var util = Object.freeze({\n  \tdefineReactive: defineReactive,\n  \tset: set,\n  \tdel: del,\n  \thasOwn: hasOwn,\n  \tisLiteral: isLiteral,\n  \tisReserved: isReserved,\n  \t_toString: _toString,\n  \ttoNumber: toNumber,\n  \ttoBoolean: toBoolean,\n  \tstripQuotes: stripQuotes,\n  \tcamelize: camelize,\n  \thyphenate: hyphenate,\n  \tclassify: classify,\n  \tbind: bind,\n  \ttoArray: toArray,\n  \textend: extend,\n  \tisObject: isObject,\n  \tisPlainObject: isPlainObject,\n  \tdef: def,\n  \tdebounce: _debounce,\n  \tindexOf: indexOf,\n  \tcancellable: cancellable,\n  \tlooseEqual: looseEqual,\n  \tisArray: isArray,\n  \thasProto: hasProto,\n  \tinBrowser: inBrowser,\n  \tdevtools: devtools,\n  \tisIE: isIE,\n  \tisIE9: isIE9,\n  \tisAndroid: isAndroid,\n  \tisIos: isIos,\n  \tiosVersionMatch: iosVersionMatch,\n  \tiosVersion: iosVersion,\n  \thasMutationObserverBug: hasMutationObserverBug,\n  \tget transitionProp () { return transitionProp; },\n  \tget transitionEndEvent () { return transitionEndEvent; },\n  \tget animationProp () { return animationProp; },\n  \tget animationEndEvent () { return animationEndEvent; },\n  \tnextTick: nextTick,\n  \tget _Set () { return _Set; },\n  \tquery: query,\n  \tinDoc: inDoc,\n  \tgetAttr: getAttr,\n  \tgetBindAttr: getBindAttr,\n  \thasBindAttr: hasBindAttr,\n  \tbefore: before,\n  \tafter: after,\n  \tremove: remove,\n  \tprepend: prepend,\n  \treplace: replace,\n  \ton: on,\n  \toff: off,\n  \tsetClass: setClass,\n  \taddClass: addClass,\n  \tremoveClass: removeClass,\n  \textractContent: extractContent,\n  \ttrimNode: trimNode,\n  \tisTemplate: isTemplate,\n  \tcreateAnchor: createAnchor,\n  \tfindRef: findRef,\n  \tmapNodeRange: mapNodeRange,\n  \tremoveNodeRange: removeNodeRange,\n  \tisFragment: isFragment,\n  \tgetOuterHTML: getOuterHTML,\n  \tmergeOptions: mergeOptions,\n  \tresolveAsset: resolveAsset,\n  \tcheckComponentAttr: checkComponentAttr,\n  \tcommonTagRE: commonTagRE,\n  \treservedTagRE: reservedTagRE,\n  \tget warn () { return warn; }\n  });\n\n  var uid = 0;\n\n  function initMixin (Vue) {\n    /**\n     * The main init sequence. This is called for every\n     * instance, including ones that are created from extended\n     * constructors.\n     *\n     * @param {Object} options - this options object should be\n     *                           the result of merging class\n     *                           options and the options passed\n     *                           in to the constructor.\n     */\n\n    Vue.prototype._init = function (options) {\n      options = options || {};\n\n      this.$el = null;\n      this.$parent = options.parent;\n      this.$root = this.$parent ? this.$parent.$root : this;\n      this.$children = [];\n      this.$refs = {}; // child vm references\n      this.$els = {}; // element references\n      this._watchers = []; // all watchers as an array\n      this._directives = []; // all directives\n\n      // a uid\n      this._uid = uid++;\n\n      // a flag to avoid this being observed\n      this._isVue = true;\n\n      // events bookkeeping\n      this._events = {}; // registered callbacks\n      this._eventsCount = {}; // for $broadcast optimization\n\n      // fragment instance properties\n      this._isFragment = false;\n      this._fragment = // @type {DocumentFragment}\n      this._fragmentStart = // @type {Text|Comment}\n      this._fragmentEnd = null; // @type {Text|Comment}\n\n      // lifecycle state\n      this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n      this._unlinkFn = null;\n\n      // context:\n      // if this is a transcluded component, context\n      // will be the common parent vm of this instance\n      // and its host.\n      this._context = options._context || this.$parent;\n\n      // scope:\n      // if this is inside an inline v-for, the scope\n      // will be the intermediate scope created for this\n      // repeat fragment. this is used for linking props\n      // and container directives.\n      this._scope = options._scope;\n\n      // fragment:\n      // if this instance is compiled inside a Fragment, it\n      // needs to reigster itself as a child of that fragment\n      // for attach/detach to work properly.\n      this._frag = options._frag;\n      if (this._frag) {\n        this._frag.children.push(this);\n      }\n\n      // push self into parent / transclusion host\n      if (this.$parent) {\n        this.$parent.$children.push(this);\n      }\n\n      // merge options.\n      options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n      // set ref\n      this._updateRef();\n\n      // initialize data as empty object.\n      // it will be filled up in _initData().\n      this._data = {};\n\n      // call init hook\n      this._callHook('init');\n\n      // initialize data observation and scope inheritance.\n      this._initState();\n\n      // setup event system and option events.\n      this._initEvents();\n\n      // call created hook\n      this._callHook('created');\n\n      // if `el` option is passed, start compilation.\n      if (options.el) {\n        this.$mount(options.el);\n      }\n    };\n  }\n\n  var pathCache = new Cache(1000);\n\n  // actions\n  var APPEND = 0;\n  var PUSH = 1;\n  var INC_SUB_PATH_DEPTH = 2;\n  var PUSH_SUB_PATH = 3;\n\n  // states\n  var BEFORE_PATH = 0;\n  var IN_PATH = 1;\n  var BEFORE_IDENT = 2;\n  var IN_IDENT = 3;\n  var IN_SUB_PATH = 4;\n  var IN_SINGLE_QUOTE = 5;\n  var IN_DOUBLE_QUOTE = 6;\n  var AFTER_PATH = 7;\n  var ERROR = 8;\n\n  var pathStateMachine = [];\n\n  pathStateMachine[BEFORE_PATH] = {\n    'ws': [BEFORE_PATH],\n    'ident': [IN_IDENT, APPEND],\n    '[': [IN_SUB_PATH],\n    'eof': [AFTER_PATH]\n  };\n\n  pathStateMachine[IN_PATH] = {\n    'ws': [IN_PATH],\n    '.': [BEFORE_IDENT],\n    '[': [IN_SUB_PATH],\n    'eof': [AFTER_PATH]\n  };\n\n  pathStateMachine[BEFORE_IDENT] = {\n    'ws': [BEFORE_IDENT],\n    'ident': [IN_IDENT, APPEND]\n  };\n\n  pathStateMachine[IN_IDENT] = {\n    'ident': [IN_IDENT, APPEND],\n    '0': [IN_IDENT, APPEND],\n    'number': [IN_IDENT, APPEND],\n    'ws': [IN_PATH, PUSH],\n    '.': [BEFORE_IDENT, PUSH],\n    '[': [IN_SUB_PATH, PUSH],\n    'eof': [AFTER_PATH, PUSH]\n  };\n\n  pathStateMachine[IN_SUB_PATH] = {\n    \"'\": [IN_SINGLE_QUOTE, APPEND],\n    '\"': [IN_DOUBLE_QUOTE, APPEND],\n    '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n    ']': [IN_PATH, PUSH_SUB_PATH],\n    'eof': ERROR,\n    'else': [IN_SUB_PATH, APPEND]\n  };\n\n  pathStateMachine[IN_SINGLE_QUOTE] = {\n    \"'\": [IN_SUB_PATH, APPEND],\n    'eof': ERROR,\n    'else': [IN_SINGLE_QUOTE, APPEND]\n  };\n\n  pathStateMachine[IN_DOUBLE_QUOTE] = {\n    '\"': [IN_SUB_PATH, APPEND],\n    'eof': ERROR,\n    'else': [IN_DOUBLE_QUOTE, APPEND]\n  };\n\n  /**\n   * Determine the type of a character in a keypath.\n   *\n   * @param {Char} ch\n   * @return {String} type\n   */\n\n  function getPathCharType(ch) {\n    if (ch === undefined) {\n      return 'eof';\n    }\n\n    var code = ch.charCodeAt(0);\n\n    switch (code) {\n      case 0x5B: // [\n      case 0x5D: // ]\n      case 0x2E: // .\n      case 0x22: // \"\n      case 0x27: // '\n      case 0x30:\n        // 0\n        return ch;\n\n      case 0x5F: // _\n      case 0x24:\n        // $\n        return 'ident';\n\n      case 0x20: // Space\n      case 0x09: // Tab\n      case 0x0A: // Newline\n      case 0x0D: // Return\n      case 0xA0: // No-break space\n      case 0xFEFF: // Byte Order Mark\n      case 0x2028: // Line Separator\n      case 0x2029:\n        // Paragraph Separator\n        return 'ws';\n    }\n\n    // a-z, A-Z\n    if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n      return 'ident';\n    }\n\n    // 1-9\n    if (code >= 0x31 && code <= 0x39) {\n      return 'number';\n    }\n\n    return 'else';\n  }\n\n  /**\n   * Format a subPath, return its plain form if it is\n   * a literal string or number. Otherwise prepend the\n   * dynamic indicator (*).\n   *\n   * @param {String} path\n   * @return {String}\n   */\n\n  function formatSubPath(path) {\n    var trimmed = path.trim();\n    // invalid leading 0\n    if (path.charAt(0) === '0' && isNaN(path)) {\n      return false;\n    }\n    return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n  }\n\n  /**\n   * Parse a string path into an array of segments\n   *\n   * @param {String} path\n   * @return {Array|undefined}\n   */\n\n  function parse(path) {\n    var keys = [];\n    var index = -1;\n    var mode = BEFORE_PATH;\n    var subPathDepth = 0;\n    var c, newChar, key, type, transition, action, typeMap;\n\n    var actions = [];\n\n    actions[PUSH] = function () {\n      if (key !== undefined) {\n        keys.push(key);\n        key = undefined;\n      }\n    };\n\n    actions[APPEND] = function () {\n      if (key === undefined) {\n        key = newChar;\n      } else {\n        key += newChar;\n      }\n    };\n\n    actions[INC_SUB_PATH_DEPTH] = function () {\n      actions[APPEND]();\n      subPathDepth++;\n    };\n\n    actions[PUSH_SUB_PATH] = function () {\n      if (subPathDepth > 0) {\n        subPathDepth--;\n        mode = IN_SUB_PATH;\n        actions[APPEND]();\n      } else {\n        subPathDepth = 0;\n        key = formatSubPath(key);\n        if (key === false) {\n          return false;\n        } else {\n          actions[PUSH]();\n        }\n      }\n    };\n\n    function maybeUnescapeQuote() {\n      var nextChar = path[index + 1];\n      if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n        index++;\n        newChar = '\\\\' + nextChar;\n        actions[APPEND]();\n        return true;\n      }\n    }\n\n    while (mode != null) {\n      index++;\n      c = path[index];\n\n      if (c === '\\\\' && maybeUnescapeQuote()) {\n        continue;\n      }\n\n      type = getPathCharType(c);\n      typeMap = pathStateMachine[mode];\n      transition = typeMap[type] || typeMap['else'] || ERROR;\n\n      if (transition === ERROR) {\n        return; // parse error\n      }\n\n      mode = transition[0];\n      action = actions[transition[1]];\n      if (action) {\n        newChar = transition[2];\n        newChar = newChar === undefined ? c : newChar;\n        if (action() === false) {\n          return;\n        }\n      }\n\n      if (mode === AFTER_PATH) {\n        keys.raw = path;\n        return keys;\n      }\n    }\n  }\n\n  /**\n   * External parse that check for a cache hit first\n   *\n   * @param {String} path\n   * @return {Array|undefined}\n   */\n\n  function parsePath(path) {\n    var hit = pathCache.get(path);\n    if (!hit) {\n      hit = parse(path);\n      if (hit) {\n        pathCache.put(path, hit);\n      }\n    }\n    return hit;\n  }\n\n  /**\n   * Get from an object from a path string\n   *\n   * @param {Object} obj\n   * @param {String} path\n   */\n\n  function getPath(obj, path) {\n    return parseExpression(path).get(obj);\n  }\n\n  /**\n   * Warn against setting non-existent root path on a vm.\n   */\n\n  var warnNonExistent;\n  if (true) {\n    warnNonExistent = function (path, vm) {\n      warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n    };\n  }\n\n  /**\n   * Set on an object from a path\n   *\n   * @param {Object} obj\n   * @param {String | Array} path\n   * @param {*} val\n   */\n\n  function setPath(obj, path, val) {\n    var original = obj;\n    if (typeof path === 'string') {\n      path = parse(path);\n    }\n    if (!path || !isObject(obj)) {\n      return false;\n    }\n    var last, key;\n    for (var i = 0, l = path.length; i < l; i++) {\n      last = obj;\n      key = path[i];\n      if (key.charAt(0) === '*') {\n        key = parseExpression(key.slice(1)).get.call(original, original);\n      }\n      if (i < l - 1) {\n        obj = obj[key];\n        if (!isObject(obj)) {\n          obj = {};\n          if ('development' !== 'production' && last._isVue) {\n            warnNonExistent(path, last);\n          }\n          set(last, key, obj);\n        }\n      } else {\n        if (isArray(obj)) {\n          obj.$set(key, val);\n        } else if (key in obj) {\n          obj[key] = val;\n        } else {\n          if ('development' !== 'production' && obj._isVue) {\n            warnNonExistent(path, obj);\n          }\n          set(obj, key, val);\n        }\n      }\n    }\n    return true;\n  }\n\nvar path = Object.freeze({\n    parsePath: parsePath,\n    getPath: getPath,\n    setPath: setPath\n  });\n\n  var expressionCache = new Cache(1000);\n\n  var allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\n  var allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n  // keywords that don't make sense inside expressions\n  var improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\n  var improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n  var wsRE = /\\s/g;\n  var newlineRE = /\\n/g;\n  var saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\n  var restoreRE = /\"(\\d+)\"/g;\n  var pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n  var identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\n  var literalValueRE$1 = /^(?:true|false|null|undefined|Infinity|NaN)$/;\n\n  function noop() {}\n\n  /**\n   * Save / Rewrite / Restore\n   *\n   * When rewriting paths found in an expression, it is\n   * possible for the same letter sequences to be found in\n   * strings and Object literal property keys. Therefore we\n   * remove and store these parts in a temporary array, and\n   * restore them after the path rewrite.\n   */\n\n  var saved = [];\n\n  /**\n   * Save replacer\n   *\n   * The save regex can match two possible cases:\n   * 1. An opening object literal\n   * 2. A string\n   * If matched as a plain string, we need to escape its\n   * newlines, since the string needs to be preserved when\n   * generating the function body.\n   *\n   * @param {String} str\n   * @param {String} isString - str if matched as a string\n   * @return {String} - placeholder with index\n   */\n\n  function save(str, isString) {\n    var i = saved.length;\n    saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n    return '\"' + i + '\"';\n  }\n\n  /**\n   * Path rewrite replacer\n   *\n   * @param {String} raw\n   * @return {String}\n   */\n\n  function rewrite(raw) {\n    var c = raw.charAt(0);\n    var path = raw.slice(1);\n    if (allowedKeywordsRE.test(path)) {\n      return raw;\n    } else {\n      path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n      return c + 'scope.' + path;\n    }\n  }\n\n  /**\n   * Restore replacer\n   *\n   * @param {String} str\n   * @param {String} i - matched save index\n   * @return {String}\n   */\n\n  function restore(str, i) {\n    return saved[i];\n  }\n\n  /**\n   * Rewrite an expression, prefixing all path accessors with\n   * `scope.` and generate getter/setter functions.\n   *\n   * @param {String} exp\n   * @return {Function}\n   */\n\n  function compileGetter(exp) {\n    if (improperKeywordsRE.test(exp)) {\n      'development' !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n    }\n    // reset state\n    saved.length = 0;\n    // save strings and object literal keys\n    var body = exp.replace(saveRE, save).replace(wsRE, '');\n    // rewrite all paths\n    // pad 1 space here because the regex matches 1 extra char\n    body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n    return makeGetterFn(body);\n  }\n\n  /**\n   * Build a getter function. Requires eval.\n   *\n   * We isolate the try/catch so it doesn't affect the\n   * optimization of the parse function when it is not called.\n   *\n   * @param {String} body\n   * @return {Function|undefined}\n   */\n\n  function makeGetterFn(body) {\n    try {\n      /* eslint-disable no-new-func */\n      return new Function('scope', 'return ' + body + ';');\n      /* eslint-enable no-new-func */\n    } catch (e) {\n      if (true) {\n        /* istanbul ignore if */\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn('It seems you are using the default build of Vue.js in an environment ' + 'with Content Security Policy that prohibits unsafe-eval. ' + 'Use the CSP-compliant build instead: ' + 'http://vuejs.org/guide/installation.html#CSP-compliant-build');\n        } else {\n          warn('Invalid expression. ' + 'Generated function body: ' + body);\n        }\n      }\n      return noop;\n    }\n  }\n\n  /**\n   * Compile a setter function for the expression.\n   *\n   * @param {String} exp\n   * @return {Function|undefined}\n   */\n\n  function compileSetter(exp) {\n    var path = parsePath(exp);\n    if (path) {\n      return function (scope, val) {\n        setPath(scope, path, val);\n      };\n    } else {\n      'development' !== 'production' && warn('Invalid setter expression: ' + exp);\n    }\n  }\n\n  /**\n   * Parse an expression into re-written getter/setters.\n   *\n   * @param {String} exp\n   * @param {Boolean} needSet\n   * @return {Function}\n   */\n\n  function parseExpression(exp, needSet) {\n    exp = exp.trim();\n    // try cache\n    var hit = expressionCache.get(exp);\n    if (hit) {\n      if (needSet && !hit.set) {\n        hit.set = compileSetter(hit.exp);\n      }\n      return hit;\n    }\n    var res = { exp: exp };\n    res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n    // optimized super simple getter\n    ? makeGetterFn('scope.' + exp)\n    // dynamic getter\n    : compileGetter(exp);\n    if (needSet) {\n      res.set = compileSetter(exp);\n    }\n    expressionCache.put(exp, res);\n    return res;\n  }\n\n  /**\n   * Check if an expression is a simple path.\n   *\n   * @param {String} exp\n   * @return {Boolean}\n   */\n\n  function isSimplePath(exp) {\n    return pathTestRE.test(exp) &&\n    // don't treat literal values as paths\n    !literalValueRE$1.test(exp) &&\n    // Math constants e.g. Math.PI, Math.E etc.\n    exp.slice(0, 5) !== 'Math.';\n  }\n\nvar expression = Object.freeze({\n    parseExpression: parseExpression,\n    isSimplePath: isSimplePath\n  });\n\n  // we have two separate queues: one for directive updates\n  // and one for user watcher registered via $watch().\n  // we want to guarantee directive updates to be called\n  // before user watchers so that when user watchers are\n  // triggered, the DOM would have already been in updated\n  // state.\n\n  var queue = [];\n  var userQueue = [];\n  var has = {};\n  var circular = {};\n  var waiting = false;\n\n  /**\n   * Reset the batcher's state.\n   */\n\n  function resetBatcherState() {\n    queue.length = 0;\n    userQueue.length = 0;\n    has = {};\n    circular = {};\n    waiting = false;\n  }\n\n  /**\n   * Flush both queues and run the watchers.\n   */\n\n  function flushBatcherQueue() {\n    var _again = true;\n\n    _function: while (_again) {\n      _again = false;\n\n      runBatcherQueue(queue);\n      runBatcherQueue(userQueue);\n      // user watchers triggered more watchers,\n      // keep flushing until it depletes\n      if (queue.length) {\n        _again = true;\n        continue _function;\n      }\n      // dev tool hook\n      /* istanbul ignore if */\n      if (devtools && config.devtools) {\n        devtools.emit('flush');\n      }\n      resetBatcherState();\n    }\n  }\n\n  /**\n   * Run the watchers in a single queue.\n   *\n   * @param {Array} queue\n   */\n\n  function runBatcherQueue(queue) {\n    // do not cache length because more watchers might be pushed\n    // as we run existing watchers\n    for (var i = 0; i < queue.length; i++) {\n      var watcher = queue[i];\n      var id = watcher.id;\n      has[id] = null;\n      watcher.run();\n      // in dev build, check and stop circular updates.\n      if ('development' !== 'production' && has[id] != null) {\n        circular[id] = (circular[id] || 0) + 1;\n        if (circular[id] > config._maxUpdateCount) {\n          warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n          break;\n        }\n      }\n    }\n    queue.length = 0;\n  }\n\n  /**\n   * Push a watcher into the watcher queue.\n   * Jobs with duplicate IDs will be skipped unless it's\n   * pushed when the queue is being flushed.\n   *\n   * @param {Watcher} watcher\n   *   properties:\n   *   - {Number} id\n   *   - {Function} run\n   */\n\n  function pushWatcher(watcher) {\n    var id = watcher.id;\n    if (has[id] == null) {\n      // push watcher into appropriate queue\n      var q = watcher.user ? userQueue : queue;\n      has[id] = q.length;\n      q.push(watcher);\n      // queue the flush\n      if (!waiting) {\n        waiting = true;\n        nextTick(flushBatcherQueue);\n      }\n    }\n  }\n\n  var uid$2 = 0;\n\n  /**\n   * A watcher parses an expression, collects dependencies,\n   * and fires callback when the expression value changes.\n   * This is used for both the $watch() api and directives.\n   *\n   * @param {Vue} vm\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} options\n   *                 - {Array} filters\n   *                 - {Boolean} twoWay\n   *                 - {Boolean} deep\n   *                 - {Boolean} user\n   *                 - {Boolean} sync\n   *                 - {Boolean} lazy\n   *                 - {Function} [preProcess]\n   *                 - {Function} [postProcess]\n   * @constructor\n   */\n  function Watcher(vm, expOrFn, cb, options) {\n    // mix in options\n    if (options) {\n      extend(this, options);\n    }\n    var isFn = typeof expOrFn === 'function';\n    this.vm = vm;\n    vm._watchers.push(this);\n    this.expression = expOrFn;\n    this.cb = cb;\n    this.id = ++uid$2; // uid for batching\n    this.active = true;\n    this.dirty = this.lazy; // for lazy watchers\n    this.deps = [];\n    this.newDeps = [];\n    this.depIds = new _Set();\n    this.newDepIds = new _Set();\n    this.prevError = null; // for async error stacks\n    // parse expression for getter/setter\n    if (isFn) {\n      this.getter = expOrFn;\n      this.setter = undefined;\n    } else {\n      var res = parseExpression(expOrFn, this.twoWay);\n      this.getter = res.get;\n      this.setter = res.set;\n    }\n    this.value = this.lazy ? undefined : this.get();\n    // state for avoiding false triggers for deep and Array\n    // watchers during vm._digest()\n    this.queued = this.shallow = false;\n  }\n\n  /**\n   * Evaluate the getter, and re-collect dependencies.\n   */\n\n  Watcher.prototype.get = function () {\n    this.beforeGet();\n    var scope = this.scope || this.vm;\n    var value;\n    try {\n      value = this.getter.call(scope, scope);\n    } catch (e) {\n      if ('development' !== 'production' && config.warnExpressionErrors) {\n        warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n      }\n    }\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    if (this.preProcess) {\n      value = this.preProcess(value);\n    }\n    if (this.filters) {\n      value = scope._applyFilters(value, null, this.filters, false);\n    }\n    if (this.postProcess) {\n      value = this.postProcess(value);\n    }\n    this.afterGet();\n    return value;\n  };\n\n  /**\n   * Set the corresponding value with the setter.\n   *\n   * @param {*} value\n   */\n\n  Watcher.prototype.set = function (value) {\n    var scope = this.scope || this.vm;\n    if (this.filters) {\n      value = scope._applyFilters(value, this.value, this.filters, true);\n    }\n    try {\n      this.setter.call(scope, scope, value);\n    } catch (e) {\n      if ('development' !== 'production' && config.warnExpressionErrors) {\n        warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n      }\n    }\n    // two-way sync for v-for alias\n    var forContext = scope.$forContext;\n    if (forContext && forContext.alias === this.expression) {\n      if (forContext.filters) {\n        'development' !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n        return;\n      }\n      forContext._withLock(function () {\n        if (scope.$key) {\n          // original is an object\n          forContext.rawValue[scope.$key] = value;\n        } else {\n          forContext.rawValue.$set(scope.$index, value);\n        }\n      });\n    }\n  };\n\n  /**\n   * Prepare for dependency collection.\n   */\n\n  Watcher.prototype.beforeGet = function () {\n    Dep.target = this;\n  };\n\n  /**\n   * Add a dependency to this directive.\n   *\n   * @param {Dep} dep\n   */\n\n  Watcher.prototype.addDep = function (dep) {\n    var id = dep.id;\n    if (!this.newDepIds.has(id)) {\n      this.newDepIds.add(id);\n      this.newDeps.push(dep);\n      if (!this.depIds.has(id)) {\n        dep.addSub(this);\n      }\n    }\n  };\n\n  /**\n   * Clean up for dependency collection.\n   */\n\n  Watcher.prototype.afterGet = function () {\n    Dep.target = null;\n    var i = this.deps.length;\n    while (i--) {\n      var dep = this.deps[i];\n      if (!this.newDepIds.has(dep.id)) {\n        dep.removeSub(this);\n      }\n    }\n    var tmp = this.depIds;\n    this.depIds = this.newDepIds;\n    this.newDepIds = tmp;\n    this.newDepIds.clear();\n    tmp = this.deps;\n    this.deps = this.newDeps;\n    this.newDeps = tmp;\n    this.newDeps.length = 0;\n  };\n\n  /**\n   * Subscriber interface.\n   * Will be called when a dependency changes.\n   *\n   * @param {Boolean} shallow\n   */\n\n  Watcher.prototype.update = function (shallow) {\n    if (this.lazy) {\n      this.dirty = true;\n    } else if (this.sync || !config.async) {\n      this.run();\n    } else {\n      // if queued, only overwrite shallow with non-shallow,\n      // but not the other way around.\n      this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n      this.queued = true;\n      // record before-push error stack in debug mode\n      /* istanbul ignore if */\n      if ('development' !== 'production' && config.debug) {\n        this.prevError = new Error('[vue] async stack trace');\n      }\n      pushWatcher(this);\n    }\n  };\n\n  /**\n   * Batcher job interface.\n   * Will be called by the batcher.\n   */\n\n  Watcher.prototype.run = function () {\n    if (this.active) {\n      var value = this.get();\n      if (value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated; but only do so if this is a\n      // non-shallow update (caused by a vm digest).\n      (isObject(value) || this.deep) && !this.shallow) {\n        // set new value\n        var oldValue = this.value;\n        this.value = value;\n        // in debug + async mode, when a watcher callbacks\n        // throws, we also throw the saved before-push error\n        // so the full cross-tick stack trace is available.\n        var prevError = this.prevError;\n        /* istanbul ignore if */\n        if ('development' !== 'production' && config.debug && prevError) {\n          this.prevError = null;\n          try {\n            this.cb.call(this.vm, value, oldValue);\n          } catch (e) {\n            nextTick(function () {\n              throw prevError;\n            }, 0);\n            throw e;\n          }\n        } else {\n          this.cb.call(this.vm, value, oldValue);\n        }\n      }\n      this.queued = this.shallow = false;\n    }\n  };\n\n  /**\n   * Evaluate the value of the watcher.\n   * This only gets called for lazy watchers.\n   */\n\n  Watcher.prototype.evaluate = function () {\n    // avoid overwriting another watcher that is being\n    // collected.\n    var current = Dep.target;\n    this.value = this.get();\n    this.dirty = false;\n    Dep.target = current;\n  };\n\n  /**\n   * Depend on all deps collected by this watcher.\n   */\n\n  Watcher.prototype.depend = function () {\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].depend();\n    }\n  };\n\n  /**\n   * Remove self from all dependencies' subcriber list.\n   */\n\n  Watcher.prototype.teardown = function () {\n    if (this.active) {\n      // remove self from vm's watcher list\n      // this is a somewhat expensive operation so we skip it\n      // if the vm is being destroyed or is performing a v-for\n      // re-render (the watcher list is then filtered by v-for).\n      if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n        this.vm._watchers.$remove(this);\n      }\n      var i = this.deps.length;\n      while (i--) {\n        this.deps[i].removeSub(this);\n      }\n      this.active = false;\n      this.vm = this.cb = this.value = null;\n    }\n  };\n\n  /**\n   * Recrusively traverse an object to evoke all converted\n   * getters, so that every nested property inside the object\n   * is collected as a \"deep\" dependency.\n   *\n   * @param {*} val\n   */\n\n  var seenObjects = new _Set();\n  function traverse(val, seen) {\n    var i = undefined,\n        keys = undefined;\n    if (!seen) {\n      seen = seenObjects;\n      seen.clear();\n    }\n    var isA = isArray(val);\n    var isO = isObject(val);\n    if ((isA || isO) && Object.isExtensible(val)) {\n      if (val.__ob__) {\n        var depId = val.__ob__.dep.id;\n        if (seen.has(depId)) {\n          return;\n        } else {\n          seen.add(depId);\n        }\n      }\n      if (isA) {\n        i = val.length;\n        while (i--) traverse(val[i], seen);\n      } else if (isO) {\n        keys = Object.keys(val);\n        i = keys.length;\n        while (i--) traverse(val[keys[i]], seen);\n      }\n    }\n  }\n\n  var text$1 = {\n\n    bind: function bind() {\n      this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n    },\n\n    update: function update(value) {\n      this.el[this.attr] = _toString(value);\n    }\n  };\n\n  var templateCache = new Cache(1000);\n  var idSelectorCache = new Cache(1000);\n\n  var map = {\n    efault: [0, '', ''],\n    legend: [1, '<fieldset>', '</fieldset>'],\n    tr: [2, '<table><tbody>', '</tbody></table>'],\n    col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n  };\n\n  map.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\n  map.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\n  map.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\n  map.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n  /**\n   * Check if a node is a supported template node with a\n   * DocumentFragment content.\n   *\n   * @param {Node} node\n   * @return {Boolean}\n   */\n\n  function isRealTemplate(node) {\n    return isTemplate(node) && isFragment(node.content);\n  }\n\n  var tagRE$1 = /<([\\w:-]+)/;\n  var entityRE = /&#?\\w+?;/;\n  var commentRE = /<!--/;\n\n  /**\n   * Convert a string template to a DocumentFragment.\n   * Determines correct wrapping by tag types. Wrapping\n   * strategy found in jQuery & component/domify.\n   *\n   * @param {String} templateString\n   * @param {Boolean} raw\n   * @return {DocumentFragment}\n   */\n\n  function stringToFragment(templateString, raw) {\n    // try a cache hit first\n    var cacheKey = raw ? templateString : templateString.trim();\n    var hit = templateCache.get(cacheKey);\n    if (hit) {\n      return hit;\n    }\n\n    var frag = document.createDocumentFragment();\n    var tagMatch = templateString.match(tagRE$1);\n    var entityMatch = entityRE.test(templateString);\n    var commentMatch = commentRE.test(templateString);\n\n    if (!tagMatch && !entityMatch && !commentMatch) {\n      // text only, return a single text node.\n      frag.appendChild(document.createTextNode(templateString));\n    } else {\n      var tag = tagMatch && tagMatch[1];\n      var wrap = map[tag] || map.efault;\n      var depth = wrap[0];\n      var prefix = wrap[1];\n      var suffix = wrap[2];\n      var node = document.createElement('div');\n\n      node.innerHTML = prefix + templateString + suffix;\n      while (depth--) {\n        node = node.lastChild;\n      }\n\n      var child;\n      /* eslint-disable no-cond-assign */\n      while (child = node.firstChild) {\n        /* eslint-enable no-cond-assign */\n        frag.appendChild(child);\n      }\n    }\n    if (!raw) {\n      trimNode(frag);\n    }\n    templateCache.put(cacheKey, frag);\n    return frag;\n  }\n\n  /**\n   * Convert a template node to a DocumentFragment.\n   *\n   * @param {Node} node\n   * @return {DocumentFragment}\n   */\n\n  function nodeToFragment(node) {\n    // if its a template tag and the browser supports it,\n    // its content is already a document fragment. However, iOS Safari has\n    // bug when using directly cloned template content with touch\n    // events and can cause crashes when the nodes are removed from DOM, so we\n    // have to treat template elements as string templates. (#2805)\n    /* istanbul ignore if */\n    if (isRealTemplate(node)) {\n      return stringToFragment(node.innerHTML);\n    }\n    // script template\n    if (node.tagName === 'SCRIPT') {\n      return stringToFragment(node.textContent);\n    }\n    // normal node, clone it to avoid mutating the original\n    var clonedNode = cloneNode(node);\n    var frag = document.createDocumentFragment();\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = clonedNode.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n    trimNode(frag);\n    return frag;\n  }\n\n  // Test for the presence of the Safari template cloning bug\n  // https://bugs.webkit.org/showug.cgi?id=137755\n  var hasBrokenTemplate = (function () {\n    /* istanbul ignore else */\n    if (inBrowser) {\n      var a = document.createElement('div');\n      a.innerHTML = '<template>1</template>';\n      return !a.cloneNode(true).firstChild.innerHTML;\n    } else {\n      return false;\n    }\n  })();\n\n  // Test for IE10/11 textarea placeholder clone bug\n  var hasTextareaCloneBug = (function () {\n    /* istanbul ignore else */\n    if (inBrowser) {\n      var t = document.createElement('textarea');\n      t.placeholder = 't';\n      return t.cloneNode(true).value === 't';\n    } else {\n      return false;\n    }\n  })();\n\n  /**\n   * 1. Deal with Safari cloning nested <template> bug by\n   *    manually cloning all template instances.\n   * 2. Deal with IE10/11 textarea placeholder bug by setting\n   *    the correct value after cloning.\n   *\n   * @param {Element|DocumentFragment} node\n   * @return {Element|DocumentFragment}\n   */\n\n  function cloneNode(node) {\n    /* istanbul ignore if */\n    if (!node.querySelectorAll) {\n      return node.cloneNode();\n    }\n    var res = node.cloneNode(true);\n    var i, original, cloned;\n    /* istanbul ignore if */\n    if (hasBrokenTemplate) {\n      var tempClone = res;\n      if (isRealTemplate(node)) {\n        node = node.content;\n        tempClone = res.content;\n      }\n      original = node.querySelectorAll('template');\n      if (original.length) {\n        cloned = tempClone.querySelectorAll('template');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n        }\n      }\n    }\n    /* istanbul ignore if */\n    if (hasTextareaCloneBug) {\n      if (node.tagName === 'TEXTAREA') {\n        res.value = node.value;\n      } else {\n        original = node.querySelectorAll('textarea');\n        if (original.length) {\n          cloned = res.querySelectorAll('textarea');\n          i = cloned.length;\n          while (i--) {\n            cloned[i].value = original[i].value;\n          }\n        }\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Process the template option and normalizes it into a\n   * a DocumentFragment that can be used as a partial or a\n   * instance template.\n   *\n   * @param {*} template\n   *        Possible values include:\n   *        - DocumentFragment object\n   *        - Node object of type Template\n   *        - id selector: '#some-template-id'\n   *        - template string: '<div><span>{{msg}}</span></div>'\n   * @param {Boolean} shouldClone\n   * @param {Boolean} raw\n   *        inline HTML interpolation. Do not check for id\n   *        selector and keep whitespace in the string.\n   * @return {DocumentFragment|undefined}\n   */\n\n  function parseTemplate(template, shouldClone, raw) {\n    var node, frag;\n\n    // if the template is already a document fragment,\n    // do nothing\n    if (isFragment(template)) {\n      trimNode(template);\n      return shouldClone ? cloneNode(template) : template;\n    }\n\n    if (typeof template === 'string') {\n      // id selector\n      if (!raw && template.charAt(0) === '#') {\n        // id selector can be cached too\n        frag = idSelectorCache.get(template);\n        if (!frag) {\n          node = document.getElementById(template.slice(1));\n          if (node) {\n            frag = nodeToFragment(node);\n            // save selector to cache\n            idSelectorCache.put(template, frag);\n          }\n        }\n      } else {\n        // normal string template\n        frag = stringToFragment(template, raw);\n      }\n    } else if (template.nodeType) {\n      // a direct node\n      frag = nodeToFragment(template);\n    }\n\n    return frag && shouldClone ? cloneNode(frag) : frag;\n  }\n\nvar template = Object.freeze({\n    cloneNode: cloneNode,\n    parseTemplate: parseTemplate\n  });\n\n  var html = {\n\n    bind: function bind() {\n      // a comment node means this is a binding for\n      // {{{ inline unescaped html }}}\n      if (this.el.nodeType === 8) {\n        // hold nodes\n        this.nodes = [];\n        // replace the placeholder with proper anchor\n        this.anchor = createAnchor('v-html');\n        replace(this.el, this.anchor);\n      }\n    },\n\n    update: function update(value) {\n      value = _toString(value);\n      if (this.nodes) {\n        this.swap(value);\n      } else {\n        this.el.innerHTML = value;\n      }\n    },\n\n    swap: function swap(value) {\n      // remove old nodes\n      var i = this.nodes.length;\n      while (i--) {\n        remove(this.nodes[i]);\n      }\n      // convert new value to a fragment\n      // do not attempt to retrieve from id selector\n      var frag = parseTemplate(value, true, true);\n      // save a reference to these nodes so we can remove later\n      this.nodes = toArray(frag.childNodes);\n      before(frag, this.anchor);\n    }\n  };\n\n  /**\n   * Abstraction for a partially-compiled fragment.\n   * Can optionally compile content with a child scope.\n   *\n   * @param {Function} linker\n   * @param {Vue} vm\n   * @param {DocumentFragment} frag\n   * @param {Vue} [host]\n   * @param {Object} [scope]\n   * @param {Fragment} [parentFrag]\n   */\n  function Fragment(linker, vm, frag, host, scope, parentFrag) {\n    this.children = [];\n    this.childFrags = [];\n    this.vm = vm;\n    this.scope = scope;\n    this.inserted = false;\n    this.parentFrag = parentFrag;\n    if (parentFrag) {\n      parentFrag.childFrags.push(this);\n    }\n    this.unlink = linker(vm, frag, host, scope, this);\n    var single = this.single = frag.childNodes.length === 1 &&\n    // do not go single mode if the only node is an anchor\n    !frag.childNodes[0].__v_anchor;\n    if (single) {\n      this.node = frag.childNodes[0];\n      this.before = singleBefore;\n      this.remove = singleRemove;\n    } else {\n      this.node = createAnchor('fragment-start');\n      this.end = createAnchor('fragment-end');\n      this.frag = frag;\n      prepend(this.node, frag);\n      frag.appendChild(this.end);\n      this.before = multiBefore;\n      this.remove = multiRemove;\n    }\n    this.node.__v_frag = this;\n  }\n\n  /**\n   * Call attach/detach for all components contained within\n   * this fragment. Also do so recursively for all child\n   * fragments.\n   *\n   * @param {Function} hook\n   */\n\n  Fragment.prototype.callHook = function (hook) {\n    var i, l;\n    for (i = 0, l = this.childFrags.length; i < l; i++) {\n      this.childFrags[i].callHook(hook);\n    }\n    for (i = 0, l = this.children.length; i < l; i++) {\n      hook(this.children[i]);\n    }\n  };\n\n  /**\n   * Insert fragment before target, single node version\n   *\n   * @param {Node} target\n   * @param {Boolean} withTransition\n   */\n\n  function singleBefore(target, withTransition) {\n    this.inserted = true;\n    var method = withTransition !== false ? beforeWithTransition : before;\n    method(this.node, target, this.vm);\n    if (inDoc(this.node)) {\n      this.callHook(attach);\n    }\n  }\n\n  /**\n   * Remove fragment, single node version\n   */\n\n  function singleRemove() {\n    this.inserted = false;\n    var shouldCallRemove = inDoc(this.node);\n    var self = this;\n    this.beforeRemove();\n    removeWithTransition(this.node, this.vm, function () {\n      if (shouldCallRemove) {\n        self.callHook(detach);\n      }\n      self.destroy();\n    });\n  }\n\n  /**\n   * Insert fragment before target, multi-nodes version\n   *\n   * @param {Node} target\n   * @param {Boolean} withTransition\n   */\n\n  function multiBefore(target, withTransition) {\n    this.inserted = true;\n    var vm = this.vm;\n    var method = withTransition !== false ? beforeWithTransition : before;\n    mapNodeRange(this.node, this.end, function (node) {\n      method(node, target, vm);\n    });\n    if (inDoc(this.node)) {\n      this.callHook(attach);\n    }\n  }\n\n  /**\n   * Remove fragment, multi-nodes version\n   */\n\n  function multiRemove() {\n    this.inserted = false;\n    var self = this;\n    var shouldCallRemove = inDoc(this.node);\n    this.beforeRemove();\n    removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n      if (shouldCallRemove) {\n        self.callHook(detach);\n      }\n      self.destroy();\n    });\n  }\n\n  /**\n   * Prepare the fragment for removal.\n   */\n\n  Fragment.prototype.beforeRemove = function () {\n    var i, l;\n    for (i = 0, l = this.childFrags.length; i < l; i++) {\n      // call the same method recursively on child\n      // fragments, depth-first\n      this.childFrags[i].beforeRemove(false);\n    }\n    for (i = 0, l = this.children.length; i < l; i++) {\n      // Call destroy for all contained instances,\n      // with remove:false and defer:true.\n      // Defer is necessary because we need to\n      // keep the children to call detach hooks\n      // on them.\n      this.children[i].$destroy(false, true);\n    }\n    var dirs = this.unlink.dirs;\n    for (i = 0, l = dirs.length; i < l; i++) {\n      // disable the watchers on all the directives\n      // so that the rendered content stays the same\n      // during removal.\n      dirs[i]._watcher && dirs[i]._watcher.teardown();\n    }\n  };\n\n  /**\n   * Destroy the fragment.\n   */\n\n  Fragment.prototype.destroy = function () {\n    if (this.parentFrag) {\n      this.parentFrag.childFrags.$remove(this);\n    }\n    this.node.__v_frag = null;\n    this.unlink();\n  };\n\n  /**\n   * Call attach hook for a Vue instance.\n   *\n   * @param {Vue} child\n   */\n\n  function attach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Call detach hook for a Vue instance.\n   *\n   * @param {Vue} child\n   */\n\n  function detach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  var linkerCache = new Cache(5000);\n\n  /**\n   * A factory that can be used to create instances of a\n   * fragment. Caches the compiled linker if possible.\n   *\n   * @param {Vue} vm\n   * @param {Element|String} el\n   */\n  function FragmentFactory(vm, el) {\n    this.vm = vm;\n    var template;\n    var isString = typeof el === 'string';\n    if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n      template = parseTemplate(el, true);\n    } else {\n      template = document.createDocumentFragment();\n      template.appendChild(el);\n    }\n    this.template = template;\n    // linker can be cached, but only for components\n    var linker;\n    var cid = vm.constructor.cid;\n    if (cid > 0) {\n      var cacheId = cid + (isString ? el : getOuterHTML(el));\n      linker = linkerCache.get(cacheId);\n      if (!linker) {\n        linker = compile(template, vm.$options, true);\n        linkerCache.put(cacheId, linker);\n      }\n    } else {\n      linker = compile(template, vm.$options, true);\n    }\n    this.linker = linker;\n  }\n\n  /**\n   * Create a fragment instance with given host and scope.\n   *\n   * @param {Vue} host\n   * @param {Object} scope\n   * @param {Fragment} parentFrag\n   */\n\n  FragmentFactory.prototype.create = function (host, scope, parentFrag) {\n    var frag = cloneNode(this.template);\n    return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n  };\n\n  var ON = 700;\n  var MODEL = 800;\n  var BIND = 850;\n  var TRANSITION = 1100;\n  var EL = 1500;\n  var COMPONENT = 1500;\n  var PARTIAL = 1750;\n  var IF = 2100;\n  var FOR = 2200;\n  var SLOT = 2300;\n\n  var uid$3 = 0;\n\n  var vFor = {\n\n    priority: FOR,\n    terminal: true,\n\n    params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n    bind: function bind() {\n      // support \"item in/of items\" syntax\n      var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n      if (inMatch) {\n        var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n        if (itMatch) {\n          this.iterator = itMatch[1].trim();\n          this.alias = itMatch[2].trim();\n        } else {\n          this.alias = inMatch[1].trim();\n        }\n        this.expression = inMatch[2];\n      }\n\n      if (!this.alias) {\n        'development' !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n        return;\n      }\n\n      // uid as a cache identifier\n      this.id = '__v-for__' + ++uid$3;\n\n      // check if this is an option list,\n      // so that we know if we need to update the <select>'s\n      // v-model when the option list has changed.\n      // because v-model has a lower priority than v-for,\n      // the v-model is not bound here yet, so we have to\n      // retrive it in the actual updateModel() function.\n      var tag = this.el.tagName;\n      this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n      // setup anchor nodes\n      this.start = createAnchor('v-for-start');\n      this.end = createAnchor('v-for-end');\n      replace(this.el, this.end);\n      before(this.start, this.end);\n\n      // cache\n      this.cache = Object.create(null);\n\n      // fragment factory\n      this.factory = new FragmentFactory(this.vm, this.el);\n    },\n\n    update: function update(data) {\n      this.diff(data);\n      this.updateRef();\n      this.updateModel();\n    },\n\n    /**\n     * Diff, based on new data and old data, determine the\n     * minimum amount of DOM manipulations needed to make the\n     * DOM reflect the new data Array.\n     *\n     * The algorithm diffs the new data Array by storing a\n     * hidden reference to an owner vm instance on previously\n     * seen data. This allows us to achieve O(n) which is\n     * better than a levenshtein distance based algorithm,\n     * which is O(m * n).\n     *\n     * @param {Array} data\n     */\n\n    diff: function diff(data) {\n      // check if the Array was converted from an Object\n      var item = data[0];\n      var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n      var trackByKey = this.params.trackBy;\n      var oldFrags = this.frags;\n      var frags = this.frags = new Array(data.length);\n      var alias = this.alias;\n      var iterator = this.iterator;\n      var start = this.start;\n      var end = this.end;\n      var inDocument = inDoc(start);\n      var init = !oldFrags;\n      var i, l, frag, key, value, primitive;\n\n      // First pass, go through the new Array and fill up\n      // the new frags array. If a piece of data has a cached\n      // instance for it, we reuse it. Otherwise build a new\n      // instance.\n      for (i = 0, l = data.length; i < l; i++) {\n        item = data[i];\n        key = convertedFromObject ? item.$key : null;\n        value = convertedFromObject ? item.$value : item;\n        primitive = !isObject(value);\n        frag = !init && this.getCachedFrag(value, i, key);\n        if (frag) {\n          // reusable fragment\n          frag.reused = true;\n          // update $index\n          frag.scope.$index = i;\n          // update $key\n          if (key) {\n            frag.scope.$key = key;\n          }\n          // update iterator\n          if (iterator) {\n            frag.scope[iterator] = key !== null ? key : i;\n          }\n          // update data for track-by, object repeat &\n          // primitive values.\n          if (trackByKey || convertedFromObject || primitive) {\n            withoutConversion(function () {\n              frag.scope[alias] = value;\n            });\n          }\n        } else {\n          // new isntance\n          frag = this.create(value, alias, i, key);\n          frag.fresh = !init;\n        }\n        frags[i] = frag;\n        if (init) {\n          frag.before(end);\n        }\n      }\n\n      // we're done for the initial render.\n      if (init) {\n        return;\n      }\n\n      // Second pass, go through the old fragments and\n      // destroy those who are not reused (and remove them\n      // from cache)\n      var removalIndex = 0;\n      var totalRemoved = oldFrags.length - frags.length;\n      // when removing a large number of fragments, watcher removal\n      // turns out to be a perf bottleneck, so we batch the watcher\n      // removals into a single filter call!\n      this.vm._vForRemoving = true;\n      for (i = 0, l = oldFrags.length; i < l; i++) {\n        frag = oldFrags[i];\n        if (!frag.reused) {\n          this.deleteCachedFrag(frag);\n          this.remove(frag, removalIndex++, totalRemoved, inDocument);\n        }\n      }\n      this.vm._vForRemoving = false;\n      if (removalIndex) {\n        this.vm._watchers = this.vm._watchers.filter(function (w) {\n          return w.active;\n        });\n      }\n\n      // Final pass, move/insert new fragments into the\n      // right place.\n      var targetPrev, prevEl, currentPrev;\n      var insertionIndex = 0;\n      for (i = 0, l = frags.length; i < l; i++) {\n        frag = frags[i];\n        // this is the frag that we should be after\n        targetPrev = frags[i - 1];\n        prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n        if (frag.reused && !frag.staggerCb) {\n          currentPrev = findPrevFrag(frag, start, this.id);\n          if (currentPrev !== targetPrev && (!currentPrev ||\n          // optimization for moving a single item.\n          // thanks to suggestions by @livoras in #1807\n          findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n            this.move(frag, prevEl);\n          }\n        } else {\n          // new instance, or still in stagger.\n          // insert with updated stagger index.\n          this.insert(frag, insertionIndex++, prevEl, inDocument);\n        }\n        frag.reused = frag.fresh = false;\n      }\n    },\n\n    /**\n     * Create a new fragment instance.\n     *\n     * @param {*} value\n     * @param {String} alias\n     * @param {Number} index\n     * @param {String} [key]\n     * @return {Fragment}\n     */\n\n    create: function create(value, alias, index, key) {\n      var host = this._host;\n      // create iteration scope\n      var parentScope = this._scope || this.vm;\n      var scope = Object.create(parentScope);\n      // ref holder for the scope\n      scope.$refs = Object.create(parentScope.$refs);\n      scope.$els = Object.create(parentScope.$els);\n      // make sure point $parent to parent scope\n      scope.$parent = parentScope;\n      // for two-way binding on alias\n      scope.$forContext = this;\n      // define scope properties\n      // important: define the scope alias without forced conversion\n      // so that frozen data structures remain non-reactive.\n      withoutConversion(function () {\n        defineReactive(scope, alias, value);\n      });\n      defineReactive(scope, '$index', index);\n      if (key) {\n        defineReactive(scope, '$key', key);\n      } else if (scope.$key) {\n        // avoid accidental fallback\n        def(scope, '$key', null);\n      }\n      if (this.iterator) {\n        defineReactive(scope, this.iterator, key !== null ? key : index);\n      }\n      var frag = this.factory.create(host, scope, this._frag);\n      frag.forId = this.id;\n      this.cacheFrag(value, frag, index, key);\n      return frag;\n    },\n\n    /**\n     * Update the v-ref on owner vm.\n     */\n\n    updateRef: function updateRef() {\n      var ref = this.descriptor.ref;\n      if (!ref) return;\n      var hash = (this._scope || this.vm).$refs;\n      var refs;\n      if (!this.fromObject) {\n        refs = this.frags.map(findVmFromFrag);\n      } else {\n        refs = {};\n        this.frags.forEach(function (frag) {\n          refs[frag.scope.$key] = findVmFromFrag(frag);\n        });\n      }\n      hash[ref] = refs;\n    },\n\n    /**\n     * For option lists, update the containing v-model on\n     * parent <select>.\n     */\n\n    updateModel: function updateModel() {\n      if (this.isOption) {\n        var parent = this.start.parentNode;\n        var model = parent && parent.__v_model;\n        if (model) {\n          model.forceUpdate();\n        }\n      }\n    },\n\n    /**\n     * Insert a fragment. Handles staggering.\n     *\n     * @param {Fragment} frag\n     * @param {Number} index\n     * @param {Node} prevEl\n     * @param {Boolean} inDocument\n     */\n\n    insert: function insert(frag, index, prevEl, inDocument) {\n      if (frag.staggerCb) {\n        frag.staggerCb.cancel();\n        frag.staggerCb = null;\n      }\n      var staggerAmount = this.getStagger(frag, index, null, 'enter');\n      if (inDocument && staggerAmount) {\n        // create an anchor and insert it synchronously,\n        // so that we can resolve the correct order without\n        // worrying about some elements not inserted yet\n        var anchor = frag.staggerAnchor;\n        if (!anchor) {\n          anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n          anchor.__v_frag = frag;\n        }\n        after(anchor, prevEl);\n        var op = frag.staggerCb = cancellable(function () {\n          frag.staggerCb = null;\n          frag.before(anchor);\n          remove(anchor);\n        });\n        setTimeout(op, staggerAmount);\n      } else {\n        var target = prevEl.nextSibling;\n        /* istanbul ignore if */\n        if (!target) {\n          // reset end anchor position in case the position was messed up\n          // by an external drag-n-drop library.\n          after(this.end, prevEl);\n          target = this.end;\n        }\n        frag.before(target);\n      }\n    },\n\n    /**\n     * Remove a fragment. Handles staggering.\n     *\n     * @param {Fragment} frag\n     * @param {Number} index\n     * @param {Number} total\n     * @param {Boolean} inDocument\n     */\n\n    remove: function remove(frag, index, total, inDocument) {\n      if (frag.staggerCb) {\n        frag.staggerCb.cancel();\n        frag.staggerCb = null;\n        // it's not possible for the same frag to be removed\n        // twice, so if we have a pending stagger callback,\n        // it means this frag is queued for enter but removed\n        // before its transition started. Since it is already\n        // destroyed, we can just leave it in detached state.\n        return;\n      }\n      var staggerAmount = this.getStagger(frag, index, total, 'leave');\n      if (inDocument && staggerAmount) {\n        var op = frag.staggerCb = cancellable(function () {\n          frag.staggerCb = null;\n          frag.remove();\n        });\n        setTimeout(op, staggerAmount);\n      } else {\n        frag.remove();\n      }\n    },\n\n    /**\n     * Move a fragment to a new position.\n     * Force no transition.\n     *\n     * @param {Fragment} frag\n     * @param {Node} prevEl\n     */\n\n    move: function move(frag, prevEl) {\n      // fix a common issue with Sortable:\n      // if prevEl doesn't have nextSibling, this means it's\n      // been dragged after the end anchor. Just re-position\n      // the end anchor to the end of the container.\n      /* istanbul ignore if */\n      if (!prevEl.nextSibling) {\n        this.end.parentNode.appendChild(this.end);\n      }\n      frag.before(prevEl.nextSibling, false);\n    },\n\n    /**\n     * Cache a fragment using track-by or the object key.\n     *\n     * @param {*} value\n     * @param {Fragment} frag\n     * @param {Number} index\n     * @param {String} [key]\n     */\n\n    cacheFrag: function cacheFrag(value, frag, index, key) {\n      var trackByKey = this.params.trackBy;\n      var cache = this.cache;\n      var primitive = !isObject(value);\n      var id;\n      if (key || trackByKey || primitive) {\n        id = getTrackByKey(index, key, value, trackByKey);\n        if (!cache[id]) {\n          cache[id] = frag;\n        } else if (trackByKey !== '$index') {\n          'development' !== 'production' && this.warnDuplicate(value);\n        }\n      } else {\n        id = this.id;\n        if (hasOwn(value, id)) {\n          if (value[id] === null) {\n            value[id] = frag;\n          } else {\n            'development' !== 'production' && this.warnDuplicate(value);\n          }\n        } else if (Object.isExtensible(value)) {\n          def(value, id, frag);\n        } else if (true) {\n          warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n        }\n      }\n      frag.raw = value;\n    },\n\n    /**\n     * Get a cached fragment from the value/index/key\n     *\n     * @param {*} value\n     * @param {Number} index\n     * @param {String} key\n     * @return {Fragment}\n     */\n\n    getCachedFrag: function getCachedFrag(value, index, key) {\n      var trackByKey = this.params.trackBy;\n      var primitive = !isObject(value);\n      var frag;\n      if (key || trackByKey || primitive) {\n        var id = getTrackByKey(index, key, value, trackByKey);\n        frag = this.cache[id];\n      } else {\n        frag = value[this.id];\n      }\n      if (frag && (frag.reused || frag.fresh)) {\n        'development' !== 'production' && this.warnDuplicate(value);\n      }\n      return frag;\n    },\n\n    /**\n     * Delete a fragment from cache.\n     *\n     * @param {Fragment} frag\n     */\n\n    deleteCachedFrag: function deleteCachedFrag(frag) {\n      var value = frag.raw;\n      var trackByKey = this.params.trackBy;\n      var scope = frag.scope;\n      var index = scope.$index;\n      // fix #948: avoid accidentally fall through to\n      // a parent repeater which happens to have $key.\n      var key = hasOwn(scope, '$key') && scope.$key;\n      var primitive = !isObject(value);\n      if (trackByKey || key || primitive) {\n        var id = getTrackByKey(index, key, value, trackByKey);\n        this.cache[id] = null;\n      } else {\n        value[this.id] = null;\n        frag.raw = null;\n      }\n    },\n\n    /**\n     * Get the stagger amount for an insertion/removal.\n     *\n     * @param {Fragment} frag\n     * @param {Number} index\n     * @param {Number} total\n     * @param {String} type\n     */\n\n    getStagger: function getStagger(frag, index, total, type) {\n      type = type + 'Stagger';\n      var trans = frag.node.__v_trans;\n      var hooks = trans && trans.hooks;\n      var hook = hooks && (hooks[type] || hooks.stagger);\n      return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n    },\n\n    /**\n     * Pre-process the value before piping it through the\n     * filters. This is passed to and called by the watcher.\n     */\n\n    _preProcess: function _preProcess(value) {\n      // regardless of type, store the un-filtered raw value.\n      this.rawValue = value;\n      return value;\n    },\n\n    /**\n     * Post-process the value after it has been piped through\n     * the filters. This is passed to and called by the watcher.\n     *\n     * It is necessary for this to be called during the\n     * watcher's dependency collection phase because we want\n     * the v-for to update when the source Object is mutated.\n     */\n\n    _postProcess: function _postProcess(value) {\n      if (isArray(value)) {\n        return value;\n      } else if (isPlainObject(value)) {\n        // convert plain object to array.\n        var keys = Object.keys(value);\n        var i = keys.length;\n        var res = new Array(i);\n        var key;\n        while (i--) {\n          key = keys[i];\n          res[i] = {\n            $key: key,\n            $value: value[key]\n          };\n        }\n        return res;\n      } else {\n        if (typeof value === 'number' && !isNaN(value)) {\n          value = range(value);\n        }\n        return value || [];\n      }\n    },\n\n    unbind: function unbind() {\n      if (this.descriptor.ref) {\n        (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n      }\n      if (this.frags) {\n        var i = this.frags.length;\n        var frag;\n        while (i--) {\n          frag = this.frags[i];\n          this.deleteCachedFrag(frag);\n          frag.destroy();\n        }\n      }\n    }\n  };\n\n  /**\n   * Helper to find the previous element that is a fragment\n   * anchor. This is necessary because a destroyed frag's\n   * element could still be lingering in the DOM before its\n   * leaving transition finishes, but its inserted flag\n   * should have been set to false so we can skip them.\n   *\n   * If this is a block repeat, we want to make sure we only\n   * return frag that is bound to this v-for. (see #929)\n   *\n   * @param {Fragment} frag\n   * @param {Comment|Text} anchor\n   * @param {String} id\n   * @return {Fragment}\n   */\n\n  function findPrevFrag(frag, anchor, id) {\n    var el = frag.node.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__v_frag;\n    while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n      el = el.previousSibling;\n      /* istanbul ignore if */\n      if (!el) return;\n      frag = el.__v_frag;\n    }\n    return frag;\n  }\n\n  /**\n   * Find a vm from a fragment.\n   *\n   * @param {Fragment} frag\n   * @return {Vue|undefined}\n   */\n\n  function findVmFromFrag(frag) {\n    var node = frag.node;\n    // handle multi-node frag\n    if (frag.end) {\n      while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n        node = node.nextSibling;\n      }\n    }\n    return node.__vue__;\n  }\n\n  /**\n   * Create a range array from given number.\n   *\n   * @param {Number} n\n   * @return {Array}\n   */\n\n  function range(n) {\n    var i = -1;\n    var ret = new Array(Math.floor(n));\n    while (++i < n) {\n      ret[i] = i;\n    }\n    return ret;\n  }\n\n  /**\n   * Get the track by key for an item.\n   *\n   * @param {Number} index\n   * @param {String} key\n   * @param {*} value\n   * @param {String} [trackByKey]\n   */\n\n  function getTrackByKey(index, key, value, trackByKey) {\n    return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n  }\n\n  if (true) {\n    vFor.warnDuplicate = function (value) {\n      warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n    };\n  }\n\n  var vIf = {\n\n    priority: IF,\n    terminal: true,\n\n    bind: function bind() {\n      var el = this.el;\n      if (!el.__vue__) {\n        // check else block\n        var next = el.nextElementSibling;\n        if (next && getAttr(next, 'v-else') !== null) {\n          remove(next);\n          this.elseEl = next;\n        }\n        // check main block\n        this.anchor = createAnchor('v-if');\n        replace(el, this.anchor);\n      } else {\n        'development' !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n        this.invalid = true;\n      }\n    },\n\n    update: function update(value) {\n      if (this.invalid) return;\n      if (value) {\n        if (!this.frag) {\n          this.insert();\n        }\n      } else {\n        this.remove();\n      }\n    },\n\n    insert: function insert() {\n      if (this.elseFrag) {\n        this.elseFrag.remove();\n        this.elseFrag = null;\n      }\n      // lazy init factory\n      if (!this.factory) {\n        this.factory = new FragmentFactory(this.vm, this.el);\n      }\n      this.frag = this.factory.create(this._host, this._scope, this._frag);\n      this.frag.before(this.anchor);\n    },\n\n    remove: function remove() {\n      if (this.frag) {\n        this.frag.remove();\n        this.frag = null;\n      }\n      if (this.elseEl && !this.elseFrag) {\n        if (!this.elseFactory) {\n          this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n        }\n        this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n        this.elseFrag.before(this.anchor);\n      }\n    },\n\n    unbind: function unbind() {\n      if (this.frag) {\n        this.frag.destroy();\n      }\n      if (this.elseFrag) {\n        this.elseFrag.destroy();\n      }\n    }\n  };\n\n  var show = {\n\n    bind: function bind() {\n      // check else block\n      var next = this.el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        this.elseEl = next;\n      }\n    },\n\n    update: function update(value) {\n      this.apply(this.el, value);\n      if (this.elseEl) {\n        this.apply(this.elseEl, !value);\n      }\n    },\n\n    apply: function apply(el, value) {\n      if (inDoc(el)) {\n        applyTransition(el, value ? 1 : -1, toggle, this.vm);\n      } else {\n        toggle();\n      }\n      function toggle() {\n        el.style.display = value ? '' : 'none';\n      }\n    }\n  };\n\n  var text$2 = {\n\n    bind: function bind() {\n      var self = this;\n      var el = this.el;\n      var isRange = el.type === 'range';\n      var lazy = this.params.lazy;\n      var number = this.params.number;\n      var debounce = this.params.debounce;\n\n      // handle composition events.\n      //   http://blog.evanyou.me/2014/01/03/composition-event/\n      // skip this for Android because it handles composition\n      // events quite differently. Android doesn't trigger\n      // composition events for language input methods e.g.\n      // Chinese, but instead triggers them for spelling\n      // suggestions... (see Discussion/#162)\n      var composing = false;\n      if (!isAndroid && !isRange) {\n        this.on('compositionstart', function () {\n          composing = true;\n        });\n        this.on('compositionend', function () {\n          composing = false;\n          // in IE11 the \"compositionend\" event fires AFTER\n          // the \"input\" event, so the input handler is blocked\n          // at the end... have to call it here.\n          //\n          // #1327: in lazy mode this is unecessary.\n          if (!lazy) {\n            self.listener();\n          }\n        });\n      }\n\n      // prevent messing with the input when user is typing,\n      // and force update on blur.\n      this.focused = false;\n      if (!isRange && !lazy) {\n        this.on('focus', function () {\n          self.focused = true;\n        });\n        this.on('blur', function () {\n          self.focused = false;\n          // do not sync value after fragment removal (#2017)\n          if (!self._frag || self._frag.inserted) {\n            self.rawListener();\n          }\n        });\n      }\n\n      // Now attach the main listener\n      this.listener = this.rawListener = function () {\n        if (composing || !self._bound) {\n          return;\n        }\n        var val = number || isRange ? toNumber(el.value) : el.value;\n        self.set(val);\n        // force update on next tick to avoid lock & same value\n        // also only update when user is not typing\n        nextTick(function () {\n          if (self._bound && !self.focused) {\n            self.update(self._watcher.value);\n          }\n        });\n      };\n\n      // apply debounce\n      if (debounce) {\n        this.listener = _debounce(this.listener, debounce);\n      }\n\n      // Support jQuery events, since jQuery.trigger() doesn't\n      // trigger native events in some cases and some plugins\n      // rely on $.trigger()\n      //\n      // We want to make sure if a listener is attached using\n      // jQuery, it is also removed with jQuery, that's why\n      // we do the check for each directive instance and\n      // store that check result on itself. This also allows\n      // easier test coverage control by unsetting the global\n      // jQuery variable in tests.\n      this.hasjQuery = typeof jQuery === 'function';\n      if (this.hasjQuery) {\n        var method = jQuery.fn.on ? 'on' : 'bind';\n        jQuery(el)[method]('change', this.rawListener);\n        if (!lazy) {\n          jQuery(el)[method]('input', this.listener);\n        }\n      } else {\n        this.on('change', this.rawListener);\n        if (!lazy) {\n          this.on('input', this.listener);\n        }\n      }\n\n      // IE9 doesn't fire input event on backspace/del/cut\n      if (!lazy && isIE9) {\n        this.on('cut', function () {\n          nextTick(self.listener);\n        });\n        this.on('keyup', function (e) {\n          if (e.keyCode === 46 || e.keyCode === 8) {\n            self.listener();\n          }\n        });\n      }\n\n      // set initial value if present\n      if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n        this.afterBind = this.listener;\n      }\n    },\n\n    update: function update(value) {\n      // #3029 only update when the value changes. This prevent\n      // browsers from overwriting values like selectionStart\n      value = _toString(value);\n      if (value !== this.el.value) this.el.value = value;\n    },\n\n    unbind: function unbind() {\n      var el = this.el;\n      if (this.hasjQuery) {\n        var method = jQuery.fn.off ? 'off' : 'unbind';\n        jQuery(el)[method]('change', this.listener);\n        jQuery(el)[method]('input', this.listener);\n      }\n    }\n  };\n\n  var radio = {\n\n    bind: function bind() {\n      var self = this;\n      var el = this.el;\n\n      this.getValue = function () {\n        // value overwrite via v-bind:value\n        if (el.hasOwnProperty('_value')) {\n          return el._value;\n        }\n        var val = el.value;\n        if (self.params.number) {\n          val = toNumber(val);\n        }\n        return val;\n      };\n\n      this.listener = function () {\n        self.set(self.getValue());\n      };\n      this.on('change', this.listener);\n\n      if (el.hasAttribute('checked')) {\n        this.afterBind = this.listener;\n      }\n    },\n\n    update: function update(value) {\n      this.el.checked = looseEqual(value, this.getValue());\n    }\n  };\n\n  var select = {\n\n    bind: function bind() {\n      var _this = this;\n\n      var self = this;\n      var el = this.el;\n\n      // method to force update DOM using latest value.\n      this.forceUpdate = function () {\n        if (self._watcher) {\n          self.update(self._watcher.get());\n        }\n      };\n\n      // check if this is a multiple select\n      var multiple = this.multiple = el.hasAttribute('multiple');\n\n      // attach listener\n      this.listener = function () {\n        var value = getValue(el, multiple);\n        value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n        self.set(value);\n      };\n      this.on('change', this.listener);\n\n      // if has initial value, set afterBind\n      var initValue = getValue(el, multiple, true);\n      if (multiple && initValue.length || !multiple && initValue !== null) {\n        this.afterBind = this.listener;\n      }\n\n      // All major browsers except Firefox resets\n      // selectedIndex with value -1 to 0 when the element\n      // is appended to a new parent, therefore we have to\n      // force a DOM update whenever that happens...\n      this.vm.$on('hook:attached', function () {\n        nextTick(_this.forceUpdate);\n      });\n      if (!inDoc(el)) {\n        nextTick(this.forceUpdate);\n      }\n    },\n\n    update: function update(value) {\n      var el = this.el;\n      el.selectedIndex = -1;\n      var multi = this.multiple && isArray(value);\n      var options = el.options;\n      var i = options.length;\n      var op, val;\n      while (i--) {\n        op = options[i];\n        val = op.hasOwnProperty('_value') ? op._value : op.value;\n        /* eslint-disable eqeqeq */\n        op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n        /* eslint-enable eqeqeq */\n      }\n    },\n\n    unbind: function unbind() {\n      /* istanbul ignore next */\n      this.vm.$off('hook:attached', this.forceUpdate);\n    }\n  };\n\n  /**\n   * Get select value\n   *\n   * @param {SelectElement} el\n   * @param {Boolean} multi\n   * @param {Boolean} init\n   * @return {Array|*}\n   */\n\n  function getValue(el, multi, init) {\n    var res = multi ? [] : null;\n    var op, val, selected;\n    for (var i = 0, l = el.options.length; i < l; i++) {\n      op = el.options[i];\n      selected = init ? op.hasAttribute('selected') : op.selected;\n      if (selected) {\n        val = op.hasOwnProperty('_value') ? op._value : op.value;\n        if (multi) {\n          res.push(val);\n        } else {\n          return val;\n        }\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Native Array.indexOf uses strict equal, but in this\n   * case we need to match string/numbers with custom equal.\n   *\n   * @param {Array} arr\n   * @param {*} val\n   */\n\n  function indexOf$1(arr, val) {\n    var i = arr.length;\n    while (i--) {\n      if (looseEqual(arr[i], val)) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  var checkbox = {\n\n    bind: function bind() {\n      var self = this;\n      var el = this.el;\n\n      this.getValue = function () {\n        return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n      };\n\n      function getBooleanValue() {\n        var val = el.checked;\n        if (val && el.hasOwnProperty('_trueValue')) {\n          return el._trueValue;\n        }\n        if (!val && el.hasOwnProperty('_falseValue')) {\n          return el._falseValue;\n        }\n        return val;\n      }\n\n      this.listener = function () {\n        var model = self._watcher.value;\n        if (isArray(model)) {\n          var val = self.getValue();\n          if (el.checked) {\n            if (indexOf(model, val) < 0) {\n              model.push(val);\n            }\n          } else {\n            model.$remove(val);\n          }\n        } else {\n          self.set(getBooleanValue());\n        }\n      };\n\n      this.on('change', this.listener);\n      if (el.hasAttribute('checked')) {\n        this.afterBind = this.listener;\n      }\n    },\n\n    update: function update(value) {\n      var el = this.el;\n      if (isArray(value)) {\n        el.checked = indexOf(value, this.getValue()) > -1;\n      } else {\n        if (el.hasOwnProperty('_trueValue')) {\n          el.checked = looseEqual(value, el._trueValue);\n        } else {\n          el.checked = !!value;\n        }\n      }\n    }\n  };\n\n  var handlers = {\n    text: text$2,\n    radio: radio,\n    select: select,\n    checkbox: checkbox\n  };\n\n  var model = {\n\n    priority: MODEL,\n    twoWay: true,\n    handlers: handlers,\n    params: ['lazy', 'number', 'debounce'],\n\n    /**\n     * Possible elements:\n     *   <select>\n     *   <textarea>\n     *   <input type=\"*\">\n     *     - text\n     *     - checkbox\n     *     - radio\n     *     - number\n     */\n\n    bind: function bind() {\n      // friendly warning...\n      this.checkFilters();\n      if (this.hasRead && !this.hasWrite) {\n        'development' !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n      }\n      var el = this.el;\n      var tag = el.tagName;\n      var handler;\n      if (tag === 'INPUT') {\n        handler = handlers[el.type] || handlers.text;\n      } else if (tag === 'SELECT') {\n        handler = handlers.select;\n      } else if (tag === 'TEXTAREA') {\n        handler = handlers.text;\n      } else {\n        'development' !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n        return;\n      }\n      el.__v_model = this;\n      handler.bind.call(this);\n      this.update = handler.update;\n      this._unbind = handler.unbind;\n    },\n\n    /**\n     * Check read/write filter stats.\n     */\n\n    checkFilters: function checkFilters() {\n      var filters = this.filters;\n      if (!filters) return;\n      var i = filters.length;\n      while (i--) {\n        var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n        if (typeof filter === 'function' || filter.read) {\n          this.hasRead = true;\n        }\n        if (filter.write) {\n          this.hasWrite = true;\n        }\n      }\n    },\n\n    unbind: function unbind() {\n      this.el.__v_model = null;\n      this._unbind && this._unbind();\n    }\n  };\n\n  // keyCode aliases\n  var keyCodes = {\n    esc: 27,\n    tab: 9,\n    enter: 13,\n    space: 32,\n    'delete': [8, 46],\n    up: 38,\n    left: 37,\n    right: 39,\n    down: 40\n  };\n\n  function keyFilter(handler, keys) {\n    var codes = keys.map(function (key) {\n      var charCode = key.charCodeAt(0);\n      if (charCode > 47 && charCode < 58) {\n        return parseInt(key, 10);\n      }\n      if (key.length === 1) {\n        charCode = key.toUpperCase().charCodeAt(0);\n        if (charCode > 64 && charCode < 91) {\n          return charCode;\n        }\n      }\n      return keyCodes[key];\n    });\n    codes = [].concat.apply([], codes);\n    return function keyHandler(e) {\n      if (codes.indexOf(e.keyCode) > -1) {\n        return handler.call(this, e);\n      }\n    };\n  }\n\n  function stopFilter(handler) {\n    return function stopHandler(e) {\n      e.stopPropagation();\n      return handler.call(this, e);\n    };\n  }\n\n  function preventFilter(handler) {\n    return function preventHandler(e) {\n      e.preventDefault();\n      return handler.call(this, e);\n    };\n  }\n\n  function selfFilter(handler) {\n    return function selfHandler(e) {\n      if (e.target === e.currentTarget) {\n        return handler.call(this, e);\n      }\n    };\n  }\n\n  var on$1 = {\n\n    priority: ON,\n    acceptStatement: true,\n    keyCodes: keyCodes,\n\n    bind: function bind() {\n      // deal with iframes\n      if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n        var self = this;\n        this.iframeBind = function () {\n          on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n        };\n        this.on('load', this.iframeBind);\n      }\n    },\n\n    update: function update(handler) {\n      // stub a noop for v-on with no value,\n      // e.g. @mousedown.prevent\n      if (!this.descriptor.raw) {\n        handler = function () {};\n      }\n\n      if (typeof handler !== 'function') {\n        'development' !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n        return;\n      }\n\n      // apply modifiers\n      if (this.modifiers.stop) {\n        handler = stopFilter(handler);\n      }\n      if (this.modifiers.prevent) {\n        handler = preventFilter(handler);\n      }\n      if (this.modifiers.self) {\n        handler = selfFilter(handler);\n      }\n      // key filter\n      var keys = Object.keys(this.modifiers).filter(function (key) {\n        return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n      });\n      if (keys.length) {\n        handler = keyFilter(handler, keys);\n      }\n\n      this.reset();\n      this.handler = handler;\n\n      if (this.iframeBind) {\n        this.iframeBind();\n      } else {\n        on(this.el, this.arg, this.handler, this.modifiers.capture);\n      }\n    },\n\n    reset: function reset() {\n      var el = this.iframeBind ? this.el.contentWindow : this.el;\n      if (this.handler) {\n        off(el, this.arg, this.handler);\n      }\n    },\n\n    unbind: function unbind() {\n      this.reset();\n    }\n  };\n\n  var prefixes = ['-webkit-', '-moz-', '-ms-'];\n  var camelPrefixes = ['Webkit', 'Moz', 'ms'];\n  var importantRE = /!important;?$/;\n  var propCache = Object.create(null);\n\n  var testEl = null;\n\n  var style = {\n\n    deep: true,\n\n    update: function update(value) {\n      if (typeof value === 'string') {\n        this.el.style.cssText = value;\n      } else if (isArray(value)) {\n        this.handleObject(value.reduce(extend, {}));\n      } else {\n        this.handleObject(value || {});\n      }\n    },\n\n    handleObject: function handleObject(value) {\n      // cache object styles so that only changed props\n      // are actually updated.\n      var cache = this.cache || (this.cache = {});\n      var name, val;\n      for (name in cache) {\n        if (!(name in value)) {\n          this.handleSingle(name, null);\n          delete cache[name];\n        }\n      }\n      for (name in value) {\n        val = value[name];\n        if (val !== cache[name]) {\n          cache[name] = val;\n          this.handleSingle(name, val);\n        }\n      }\n    },\n\n    handleSingle: function handleSingle(prop, value) {\n      prop = normalize(prop);\n      if (!prop) return; // unsupported prop\n      // cast possible numbers/booleans into strings\n      if (value != null) value += '';\n      if (value) {\n        var isImportant = importantRE.test(value) ? 'important' : '';\n        if (isImportant) {\n          /* istanbul ignore if */\n          if (true) {\n            warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n          }\n          value = value.replace(importantRE, '').trim();\n          this.el.style.setProperty(prop.kebab, value, isImportant);\n        } else {\n          this.el.style[prop.camel] = value;\n        }\n      } else {\n        this.el.style[prop.camel] = '';\n      }\n    }\n\n  };\n\n  /**\n   * Normalize a CSS property name.\n   * - cache result\n   * - auto prefix\n   * - camelCase -> dash-case\n   *\n   * @param {String} prop\n   * @return {String}\n   */\n\n  function normalize(prop) {\n    if (propCache[prop]) {\n      return propCache[prop];\n    }\n    var res = prefix(prop);\n    propCache[prop] = propCache[res] = res;\n    return res;\n  }\n\n  /**\n   * Auto detect the appropriate prefix for a CSS property.\n   * https://gist.github.com/paulirish/523692\n   *\n   * @param {String} prop\n   * @return {String}\n   */\n\n  function prefix(prop) {\n    prop = hyphenate(prop);\n    var camel = camelize(prop);\n    var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n    if (!testEl) {\n      testEl = document.createElement('div');\n    }\n    var i = prefixes.length;\n    var prefixed;\n    if (camel !== 'filter' && camel in testEl.style) {\n      return {\n        kebab: prop,\n        camel: camel\n      };\n    }\n    while (i--) {\n      prefixed = camelPrefixes[i] + upper;\n      if (prefixed in testEl.style) {\n        return {\n          kebab: prefixes[i] + prop,\n          camel: prefixed\n        };\n      }\n    }\n  }\n\n  // xlink\n  var xlinkNS = 'http://www.w3.org/1999/xlink';\n  var xlinkRE = /^xlink:/;\n\n  // check for attributes that prohibit interpolations\n  var disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n  // these attributes should also set their corresponding properties\n  // because they only affect the initial state of the element\n  var attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n  // these attributes expect enumrated values of \"true\" or \"false\"\n  // but are not boolean attributes\n  var enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\n  // these attributes should set a hidden property for\n  // binding v-model to object values\n  var modelProps = {\n    value: '_value',\n    'true-value': '_trueValue',\n    'false-value': '_falseValue'\n  };\n\n  var bind$1 = {\n\n    priority: BIND,\n\n    bind: function bind() {\n      var attr = this.arg;\n      var tag = this.el.tagName;\n      // should be deep watch on object mode\n      if (!attr) {\n        this.deep = true;\n      }\n      // handle interpolation bindings\n      var descriptor = this.descriptor;\n      var tokens = descriptor.interp;\n      if (tokens) {\n        // handle interpolations with one-time tokens\n        if (descriptor.hasOneTime) {\n          this.expression = tokensToExp(tokens, this._scope || this.vm);\n        }\n\n        // only allow binding on native attributes\n        if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n          'development' !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n          this.el.removeAttribute(attr);\n          this.invalid = true;\n        }\n\n        /* istanbul ignore if */\n        if (true) {\n          var raw = attr + '=\"' + descriptor.raw + '\": ';\n          // warn src\n          if (attr === 'src') {\n            warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n          }\n\n          // warn style\n          if (attr === 'style') {\n            warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n          }\n        }\n      }\n    },\n\n    update: function update(value) {\n      if (this.invalid) {\n        return;\n      }\n      var attr = this.arg;\n      if (this.arg) {\n        this.handleSingle(attr, value);\n      } else {\n        this.handleObject(value || {});\n      }\n    },\n\n    // share object handler with v-bind:class\n    handleObject: style.handleObject,\n\n    handleSingle: function handleSingle(attr, value) {\n      var el = this.el;\n      var interp = this.descriptor.interp;\n      if (this.modifiers.camel) {\n        attr = camelize(attr);\n      }\n      if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n        var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n        ? '' : value : value;\n\n        if (el[attr] !== attrValue) {\n          el[attr] = attrValue;\n        }\n      }\n      // set model props\n      var modelProp = modelProps[attr];\n      if (!interp && modelProp) {\n        el[modelProp] = value;\n        // update v-model if present\n        var model = el.__v_model;\n        if (model) {\n          model.listener();\n        }\n      }\n      // do not set value attribute for textarea\n      if (attr === 'value' && el.tagName === 'TEXTAREA') {\n        el.removeAttribute(attr);\n        return;\n      }\n      // update attribute\n      if (enumeratedAttrRE.test(attr)) {\n        el.setAttribute(attr, value ? 'true' : 'false');\n      } else if (value != null && value !== false) {\n        if (attr === 'class') {\n          // handle edge case #1960:\n          // class interpolation should not overwrite Vue transition class\n          if (el.__v_trans) {\n            value += ' ' + el.__v_trans.id + '-transition';\n          }\n          setClass(el, value);\n        } else if (xlinkRE.test(attr)) {\n          el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n        } else {\n          el.setAttribute(attr, value === true ? '' : value);\n        }\n      } else {\n        el.removeAttribute(attr);\n      }\n    }\n  };\n\n  var el = {\n\n    priority: EL,\n\n    bind: function bind() {\n      /* istanbul ignore if */\n      if (!this.arg) {\n        return;\n      }\n      var id = this.id = camelize(this.arg);\n      var refs = (this._scope || this.vm).$els;\n      if (hasOwn(refs, id)) {\n        refs[id] = this.el;\n      } else {\n        defineReactive(refs, id, this.el);\n      }\n    },\n\n    unbind: function unbind() {\n      var refs = (this._scope || this.vm).$els;\n      if (refs[this.id] === this.el) {\n        refs[this.id] = null;\n      }\n    }\n  };\n\n  var ref = {\n    bind: function bind() {\n      'development' !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n    }\n  };\n\n  var cloak = {\n    bind: function bind() {\n      var el = this.el;\n      this.vm.$once('pre-hook:compiled', function () {\n        el.removeAttribute('v-cloak');\n      });\n    }\n  };\n\n  // must export plain object\n  var directives = {\n    text: text$1,\n    html: html,\n    'for': vFor,\n    'if': vIf,\n    show: show,\n    model: model,\n    on: on$1,\n    bind: bind$1,\n    el: el,\n    ref: ref,\n    cloak: cloak\n  };\n\n  var vClass = {\n\n    deep: true,\n\n    update: function update(value) {\n      if (!value) {\n        this.cleanup();\n      } else if (typeof value === 'string') {\n        this.setClass(value.trim().split(/\\s+/));\n      } else {\n        this.setClass(normalize$1(value));\n      }\n    },\n\n    setClass: function setClass(value) {\n      this.cleanup(value);\n      for (var i = 0, l = value.length; i < l; i++) {\n        var val = value[i];\n        if (val) {\n          apply(this.el, val, addClass);\n        }\n      }\n      this.prevKeys = value;\n    },\n\n    cleanup: function cleanup(value) {\n      var prevKeys = this.prevKeys;\n      if (!prevKeys) return;\n      var i = prevKeys.length;\n      while (i--) {\n        var key = prevKeys[i];\n        if (!value || value.indexOf(key) < 0) {\n          apply(this.el, key, removeClass);\n        }\n      }\n    }\n  };\n\n  /**\n   * Normalize objects and arrays (potentially containing objects)\n   * into array of strings.\n   *\n   * @param {Object|Array<String|Object>} value\n   * @return {Array<String>}\n   */\n\n  function normalize$1(value) {\n    var res = [];\n    if (isArray(value)) {\n      for (var i = 0, l = value.length; i < l; i++) {\n        var _key = value[i];\n        if (_key) {\n          if (typeof _key === 'string') {\n            res.push(_key);\n          } else {\n            for (var k in _key) {\n              if (_key[k]) res.push(k);\n            }\n          }\n        }\n      }\n    } else if (isObject(value)) {\n      for (var key in value) {\n        if (value[key]) res.push(key);\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Add or remove a class/classes on an element\n   *\n   * @param {Element} el\n   * @param {String} key The class name. This may or may not\n   *                     contain a space character, in such a\n   *                     case we'll deal with multiple class\n   *                     names at once.\n   * @param {Function} fn\n   */\n\n  function apply(el, key, fn) {\n    key = key.trim();\n    if (key.indexOf(' ') === -1) {\n      fn(el, key);\n      return;\n    }\n    // The key contains one or more space characters.\n    // Since a class name doesn't accept such characters, we\n    // treat it as multiple classes.\n    var keys = key.split(/\\s+/);\n    for (var i = 0, l = keys.length; i < l; i++) {\n      fn(el, keys[i]);\n    }\n  }\n\n  var component = {\n\n    priority: COMPONENT,\n\n    params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n    /**\n     * Setup. Two possible usages:\n     *\n     * - static:\n     *   <comp> or <div v-component=\"comp\">\n     *\n     * - dynamic:\n     *   <component :is=\"view\">\n     */\n\n    bind: function bind() {\n      if (!this.el.__vue__) {\n        // keep-alive cache\n        this.keepAlive = this.params.keepAlive;\n        if (this.keepAlive) {\n          this.cache = {};\n        }\n        // check inline-template\n        if (this.params.inlineTemplate) {\n          // extract inline template as a DocumentFragment\n          this.inlineTemplate = extractContent(this.el, true);\n        }\n        // component resolution related state\n        this.pendingComponentCb = this.Component = null;\n        // transition related state\n        this.pendingRemovals = 0;\n        this.pendingRemovalCb = null;\n        // create a ref anchor\n        this.anchor = createAnchor('v-component');\n        replace(this.el, this.anchor);\n        // remove is attribute.\n        // this is removed during compilation, but because compilation is\n        // cached, when the component is used elsewhere this attribute\n        // will remain at link time.\n        this.el.removeAttribute('is');\n        this.el.removeAttribute(':is');\n        // remove ref, same as above\n        if (this.descriptor.ref) {\n          this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n        }\n        // if static, build right now.\n        if (this.literal) {\n          this.setComponent(this.expression);\n        }\n      } else {\n        'development' !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n      }\n    },\n\n    /**\n     * Public update, called by the watcher in the dynamic\n     * literal scenario, e.g. <component :is=\"view\">\n     */\n\n    update: function update(value) {\n      if (!this.literal) {\n        this.setComponent(value);\n      }\n    },\n\n    /**\n     * Switch dynamic components. May resolve the component\n     * asynchronously, and perform transition based on\n     * specified transition mode. Accepts a few additional\n     * arguments specifically for vue-router.\n     *\n     * The callback is called when the full transition is\n     * finished.\n     *\n     * @param {String} value\n     * @param {Function} [cb]\n     */\n\n    setComponent: function setComponent(value, cb) {\n      this.invalidatePending();\n      if (!value) {\n        // just remove current\n        this.unbuild(true);\n        this.remove(this.childVM, cb);\n        this.childVM = null;\n      } else {\n        var self = this;\n        this.resolveComponent(value, function () {\n          self.mountComponent(cb);\n        });\n      }\n    },\n\n    /**\n     * Resolve the component constructor to use when creating\n     * the child vm.\n     *\n     * @param {String|Function} value\n     * @param {Function} cb\n     */\n\n    resolveComponent: function resolveComponent(value, cb) {\n      var self = this;\n      this.pendingComponentCb = cancellable(function (Component) {\n        self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n        self.Component = Component;\n        cb();\n      });\n      this.vm._resolveComponent(value, this.pendingComponentCb);\n    },\n\n    /**\n     * Create a new instance using the current constructor and\n     * replace the existing instance. This method doesn't care\n     * whether the new component and the old one are actually\n     * the same.\n     *\n     * @param {Function} [cb]\n     */\n\n    mountComponent: function mountComponent(cb) {\n      // actual mount\n      this.unbuild(true);\n      var self = this;\n      var activateHooks = this.Component.options.activate;\n      var cached = this.getCached();\n      var newComponent = this.build();\n      if (activateHooks && !cached) {\n        this.waitingFor = newComponent;\n        callActivateHooks(activateHooks, newComponent, function () {\n          if (self.waitingFor !== newComponent) {\n            return;\n          }\n          self.waitingFor = null;\n          self.transition(newComponent, cb);\n        });\n      } else {\n        // update ref for kept-alive component\n        if (cached) {\n          newComponent._updateRef();\n        }\n        this.transition(newComponent, cb);\n      }\n    },\n\n    /**\n     * When the component changes or unbinds before an async\n     * constructor is resolved, we need to invalidate its\n     * pending callback.\n     */\n\n    invalidatePending: function invalidatePending() {\n      if (this.pendingComponentCb) {\n        this.pendingComponentCb.cancel();\n        this.pendingComponentCb = null;\n      }\n    },\n\n    /**\n     * Instantiate/insert a new child vm.\n     * If keep alive and has cached instance, insert that\n     * instance; otherwise build a new one and cache it.\n     *\n     * @param {Object} [extraOptions]\n     * @return {Vue} - the created instance\n     */\n\n    build: function build(extraOptions) {\n      var cached = this.getCached();\n      if (cached) {\n        return cached;\n      }\n      if (this.Component) {\n        // default options\n        var options = {\n          name: this.ComponentName,\n          el: cloneNode(this.el),\n          template: this.inlineTemplate,\n          // make sure to add the child with correct parent\n          // if this is a transcluded component, its parent\n          // should be the transclusion host.\n          parent: this._host || this.vm,\n          // if no inline-template, then the compiled\n          // linker can be cached for better performance.\n          _linkerCachable: !this.inlineTemplate,\n          _ref: this.descriptor.ref,\n          _asComponent: true,\n          _isRouterView: this._isRouterView,\n          // if this is a transcluded component, context\n          // will be the common parent vm of this instance\n          // and its host.\n          _context: this.vm,\n          // if this is inside an inline v-for, the scope\n          // will be the intermediate scope created for this\n          // repeat fragment. this is used for linking props\n          // and container directives.\n          _scope: this._scope,\n          // pass in the owner fragment of this component.\n          // this is necessary so that the fragment can keep\n          // track of its contained components in order to\n          // call attach/detach hooks for them.\n          _frag: this._frag\n        };\n        // extra options\n        // in 1.0.0 this is used by vue-router only\n        /* istanbul ignore if */\n        if (extraOptions) {\n          extend(options, extraOptions);\n        }\n        var child = new this.Component(options);\n        if (this.keepAlive) {\n          this.cache[this.Component.cid] = child;\n        }\n        /* istanbul ignore if */\n        if ('development' !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n          warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n        }\n        return child;\n      }\n    },\n\n    /**\n     * Try to get a cached instance of the current component.\n     *\n     * @return {Vue|undefined}\n     */\n\n    getCached: function getCached() {\n      return this.keepAlive && this.cache[this.Component.cid];\n    },\n\n    /**\n     * Teardown the current child, but defers cleanup so\n     * that we can separate the destroy and removal steps.\n     *\n     * @param {Boolean} defer\n     */\n\n    unbuild: function unbuild(defer) {\n      if (this.waitingFor) {\n        if (!this.keepAlive) {\n          this.waitingFor.$destroy();\n        }\n        this.waitingFor = null;\n      }\n      var child = this.childVM;\n      if (!child || this.keepAlive) {\n        if (child) {\n          // remove ref\n          child._inactive = true;\n          child._updateRef(true);\n        }\n        return;\n      }\n      // the sole purpose of `deferCleanup` is so that we can\n      // \"deactivate\" the vm right now and perform DOM removal\n      // later.\n      child.$destroy(false, defer);\n    },\n\n    /**\n     * Remove current destroyed child and manually do\n     * the cleanup after removal.\n     *\n     * @param {Function} cb\n     */\n\n    remove: function remove(child, cb) {\n      var keepAlive = this.keepAlive;\n      if (child) {\n        // we may have a component switch when a previous\n        // component is still being transitioned out.\n        // we want to trigger only one lastest insertion cb\n        // when the existing transition finishes. (#1119)\n        this.pendingRemovals++;\n        this.pendingRemovalCb = cb;\n        var self = this;\n        child.$remove(function () {\n          self.pendingRemovals--;\n          if (!keepAlive) child._cleanup();\n          if (!self.pendingRemovals && self.pendingRemovalCb) {\n            self.pendingRemovalCb();\n            self.pendingRemovalCb = null;\n          }\n        });\n      } else if (cb) {\n        cb();\n      }\n    },\n\n    /**\n     * Actually swap the components, depending on the\n     * transition mode. Defaults to simultaneous.\n     *\n     * @param {Vue} target\n     * @param {Function} [cb]\n     */\n\n    transition: function transition(target, cb) {\n      var self = this;\n      var current = this.childVM;\n      // for devtool inspection\n      if (current) current._inactive = true;\n      target._inactive = false;\n      this.childVM = target;\n      switch (self.params.transitionMode) {\n        case 'in-out':\n          target.$before(self.anchor, function () {\n            self.remove(current, cb);\n          });\n          break;\n        case 'out-in':\n          self.remove(current, function () {\n            target.$before(self.anchor, cb);\n          });\n          break;\n        default:\n          self.remove(current);\n          target.$before(self.anchor, cb);\n      }\n    },\n\n    /**\n     * Unbind.\n     */\n\n    unbind: function unbind() {\n      this.invalidatePending();\n      // Do not defer cleanup when unbinding\n      this.unbuild();\n      // destroy all keep-alive cached instances\n      if (this.cache) {\n        for (var key in this.cache) {\n          this.cache[key].$destroy();\n        }\n        this.cache = null;\n      }\n    }\n  };\n\n  /**\n   * Call activate hooks in order (asynchronous)\n   *\n   * @param {Array} hooks\n   * @param {Vue} vm\n   * @param {Function} cb\n   */\n\n  function callActivateHooks(hooks, vm, cb) {\n    var total = hooks.length;\n    var called = 0;\n    hooks[0].call(vm, next);\n    function next() {\n      if (++called >= total) {\n        cb();\n      } else {\n        hooks[called].call(vm, next);\n      }\n    }\n  }\n\n  var propBindingModes = config._propBindingModes;\n  var empty = {};\n\n  // regexes\n  var identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\n  var settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n  /**\n   * Compile props on a root element and return\n   * a props link function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Array} propOptions\n   * @param {Vue} vm\n   * @return {Function} propsLinkFn\n   */\n\n  function compileProps(el, propOptions, vm) {\n    var props = [];\n    var names = Object.keys(propOptions);\n    var i = names.length;\n    var options, name, attr, value, path, parsed, prop;\n    while (i--) {\n      name = names[i];\n      options = propOptions[name] || empty;\n\n      if ('development' !== 'production' && name === '$data') {\n        warn('Do not use $data as prop.', vm);\n        continue;\n      }\n\n      // props could contain dashes, which will be\n      // interpreted as minus calculations by the parser\n      // so we need to camelize the path here\n      path = camelize(name);\n      if (!identRE$1.test(path)) {\n        'development' !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n        continue;\n      }\n\n      prop = {\n        name: name,\n        path: path,\n        options: options,\n        mode: propBindingModes.ONE_WAY,\n        raw: null\n      };\n\n      attr = hyphenate(name);\n      // first check dynamic version\n      if ((value = getBindAttr(el, attr)) === null) {\n        if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n          prop.mode = propBindingModes.TWO_WAY;\n        } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n          prop.mode = propBindingModes.ONE_TIME;\n        }\n      }\n      if (value !== null) {\n        // has dynamic binding!\n        prop.raw = value;\n        parsed = parseDirective(value);\n        value = parsed.expression;\n        prop.filters = parsed.filters;\n        // check binding type\n        if (isLiteral(value) && !parsed.filters) {\n          // for expressions containing literal numbers and\n          // booleans, there's no need to setup a prop binding,\n          // so we can optimize them as a one-time set.\n          prop.optimizedLiteral = true;\n        } else {\n          prop.dynamic = true;\n          // check non-settable path for two-way bindings\n          if ('development' !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n            prop.mode = propBindingModes.ONE_WAY;\n            warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n          }\n        }\n        prop.parentPath = value;\n\n        // warn required two-way\n        if ('development' !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n          warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n        }\n      } else if ((value = getAttr(el, attr)) !== null) {\n        // has literal binding!\n        prop.raw = value;\n      } else if (true) {\n        // check possible camelCase prop usage\n        var lowerCaseName = path.toLowerCase();\n        value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n        if (value) {\n          warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n        } else if (options.required) {\n          // warn missing required\n          warn('Missing required prop: ' + name, vm);\n        }\n      }\n      // push prop\n      props.push(prop);\n    }\n    return makePropsLinkFn(props);\n  }\n\n  /**\n   * Build a function that applies props to a vm.\n   *\n   * @param {Array} props\n   * @return {Function} propsLinkFn\n   */\n\n  function makePropsLinkFn(props) {\n    return function propsLinkFn(vm, scope) {\n      // store resolved props info\n      vm._props = {};\n      var inlineProps = vm.$options.propsData;\n      var i = props.length;\n      var prop, path, options, value, raw;\n      while (i--) {\n        prop = props[i];\n        raw = prop.raw;\n        path = prop.path;\n        options = prop.options;\n        vm._props[path] = prop;\n        if (inlineProps && hasOwn(inlineProps, path)) {\n          initProp(vm, prop, inlineProps[path]);\n        }if (raw === null) {\n          // initialize absent prop\n          initProp(vm, prop, undefined);\n        } else if (prop.dynamic) {\n          // dynamic prop\n          if (prop.mode === propBindingModes.ONE_TIME) {\n            // one time binding\n            value = (scope || vm._context || vm).$get(prop.parentPath);\n            initProp(vm, prop, value);\n          } else {\n            if (vm._context) {\n              // dynamic binding\n              vm._bindDir({\n                name: 'prop',\n                def: propDef,\n                prop: prop\n              }, null, null, scope); // el, host, scope\n            } else {\n                // root instance\n                initProp(vm, prop, vm.$get(prop.parentPath));\n              }\n          }\n        } else if (prop.optimizedLiteral) {\n          // optimized literal, cast it and just set once\n          var stripped = stripQuotes(raw);\n          value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n          initProp(vm, prop, value);\n        } else {\n          // string literal, but we need to cater for\n          // Boolean props with no value, or with same\n          // literal value (e.g. disabled=\"disabled\")\n          // see https://github.com/vuejs/vue-loader/issues/182\n          value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n          initProp(vm, prop, value);\n        }\n      }\n    };\n  }\n\n  /**\n   * Process a prop with a rawValue, applying necessary coersions,\n   * default values & assertions and call the given callback with\n   * processed value.\n   *\n   * @param {Vue} vm\n   * @param {Object} prop\n   * @param {*} rawValue\n   * @param {Function} fn\n   */\n\n  function processPropValue(vm, prop, rawValue, fn) {\n    var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n    var value = rawValue;\n    if (value === undefined) {\n      value = getPropDefaultValue(vm, prop);\n    }\n    value = coerceProp(prop, value, vm);\n    var coerced = value !== rawValue;\n    if (!assertProp(prop, value, vm)) {\n      value = undefined;\n    }\n    if (isSimple && !coerced) {\n      withoutConversion(function () {\n        fn(value);\n      });\n    } else {\n      fn(value);\n    }\n  }\n\n  /**\n   * Set a prop's initial value on a vm and its data object.\n   *\n   * @param {Vue} vm\n   * @param {Object} prop\n   * @param {*} value\n   */\n\n  function initProp(vm, prop, value) {\n    processPropValue(vm, prop, value, function (value) {\n      defineReactive(vm, prop.path, value);\n    });\n  }\n\n  /**\n   * Update a prop's value on a vm.\n   *\n   * @param {Vue} vm\n   * @param {Object} prop\n   * @param {*} value\n   */\n\n  function updateProp(vm, prop, value) {\n    processPropValue(vm, prop, value, function (value) {\n      vm[prop.path] = value;\n    });\n  }\n\n  /**\n   * Get the default value of a prop.\n   *\n   * @param {Vue} vm\n   * @param {Object} prop\n   * @return {*}\n   */\n\n  function getPropDefaultValue(vm, prop) {\n    // no default, return undefined\n    var options = prop.options;\n    if (!hasOwn(options, 'default')) {\n      // absent boolean value defaults to false\n      return options.type === Boolean ? false : undefined;\n    }\n    var def = options['default'];\n    // warn against non-factory defaults for Object & Array\n    if (isObject(def)) {\n      'development' !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n    }\n    // call factory function for non-Function types\n    return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n  }\n\n  /**\n   * Assert whether a prop is valid.\n   *\n   * @param {Object} prop\n   * @param {*} value\n   * @param {Vue} vm\n   */\n\n  function assertProp(prop, value, vm) {\n    if (!prop.options.required && ( // non-required\n    prop.raw === null || // abscent\n    value == null) // null or undefined\n    ) {\n        return true;\n      }\n    var options = prop.options;\n    var type = options.type;\n    var valid = !type;\n    var expectedTypes = [];\n    if (type) {\n      if (!isArray(type)) {\n        type = [type];\n      }\n      for (var i = 0; i < type.length && !valid; i++) {\n        var assertedType = assertType(value, type[i]);\n        expectedTypes.push(assertedType.expectedType);\n        valid = assertedType.valid;\n      }\n    }\n    if (!valid) {\n      if (true) {\n        warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n      }\n      return false;\n    }\n    var validator = options.validator;\n    if (validator) {\n      if (!validator(value)) {\n        'development' !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Force parsing value with coerce option.\n   *\n   * @param {*} value\n   * @param {Object} options\n   * @return {*}\n   */\n\n  function coerceProp(prop, value, vm) {\n    var coerce = prop.options.coerce;\n    if (!coerce) {\n      return value;\n    }\n    if (typeof coerce === 'function') {\n      return coerce(value);\n    } else {\n      'development' !== 'production' && warn('Invalid coerce for prop \"' + prop.name + '\": expected function, got ' + typeof coerce + '.', vm);\n      return value;\n    }\n  }\n\n  /**\n   * Assert the type of a value\n   *\n   * @param {*} value\n   * @param {Function} type\n   * @return {Object}\n   */\n\n  function assertType(value, type) {\n    var valid;\n    var expectedType;\n    if (type === String) {\n      expectedType = 'string';\n      valid = typeof value === expectedType;\n    } else if (type === Number) {\n      expectedType = 'number';\n      valid = typeof value === expectedType;\n    } else if (type === Boolean) {\n      expectedType = 'boolean';\n      valid = typeof value === expectedType;\n    } else if (type === Function) {\n      expectedType = 'function';\n      valid = typeof value === expectedType;\n    } else if (type === Object) {\n      expectedType = 'object';\n      valid = isPlainObject(value);\n    } else if (type === Array) {\n      expectedType = 'array';\n      valid = isArray(value);\n    } else {\n      valid = value instanceof type;\n    }\n    return {\n      valid: valid,\n      expectedType: expectedType\n    };\n  }\n\n  /**\n   * Format type for output\n   *\n   * @param {String} type\n   * @return {String}\n   */\n\n  function formatType(type) {\n    return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n  }\n\n  /**\n   * Format value\n   *\n   * @param {*} value\n   * @return {String}\n   */\n\n  function formatValue(val) {\n    return Object.prototype.toString.call(val).slice(8, -1);\n  }\n\n  var bindingModes = config._propBindingModes;\n\n  var propDef = {\n\n    bind: function bind() {\n      var child = this.vm;\n      var parent = child._context;\n      // passed in from compiler directly\n      var prop = this.descriptor.prop;\n      var childKey = prop.path;\n      var parentKey = prop.parentPath;\n      var twoWay = prop.mode === bindingModes.TWO_WAY;\n\n      var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n        updateProp(child, prop, val);\n      }, {\n        twoWay: twoWay,\n        filters: prop.filters,\n        // important: props need to be observed on the\n        // v-for scope if present\n        scope: this._scope\n      });\n\n      // set the child initial value.\n      initProp(child, prop, parentWatcher.value);\n\n      // setup two-way binding\n      if (twoWay) {\n        // important: defer the child watcher creation until\n        // the created hook (after data observation)\n        var self = this;\n        child.$once('pre-hook:created', function () {\n          self.childWatcher = new Watcher(child, childKey, function (val) {\n            parentWatcher.set(val);\n          }, {\n            // ensure sync upward before parent sync down.\n            // this is necessary in cases e.g. the child\n            // mutates a prop array, then replaces it. (#1683)\n            sync: true\n          });\n        });\n      }\n    },\n\n    unbind: function unbind() {\n      this.parentWatcher.teardown();\n      if (this.childWatcher) {\n        this.childWatcher.teardown();\n      }\n    }\n  };\n\n  var queue$1 = [];\n  var queued = false;\n\n  /**\n   * Push a job into the queue.\n   *\n   * @param {Function} job\n   */\n\n  function pushJob(job) {\n    queue$1.push(job);\n    if (!queued) {\n      queued = true;\n      nextTick(flush);\n    }\n  }\n\n  /**\n   * Flush the queue, and do one forced reflow before\n   * triggering transitions.\n   */\n\n  function flush() {\n    // Force layout\n    var f = document.documentElement.offsetHeight;\n    for (var i = 0; i < queue$1.length; i++) {\n      queue$1[i]();\n    }\n    queue$1 = [];\n    queued = false;\n    // dummy return, so js linters don't complain about\n    // unused variable f\n    return f;\n  }\n\n  var TYPE_TRANSITION = 'transition';\n  var TYPE_ANIMATION = 'animation';\n  var transDurationProp = transitionProp + 'Duration';\n  var animDurationProp = animationProp + 'Duration';\n\n  /**\n   * If a just-entered element is applied the\n   * leave class while its enter transition hasn't started yet,\n   * and the transitioned property has the same value for both\n   * enter/leave, then the leave transition will be skipped and\n   * the transitionend event never fires. This function ensures\n   * its callback to be called after a transition has started\n   * by waiting for double raf.\n   *\n   * It falls back to setTimeout on devices that support CSS\n   * transitions but not raf (e.g. Android 4.2 browser) - since\n   * these environments are usually slow, we are giving it a\n   * relatively large timeout.\n   */\n\n  var raf = inBrowser && window.requestAnimationFrame;\n  var waitForTransitionStart = raf\n  /* istanbul ignore next */\n  ? function (fn) {\n    raf(function () {\n      raf(fn);\n    });\n  } : function (fn) {\n    setTimeout(fn, 50);\n  };\n\n  /**\n   * A Transition object that encapsulates the state and logic\n   * of the transition.\n   *\n   * @param {Element} el\n   * @param {String} id\n   * @param {Object} hooks\n   * @param {Vue} vm\n   */\n  function Transition(el, id, hooks, vm) {\n    this.id = id;\n    this.el = el;\n    this.enterClass = hooks && hooks.enterClass || id + '-enter';\n    this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n    this.hooks = hooks;\n    this.vm = vm;\n    // async state\n    this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n    this.justEntered = false;\n    this.entered = this.left = false;\n    this.typeCache = {};\n    // check css transition type\n    this.type = hooks && hooks.type;\n    /* istanbul ignore if */\n    if (true) {\n      if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n        warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n      }\n    }\n    // bind\n    var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n      self[m] = bind(self[m], self);\n    });\n  }\n\n  var p$1 = Transition.prototype;\n\n  /**\n   * Start an entering transition.\n   *\n   * 1. enter transition triggered\n   * 2. call beforeEnter hook\n   * 3. add enter class\n   * 4. insert/show element\n   * 5. call enter hook (with possible explicit js callback)\n   * 6. reflow\n   * 7. based on transition type:\n   *    - transition:\n   *        remove class now, wait for transitionend,\n   *        then done if there's no explicit js callback.\n   *    - animation:\n   *        wait for animationend, remove class,\n   *        then done if there's no explicit js callback.\n   *    - no css transition:\n   *        done now if there's no explicit js callback.\n   * 8. wait for either done or js callback, then call\n   *    afterEnter hook.\n   *\n   * @param {Function} op - insert/show the element\n   * @param {Function} [cb]\n   */\n\n  p$1.enter = function (op, cb) {\n    this.cancelPending();\n    this.callHook('beforeEnter');\n    this.cb = cb;\n    addClass(this.el, this.enterClass);\n    op();\n    this.entered = false;\n    this.callHookWithCb('enter');\n    if (this.entered) {\n      return; // user called done synchronously.\n    }\n    this.cancel = this.hooks && this.hooks.enterCancelled;\n    pushJob(this.enterNextTick);\n  };\n\n  /**\n   * The \"nextTick\" phase of an entering transition, which is\n   * to be pushed into a queue and executed after a reflow so\n   * that removing the class can trigger a CSS transition.\n   */\n\n  p$1.enterNextTick = function () {\n    var _this = this;\n\n    // prevent transition skipping\n    this.justEntered = true;\n    waitForTransitionStart(function () {\n      _this.justEntered = false;\n    });\n    var enterDone = this.enterDone;\n    var type = this.getCssTransitionType(this.enterClass);\n    if (!this.pendingJsCb) {\n      if (type === TYPE_TRANSITION) {\n        // trigger transition by removing enter class now\n        removeClass(this.el, this.enterClass);\n        this.setupCssCb(transitionEndEvent, enterDone);\n      } else if (type === TYPE_ANIMATION) {\n        this.setupCssCb(animationEndEvent, enterDone);\n      } else {\n        enterDone();\n      }\n    } else if (type === TYPE_TRANSITION) {\n      removeClass(this.el, this.enterClass);\n    }\n  };\n\n  /**\n   * The \"cleanup\" phase of an entering transition.\n   */\n\n  p$1.enterDone = function () {\n    this.entered = true;\n    this.cancel = this.pendingJsCb = null;\n    removeClass(this.el, this.enterClass);\n    this.callHook('afterEnter');\n    if (this.cb) this.cb();\n  };\n\n  /**\n   * Start a leaving transition.\n   *\n   * 1. leave transition triggered.\n   * 2. call beforeLeave hook\n   * 3. add leave class (trigger css transition)\n   * 4. call leave hook (with possible explicit js callback)\n   * 5. reflow if no explicit js callback is provided\n   * 6. based on transition type:\n   *    - transition or animation:\n   *        wait for end event, remove class, then done if\n   *        there's no explicit js callback.\n   *    - no css transition:\n   *        done if there's no explicit js callback.\n   * 7. wait for either done or js callback, then call\n   *    afterLeave hook.\n   *\n   * @param {Function} op - remove/hide the element\n   * @param {Function} [cb]\n   */\n\n  p$1.leave = function (op, cb) {\n    this.cancelPending();\n    this.callHook('beforeLeave');\n    this.op = op;\n    this.cb = cb;\n    addClass(this.el, this.leaveClass);\n    this.left = false;\n    this.callHookWithCb('leave');\n    if (this.left) {\n      return; // user called done synchronously.\n    }\n    this.cancel = this.hooks && this.hooks.leaveCancelled;\n    // only need to handle leaveDone if\n    // 1. the transition is already done (synchronously called\n    //    by the user, which causes this.op set to null)\n    // 2. there's no explicit js callback\n    if (this.op && !this.pendingJsCb) {\n      // if a CSS transition leaves immediately after enter,\n      // the transitionend event never fires. therefore we\n      // detect such cases and end the leave immediately.\n      if (this.justEntered) {\n        this.leaveDone();\n      } else {\n        pushJob(this.leaveNextTick);\n      }\n    }\n  };\n\n  /**\n   * The \"nextTick\" phase of a leaving transition.\n   */\n\n  p$1.leaveNextTick = function () {\n    var type = this.getCssTransitionType(this.leaveClass);\n    if (type) {\n      var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n      this.setupCssCb(event, this.leaveDone);\n    } else {\n      this.leaveDone();\n    }\n  };\n\n  /**\n   * The \"cleanup\" phase of a leaving transition.\n   */\n\n  p$1.leaveDone = function () {\n    this.left = true;\n    this.cancel = this.pendingJsCb = null;\n    this.op();\n    removeClass(this.el, this.leaveClass);\n    this.callHook('afterLeave');\n    if (this.cb) this.cb();\n    this.op = null;\n  };\n\n  /**\n   * Cancel any pending callbacks from a previously running\n   * but not finished transition.\n   */\n\n  p$1.cancelPending = function () {\n    this.op = this.cb = null;\n    var hasPending = false;\n    if (this.pendingCssCb) {\n      hasPending = true;\n      off(this.el, this.pendingCssEvent, this.pendingCssCb);\n      this.pendingCssEvent = this.pendingCssCb = null;\n    }\n    if (this.pendingJsCb) {\n      hasPending = true;\n      this.pendingJsCb.cancel();\n      this.pendingJsCb = null;\n    }\n    if (hasPending) {\n      removeClass(this.el, this.enterClass);\n      removeClass(this.el, this.leaveClass);\n    }\n    if (this.cancel) {\n      this.cancel.call(this.vm, this.el);\n      this.cancel = null;\n    }\n  };\n\n  /**\n   * Call a user-provided synchronous hook function.\n   *\n   * @param {String} type\n   */\n\n  p$1.callHook = function (type) {\n    if (this.hooks && this.hooks[type]) {\n      this.hooks[type].call(this.vm, this.el);\n    }\n  };\n\n  /**\n   * Call a user-provided, potentially-async hook function.\n   * We check for the length of arguments to see if the hook\n   * expects a `done` callback. If true, the transition's end\n   * will be determined by when the user calls that callback;\n   * otherwise, the end is determined by the CSS transition or\n   * animation.\n   *\n   * @param {String} type\n   */\n\n  p$1.callHookWithCb = function (type) {\n    var hook = this.hooks && this.hooks[type];\n    if (hook) {\n      if (hook.length > 1) {\n        this.pendingJsCb = cancellable(this[type + 'Done']);\n      }\n      hook.call(this.vm, this.el, this.pendingJsCb);\n    }\n  };\n\n  /**\n   * Get an element's transition type based on the\n   * calculated styles.\n   *\n   * @param {String} className\n   * @return {Number}\n   */\n\n  p$1.getCssTransitionType = function (className) {\n    /* istanbul ignore if */\n    if (!transitionEndEvent ||\n    // skip CSS transitions if page is not visible -\n    // this solves the issue of transitionend events not\n    // firing until the page is visible again.\n    // pageVisibility API is supported in IE10+, same as\n    // CSS transitions.\n    document.hidden ||\n    // explicit js-only transition\n    this.hooks && this.hooks.css === false ||\n    // element is hidden\n    isHidden(this.el)) {\n      return;\n    }\n    var type = this.type || this.typeCache[className];\n    if (type) return type;\n    var inlineStyles = this.el.style;\n    var computedStyles = window.getComputedStyle(this.el);\n    var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n    if (transDuration && transDuration !== '0s') {\n      type = TYPE_TRANSITION;\n    } else {\n      var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n      if (animDuration && animDuration !== '0s') {\n        type = TYPE_ANIMATION;\n      }\n    }\n    if (type) {\n      this.typeCache[className] = type;\n    }\n    return type;\n  };\n\n  /**\n   * Setup a CSS transitionend/animationend callback.\n   *\n   * @param {String} event\n   * @param {Function} cb\n   */\n\n  p$1.setupCssCb = function (event, cb) {\n    this.pendingCssEvent = event;\n    var self = this;\n    var el = this.el;\n    var onEnd = this.pendingCssCb = function (e) {\n      if (e.target === el) {\n        off(el, event, onEnd);\n        self.pendingCssEvent = self.pendingCssCb = null;\n        if (!self.pendingJsCb && cb) {\n          cb();\n        }\n      }\n    };\n    on(el, event, onEnd);\n  };\n\n  /**\n   * Check if an element is hidden - in that case we can just\n   * skip the transition alltogether.\n   *\n   * @param {Element} el\n   * @return {Boolean}\n   */\n\n  function isHidden(el) {\n    if (/svg$/.test(el.namespaceURI)) {\n      // SVG elements do not have offset(Width|Height)\n      // so we need to check the client rect\n      var rect = el.getBoundingClientRect();\n      return !(rect.width || rect.height);\n    } else {\n      return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n    }\n  }\n\n  var transition$1 = {\n\n    priority: TRANSITION,\n\n    update: function update(id, oldId) {\n      var el = this.el;\n      // resolve on owner vm\n      var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n      id = id || 'v';\n      oldId = oldId || 'v';\n      el.__v_trans = new Transition(el, id, hooks, this.vm);\n      removeClass(el, oldId + '-transition');\n      addClass(el, id + '-transition');\n    }\n  };\n\n  var internalDirectives = {\n    style: style,\n    'class': vClass,\n    component: component,\n    prop: propDef,\n    transition: transition$1\n  };\n\n  // special binding prefixes\n  var bindRE = /^v-bind:|^:/;\n  var onRE = /^v-on:|^@/;\n  var dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\n  var modifierRE = /\\.[^\\.]+/g;\n  var transitionRE = /^(v-bind:|:)?transition$/;\n\n  // default directive priority\n  var DEFAULT_PRIORITY = 1000;\n  var DEFAULT_TERMINAL_PRIORITY = 2000;\n\n  /**\n   * Compile a template and return a reusable composite link\n   * function, which recursively contains more link functions\n   * inside. This top level compile function would normally\n   * be called on instance root nodes, but can also be used\n   * for partial compilation if the partial argument is true.\n   *\n   * The returned composite link function, when called, will\n   * return an unlink function that tearsdown all directives\n   * created during the linking phase.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Object} options\n   * @param {Boolean} partial\n   * @return {Function}\n   */\n\n  function compile(el, options, partial) {\n    // link function for the node itself.\n    var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n    // link function for the childNodes\n    var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n    /**\n     * A composite linker function to be called on a already\n     * compiled piece of DOM, which instantiates all directive\n     * instances.\n     *\n     * @param {Vue} vm\n     * @param {Element|DocumentFragment} el\n     * @param {Vue} [host] - host vm of transcluded content\n     * @param {Object} [scope] - v-for scope\n     * @param {Fragment} [frag] - link context fragment\n     * @return {Function|undefined}\n     */\n\n    return function compositeLinkFn(vm, el, host, scope, frag) {\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(el.childNodes);\n      // link\n      var dirs = linkAndCapture(function compositeLinkCapturer() {\n        if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n        if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n      }, vm);\n      return makeUnlinkFn(vm, dirs);\n    };\n  }\n\n  /**\n   * Apply a linker to a vm/element pair and capture the\n   * directives created during the process.\n   *\n   * @param {Function} linker\n   * @param {Vue} vm\n   */\n\n  function linkAndCapture(linker, vm) {\n    /* istanbul ignore if */\n    if (false) {}\n    var originalDirCount = vm._directives.length;\n    linker();\n    var dirs = vm._directives.slice(originalDirCount);\n    dirs.sort(directiveComparator);\n    for (var i = 0, l = dirs.length; i < l; i++) {\n      dirs[i]._bind();\n    }\n    return dirs;\n  }\n\n  /**\n   * Directive priority sort comparator\n   *\n   * @param {Object} a\n   * @param {Object} b\n   */\n\n  function directiveComparator(a, b) {\n    a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n    b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n    return a > b ? -1 : a === b ? 0 : 1;\n  }\n\n  /**\n   * Linker functions return an unlink function that\n   * tearsdown all directives instances generated during\n   * the process.\n   *\n   * We create unlink functions with only the necessary\n   * information to avoid retaining additional closures.\n   *\n   * @param {Vue} vm\n   * @param {Array} dirs\n   * @param {Vue} [context]\n   * @param {Array} [contextDirs]\n   * @return {Function}\n   */\n\n  function makeUnlinkFn(vm, dirs, context, contextDirs) {\n    function unlink(destroying) {\n      teardownDirs(vm, dirs, destroying);\n      if (context && contextDirs) {\n        teardownDirs(context, contextDirs);\n      }\n    }\n    // expose linked directives\n    unlink.dirs = dirs;\n    return unlink;\n  }\n\n  /**\n   * Teardown partial linked directives.\n   *\n   * @param {Vue} vm\n   * @param {Array} dirs\n   * @param {Boolean} destroying\n   */\n\n  function teardownDirs(vm, dirs, destroying) {\n    var i = dirs.length;\n    while (i--) {\n      dirs[i]._teardown();\n      if ('development' !== 'production' && !destroying) {\n        vm._directives.$remove(dirs[i]);\n      }\n    }\n  }\n\n  /**\n   * Compile link props on an instance.\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   * @param {Object} props\n   * @param {Object} [scope]\n   * @return {Function}\n   */\n\n  function compileAndLinkProps(vm, el, props, scope) {\n    var propsLinkFn = compileProps(el, props, vm);\n    var propDirs = linkAndCapture(function () {\n      propsLinkFn(vm, scope);\n    }, vm);\n    return makeUnlinkFn(vm, propDirs);\n  }\n\n  /**\n   * Compile the root element of an instance.\n   *\n   * 1. attrs on context container (context scope)\n   * 2. attrs on the component template root node, if\n   *    replace:true (child scope)\n   *\n   * If this is a fragment instance, we only need to compile 1.\n   *\n   * @param {Element} el\n   * @param {Object} options\n   * @param {Object} contextOptions\n   * @return {Function}\n   */\n\n  function compileRoot(el, options, contextOptions) {\n    var containerAttrs = options._containerAttrs;\n    var replacerAttrs = options._replacerAttrs;\n    var contextLinkFn, replacerLinkFn;\n\n    // only need to compile other attributes for\n    // non-fragment instances\n    if (el.nodeType !== 11) {\n      // for components, container and replacer need to be\n      // compiled separately and linked in different scopes.\n      if (options._asComponent) {\n        // 2. container attributes\n        if (containerAttrs && contextOptions) {\n          contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n        }\n        if (replacerAttrs) {\n          // 3. replacer attributes\n          replacerLinkFn = compileDirectives(replacerAttrs, options);\n        }\n      } else {\n        // non-component, just compile as a normal element.\n        replacerLinkFn = compileDirectives(el.attributes, options);\n      }\n    } else if ('development' !== 'production' && containerAttrs) {\n      // warn container directives for fragment instances\n      var names = containerAttrs.filter(function (attr) {\n        // allow vue-loader/vueify scoped css attributes\n        return attr.name.indexOf('_v-') < 0 &&\n        // allow event listeners\n        !onRE.test(attr.name) &&\n        // allow slots\n        attr.name !== 'slot';\n      }).map(function (attr) {\n        return '\"' + attr.name + '\"';\n      });\n      if (names.length) {\n        var plural = names.length > 1;\n        warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n      }\n    }\n\n    options._containerAttrs = options._replacerAttrs = null;\n    return function rootLinkFn(vm, el, scope) {\n      // link context scope dirs\n      var context = vm._context;\n      var contextDirs;\n      if (context && contextLinkFn) {\n        contextDirs = linkAndCapture(function () {\n          contextLinkFn(context, el, null, scope);\n        }, context);\n      }\n\n      // link self\n      var selfDirs = linkAndCapture(function () {\n        if (replacerLinkFn) replacerLinkFn(vm, el);\n      }, vm);\n\n      // return the unlink function that tearsdown context\n      // container directives.\n      return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n    };\n  }\n\n  /**\n   * Compile a node and return a nodeLinkFn based on the\n   * node type.\n   *\n   * @param {Node} node\n   * @param {Object} options\n   * @return {Function|null}\n   */\n\n  function compileNode(node, options) {\n    var type = node.nodeType;\n    if (type === 1 && !isScript(node)) {\n      return compileElement(node, options);\n    } else if (type === 3 && node.data.trim()) {\n      return compileTextNode(node, options);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Compile an element and return a nodeLinkFn.\n   *\n   * @param {Element} el\n   * @param {Object} options\n   * @return {Function|null}\n   */\n\n  function compileElement(el, options) {\n    // preprocess textareas.\n    // textarea treats its text content as the initial value.\n    // just bind it as an attr directive for value.\n    if (el.tagName === 'TEXTAREA') {\n      var tokens = parseText(el.value);\n      if (tokens) {\n        el.setAttribute(':value', tokensToExp(tokens));\n        el.value = '';\n      }\n    }\n    var linkFn;\n    var hasAttrs = el.hasAttributes();\n    var attrs = hasAttrs && toArray(el.attributes);\n    // check terminal directives (for & if)\n    if (hasAttrs) {\n      linkFn = checkTerminalDirectives(el, attrs, options);\n    }\n    // check element directives\n    if (!linkFn) {\n      linkFn = checkElementDirectives(el, options);\n    }\n    // check component\n    if (!linkFn) {\n      linkFn = checkComponent(el, options);\n    }\n    // normal directives\n    if (!linkFn && hasAttrs) {\n      linkFn = compileDirectives(attrs, options);\n    }\n    return linkFn;\n  }\n\n  /**\n   * Compile a textNode and return a nodeLinkFn.\n   *\n   * @param {TextNode} node\n   * @param {Object} options\n   * @return {Function|null} textNodeLinkFn\n   */\n\n  function compileTextNode(node, options) {\n    // skip marked text nodes\n    if (node._skip) {\n      return removeText;\n    }\n\n    var tokens = parseText(node.wholeText);\n    if (!tokens) {\n      return null;\n    }\n\n    // mark adjacent text nodes as skipped,\n    // because we are using node.wholeText to compile\n    // all adjacent text nodes together. This fixes\n    // issues in IE where sometimes it splits up a single\n    // text node into multiple ones.\n    var next = node.nextSibling;\n    while (next && next.nodeType === 3) {\n      next._skip = true;\n      next = next.nextSibling;\n    }\n\n    var frag = document.createDocumentFragment();\n    var el, token;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n      frag.appendChild(el);\n    }\n    return makeTextNodeLinkFn(tokens, frag, options);\n  }\n\n  /**\n   * Linker for an skipped text node.\n   *\n   * @param {Vue} vm\n   * @param {Text} node\n   */\n\n  function removeText(vm, node) {\n    remove(node);\n  }\n\n  /**\n   * Process a single text token.\n   *\n   * @param {Object} token\n   * @param {Object} options\n   * @return {Node}\n   */\n\n  function processTextToken(token, options) {\n    var el;\n    if (token.oneTime) {\n      el = document.createTextNode(token.value);\n    } else {\n      if (token.html) {\n        el = document.createComment('v-html');\n        setTokenType('html');\n      } else {\n        // IE will clean up empty textNodes during\n        // frag.cloneNode(true), so we have to give it\n        // something here...\n        el = document.createTextNode(' ');\n        setTokenType('text');\n      }\n    }\n    function setTokenType(type) {\n      if (token.descriptor) return;\n      var parsed = parseDirective(token.value);\n      token.descriptor = {\n        name: type,\n        def: directives[type],\n        expression: parsed.expression,\n        filters: parsed.filters\n      };\n    }\n    return el;\n  }\n\n  /**\n   * Build a function that processes a textNode.\n   *\n   * @param {Array<Object>} tokens\n   * @param {DocumentFragment} frag\n   */\n\n  function makeTextNodeLinkFn(tokens, frag) {\n    return function textNodeLinkFn(vm, el, host, scope) {\n      var fragClone = frag.cloneNode(true);\n      var childNodes = toArray(fragClone.childNodes);\n      var token, value, node;\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        token = tokens[i];\n        value = token.value;\n        if (token.tag) {\n          node = childNodes[i];\n          if (token.oneTime) {\n            value = (scope || vm).$eval(value);\n            if (token.html) {\n              replace(node, parseTemplate(value, true));\n            } else {\n              node.data = _toString(value);\n            }\n          } else {\n            vm._bindDir(token.descriptor, node, host, scope);\n          }\n        }\n      }\n      replace(el, fragClone);\n    };\n  }\n\n  /**\n   * Compile a node list and return a childLinkFn.\n   *\n   * @param {NodeList} nodeList\n   * @param {Object} options\n   * @return {Function|undefined}\n   */\n\n  function compileNodeList(nodeList, options) {\n    var linkFns = [];\n    var nodeLinkFn, childLinkFn, node;\n    for (var i = 0, l = nodeList.length; i < l; i++) {\n      node = nodeList[i];\n      nodeLinkFn = compileNode(node, options);\n      childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n      linkFns.push(nodeLinkFn, childLinkFn);\n    }\n    return linkFns.length ? makeChildLinkFn(linkFns) : null;\n  }\n\n  /**\n   * Make a child link function for a node's childNodes.\n   *\n   * @param {Array<Function>} linkFns\n   * @return {Function} childLinkFn\n   */\n\n  function makeChildLinkFn(linkFns) {\n    return function childLinkFn(vm, nodes, host, scope, frag) {\n      var node, nodeLinkFn, childrenLinkFn;\n      for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n        node = nodes[n];\n        nodeLinkFn = linkFns[i++];\n        childrenLinkFn = linkFns[i++];\n        // cache childNodes before linking parent, fix #657\n        var childNodes = toArray(node.childNodes);\n        if (nodeLinkFn) {\n          nodeLinkFn(vm, node, host, scope, frag);\n        }\n        if (childrenLinkFn) {\n          childrenLinkFn(vm, childNodes, host, scope, frag);\n        }\n      }\n    };\n  }\n\n  /**\n   * Check for element directives (custom elements that should\n   * be resovled as terminal directives).\n   *\n   * @param {Element} el\n   * @param {Object} options\n   */\n\n  function checkElementDirectives(el, options) {\n    var tag = el.tagName.toLowerCase();\n    if (commonTagRE.test(tag)) {\n      return;\n    }\n    var def = resolveAsset(options, 'elementDirectives', tag);\n    if (def) {\n      return makeTerminalNodeLinkFn(el, tag, '', options, def);\n    }\n  }\n\n  /**\n   * Check if an element is a component. If yes, return\n   * a component link function.\n   *\n   * @param {Element} el\n   * @param {Object} options\n   * @return {Function|undefined}\n   */\n\n  function checkComponent(el, options) {\n    var component = checkComponentAttr(el, options);\n    if (component) {\n      var ref = findRef(el);\n      var descriptor = {\n        name: 'component',\n        ref: ref,\n        expression: component.id,\n        def: internalDirectives.component,\n        modifiers: {\n          literal: !component.dynamic\n        }\n      };\n      var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n        if (ref) {\n          defineReactive((scope || vm).$refs, ref, null);\n        }\n        vm._bindDir(descriptor, el, host, scope, frag);\n      };\n      componentLinkFn.terminal = true;\n      return componentLinkFn;\n    }\n  }\n\n  /**\n   * Check an element for terminal directives in fixed order.\n   * If it finds one, return a terminal link function.\n   *\n   * @param {Element} el\n   * @param {Array} attrs\n   * @param {Object} options\n   * @return {Function} terminalLinkFn\n   */\n\n  function checkTerminalDirectives(el, attrs, options) {\n    // skip v-pre\n    if (getAttr(el, 'v-pre') !== null) {\n      return skip;\n    }\n    // skip v-else block, but only if following v-if\n    if (el.hasAttribute('v-else')) {\n      var prev = el.previousElementSibling;\n      if (prev && prev.hasAttribute('v-if')) {\n        return skip;\n      }\n    }\n\n    var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n    for (var i = 0, j = attrs.length; i < j; i++) {\n      attr = attrs[i];\n      name = attr.name.replace(modifierRE, '');\n      if (matched = name.match(dirAttrRE)) {\n        def = resolveAsset(options, 'directives', matched[1]);\n        if (def && def.terminal) {\n          if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n            termDef = def;\n            rawName = attr.name;\n            modifiers = parseModifiers(attr.name);\n            value = attr.value;\n            dirName = matched[1];\n            arg = matched[2];\n          }\n        }\n      }\n    }\n\n    if (termDef) {\n      return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n    }\n  }\n\n  function skip() {}\n  skip.terminal = true;\n\n  /**\n   * Build a node link function for a terminal directive.\n   * A terminal link function terminates the current\n   * compilation recursion and handles compilation of the\n   * subtree in the directive.\n   *\n   * @param {Element} el\n   * @param {String} dirName\n   * @param {String} value\n   * @param {Object} options\n   * @param {Object} def\n   * @param {String} [rawName]\n   * @param {String} [arg]\n   * @param {Object} [modifiers]\n   * @return {Function} terminalLinkFn\n   */\n\n  function makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n    var parsed = parseDirective(value);\n    var descriptor = {\n      name: dirName,\n      arg: arg,\n      expression: parsed.expression,\n      filters: parsed.filters,\n      raw: value,\n      attr: rawName,\n      modifiers: modifiers,\n      def: def\n    };\n    // check ref for v-for and router-view\n    if (dirName === 'for' || dirName === 'router-view') {\n      descriptor.ref = findRef(el);\n    }\n    var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n      if (descriptor.ref) {\n        defineReactive((scope || vm).$refs, descriptor.ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    fn.terminal = true;\n    return fn;\n  }\n\n  /**\n   * Compile the directives on an element and return a linker.\n   *\n   * @param {Array|NamedNodeMap} attrs\n   * @param {Object} options\n   * @return {Function}\n   */\n\n  function compileDirectives(attrs, options) {\n    var i = attrs.length;\n    var dirs = [];\n    var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n    while (i--) {\n      attr = attrs[i];\n      name = rawName = attr.name;\n      value = rawValue = attr.value;\n      tokens = parseText(value);\n      // reset arg\n      arg = null;\n      // check modifiers\n      modifiers = parseModifiers(name);\n      name = name.replace(modifierRE, '');\n\n      // attribute interpolations\n      if (tokens) {\n        value = tokensToExp(tokens);\n        arg = name;\n        pushDir('bind', directives.bind, tokens);\n        // warn against mixing mustaches with v-bind\n        if (true) {\n          if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n            return attr.name === ':class' || attr.name === 'v-bind:class';\n          })) {\n            warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n          }\n        }\n      } else\n\n        // special attribute: transition\n        if (transitionRE.test(name)) {\n          modifiers.literal = !bindRE.test(name);\n          pushDir('transition', internalDirectives.transition);\n        } else\n\n          // event handlers\n          if (onRE.test(name)) {\n            arg = name.replace(onRE, '');\n            pushDir('on', directives.on);\n          } else\n\n            // attribute bindings\n            if (bindRE.test(name)) {\n              dirName = name.replace(bindRE, '');\n              if (dirName === 'style' || dirName === 'class') {\n                pushDir(dirName, internalDirectives[dirName]);\n              } else {\n                arg = dirName;\n                pushDir('bind', directives.bind);\n              }\n            } else\n\n              // normal directives\n              if (matched = name.match(dirAttrRE)) {\n                dirName = matched[1];\n                arg = matched[2];\n\n                // skip v-else (when used with v-show)\n                if (dirName === 'else') {\n                  continue;\n                }\n\n                dirDef = resolveAsset(options, 'directives', dirName, true);\n                if (dirDef) {\n                  pushDir(dirName, dirDef);\n                }\n              }\n    }\n\n    /**\n     * Push a directive.\n     *\n     * @param {String} dirName\n     * @param {Object|Function} def\n     * @param {Array} [interpTokens]\n     */\n\n    function pushDir(dirName, def, interpTokens) {\n      var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n      var parsed = !hasOneTimeToken && parseDirective(value);\n      dirs.push({\n        name: dirName,\n        attr: rawName,\n        raw: rawValue,\n        def: def,\n        arg: arg,\n        modifiers: modifiers,\n        // conversion from interpolation strings with one-time token\n        // to expression is differed until directive bind time so that we\n        // have access to the actual vm context for one-time bindings.\n        expression: parsed && parsed.expression,\n        filters: parsed && parsed.filters,\n        interp: interpTokens,\n        hasOneTime: hasOneTimeToken\n      });\n    }\n\n    if (dirs.length) {\n      return makeNodeLinkFn(dirs);\n    }\n  }\n\n  /**\n   * Parse modifiers from directive attribute name.\n   *\n   * @param {String} name\n   * @return {Object}\n   */\n\n  function parseModifiers(name) {\n    var res = Object.create(null);\n    var match = name.match(modifierRE);\n    if (match) {\n      var i = match.length;\n      while (i--) {\n        res[match[i].slice(1)] = true;\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Build a link function for all directives on a single node.\n   *\n   * @param {Array} directives\n   * @return {Function} directivesLinkFn\n   */\n\n  function makeNodeLinkFn(directives) {\n    return function nodeLinkFn(vm, el, host, scope, frag) {\n      // reverse apply because it's sorted low to high\n      var i = directives.length;\n      while (i--) {\n        vm._bindDir(directives[i], el, host, scope, frag);\n      }\n    };\n  }\n\n  /**\n   * Check if an interpolation string contains one-time tokens.\n   *\n   * @param {Array} tokens\n   * @return {Boolean}\n   */\n\n  function hasOneTime(tokens) {\n    var i = tokens.length;\n    while (i--) {\n      if (tokens[i].oneTime) return true;\n    }\n  }\n\n  function isScript(el) {\n    return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n  }\n\n  var specialCharRE = /[^\\w\\-:\\.]/;\n\n  /**\n   * Process an element or a DocumentFragment based on a\n   * instance option object. This allows us to transclude\n   * a template node/fragment before the instance is created,\n   * so the processed fragment can then be cloned and reused\n   * in v-for.\n   *\n   * @param {Element} el\n   * @param {Object} options\n   * @return {Element|DocumentFragment}\n   */\n\n  function transclude(el, options) {\n    // extract container attributes to pass them down\n    // to compiler, because they need to be compiled in\n    // parent scope. we are mutating the options object here\n    // assuming the same object will be used for compile\n    // right after this.\n    if (options) {\n      options._containerAttrs = extractAttrs(el);\n    }\n    // for template tags, what we want is its content as\n    // a documentFragment (for fragment instances)\n    if (isTemplate(el)) {\n      el = parseTemplate(el);\n    }\n    if (options) {\n      if (options._asComponent && !options.template) {\n        options.template = '<slot></slot>';\n      }\n      if (options.template) {\n        options._content = extractContent(el);\n        el = transcludeTemplate(el, options);\n      }\n    }\n    if (isFragment(el)) {\n      // anchors for fragment instance\n      // passing in `persist: true` to avoid them being\n      // discarded by IE during template cloning\n      prepend(createAnchor('v-start', true), el);\n      el.appendChild(createAnchor('v-end', true));\n    }\n    return el;\n  }\n\n  /**\n   * Process the template option.\n   * If the replace option is true this will swap the $el.\n   *\n   * @param {Element} el\n   * @param {Object} options\n   * @return {Element|DocumentFragment}\n   */\n\n  function transcludeTemplate(el, options) {\n    var template = options.template;\n    var frag = parseTemplate(template, true);\n    if (frag) {\n      var replacer = frag.firstChild;\n      var tag = replacer.tagName && replacer.tagName.toLowerCase();\n      if (options.replace) {\n        /* istanbul ignore if */\n        if (el === document.body) {\n          'development' !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n        }\n        // there are many cases where the instance must\n        // become a fragment instance: basically anything that\n        // can create more than 1 root nodes.\n        if (\n        // multi-children template\n        frag.childNodes.length > 1 ||\n        // non-element template\n        replacer.nodeType !== 1 ||\n        // single nested component\n        tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n        // element directive\n        resolveAsset(options, 'elementDirectives', tag) ||\n        // for block\n        replacer.hasAttribute('v-for') ||\n        // if block\n        replacer.hasAttribute('v-if')) {\n          return frag;\n        } else {\n          options._replacerAttrs = extractAttrs(replacer);\n          mergeAttrs(el, replacer);\n          return replacer;\n        }\n      } else {\n        el.appendChild(frag);\n        return el;\n      }\n    } else {\n      'development' !== 'production' && warn('Invalid template option: ' + template);\n    }\n  }\n\n  /**\n   * Helper to extract a component container's attributes\n   * into a plain object array.\n   *\n   * @param {Element} el\n   * @return {Array}\n   */\n\n  function extractAttrs(el) {\n    if (el.nodeType === 1 && el.hasAttributes()) {\n      return toArray(el.attributes);\n    }\n  }\n\n  /**\n   * Merge the attributes of two elements, and make sure\n   * the class names are merged properly.\n   *\n   * @param {Element} from\n   * @param {Element} to\n   */\n\n  function mergeAttrs(from, to) {\n    var attrs = from.attributes;\n    var i = attrs.length;\n    var name, value;\n    while (i--) {\n      name = attrs[i].name;\n      value = attrs[i].value;\n      if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n        to.setAttribute(name, value);\n      } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n        value.split(/\\s+/).forEach(function (cls) {\n          addClass(to, cls);\n        });\n      }\n    }\n  }\n\n  /**\n   * Scan and determine slot content distribution.\n   * We do this during transclusion instead at compile time so that\n   * the distribution is decoupled from the compilation order of\n   * the slots.\n   *\n   * @param {Element|DocumentFragment} template\n   * @param {Element} content\n   * @param {Vue} vm\n   */\n\n  function resolveSlots(vm, content) {\n    if (!content) {\n      return;\n    }\n    var contents = vm._slotContents = Object.create(null);\n    var el, name;\n    for (var i = 0, l = content.children.length; i < l; i++) {\n      el = content.children[i];\n      /* eslint-disable no-cond-assign */\n      if (name = el.getAttribute('slot')) {\n        (contents[name] || (contents[name] = [])).push(el);\n      }\n      /* eslint-enable no-cond-assign */\n      if ('development' !== 'production' && getBindAttr(el, 'slot')) {\n        warn('The \"slot\" attribute must be static.', vm.$parent);\n      }\n    }\n    for (name in contents) {\n      contents[name] = extractFragment(contents[name], content);\n    }\n    if (content.hasChildNodes()) {\n      var nodes = content.childNodes;\n      if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n        return;\n      }\n      contents['default'] = extractFragment(content.childNodes, content);\n    }\n  }\n\n  /**\n   * Extract qualified content nodes from a node list.\n   *\n   * @param {NodeList} nodes\n   * @return {DocumentFragment}\n   */\n\n  function extractFragment(nodes, parent) {\n    var frag = document.createDocumentFragment();\n    nodes = toArray(nodes);\n    for (var i = 0, l = nodes.length; i < l; i++) {\n      var node = nodes[i];\n      if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n        parent.removeChild(node);\n        node = parseTemplate(node, true);\n      }\n      frag.appendChild(node);\n    }\n    return frag;\n  }\n\n\n\n  var compiler = Object.freeze({\n  \tcompile: compile,\n  \tcompileAndLinkProps: compileAndLinkProps,\n  \tcompileRoot: compileRoot,\n  \ttransclude: transclude,\n  \tresolveSlots: resolveSlots\n  });\n\n  function stateMixin (Vue) {\n    /**\n     * Accessor for `$data` property, since setting $data\n     * requires observing the new object and updating\n     * proxied properties.\n     */\n\n    Object.defineProperty(Vue.prototype, '$data', {\n      get: function get() {\n        return this._data;\n      },\n      set: function set(newData) {\n        if (newData !== this._data) {\n          this._setData(newData);\n        }\n      }\n    });\n\n    /**\n     * Setup the scope of an instance, which contains:\n     * - observed data\n     * - computed properties\n     * - user methods\n     * - meta properties\n     */\n\n    Vue.prototype._initState = function () {\n      this._initProps();\n      this._initMeta();\n      this._initMethods();\n      this._initData();\n      this._initComputed();\n    };\n\n    /**\n     * Initialize props.\n     */\n\n    Vue.prototype._initProps = function () {\n      var options = this.$options;\n      var el = options.el;\n      var props = options.props;\n      if (props && !el) {\n        'development' !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n      }\n      // make sure to convert string selectors into element now\n      el = options.el = query(el);\n      this._propsUnlinkFn = el && el.nodeType === 1 && props\n      // props must be linked in proper scope if inside v-for\n      ? compileAndLinkProps(this, el, props, this._scope) : null;\n    };\n\n    /**\n     * Initialize the data.\n     */\n\n    Vue.prototype._initData = function () {\n      var dataFn = this.$options.data;\n      var data = this._data = dataFn ? dataFn() : {};\n      if (!isPlainObject(data)) {\n        data = {};\n        'development' !== 'production' && warn('data functions should return an object.', this);\n      }\n      var props = this._props;\n      // proxy data on instance\n      var keys = Object.keys(data);\n      var i, key;\n      i = keys.length;\n      while (i--) {\n        key = keys[i];\n        // there are two scenarios where we can proxy a data key:\n        // 1. it's not already defined as a prop\n        // 2. it's provided via a instantiation option AND there are no\n        //    template prop present\n        if (!props || !hasOwn(props, key)) {\n          this._proxy(key);\n        } else if (true) {\n          warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n        }\n      }\n      // observe data\n      observe(data, this);\n    };\n\n    /**\n     * Swap the instance's $data. Called in $data's setter.\n     *\n     * @param {Object} newData\n     */\n\n    Vue.prototype._setData = function (newData) {\n      newData = newData || {};\n      var oldData = this._data;\n      this._data = newData;\n      var keys, key, i;\n      // unproxy keys not present in new data\n      keys = Object.keys(oldData);\n      i = keys.length;\n      while (i--) {\n        key = keys[i];\n        if (!(key in newData)) {\n          this._unproxy(key);\n        }\n      }\n      // proxy keys not already proxied,\n      // and trigger change for changed values\n      keys = Object.keys(newData);\n      i = keys.length;\n      while (i--) {\n        key = keys[i];\n        if (!hasOwn(this, key)) {\n          // new property\n          this._proxy(key);\n        }\n      }\n      oldData.__ob__.removeVm(this);\n      observe(newData, this);\n      this._digest();\n    };\n\n    /**\n     * Proxy a property, so that\n     * vm.prop === vm._data.prop\n     *\n     * @param {String} key\n     */\n\n    Vue.prototype._proxy = function (key) {\n      if (!isReserved(key)) {\n        // need to store ref to self here\n        // because these getter/setters might\n        // be called by child scopes via\n        // prototype inheritance.\n        var self = this;\n        Object.defineProperty(self, key, {\n          configurable: true,\n          enumerable: true,\n          get: function proxyGetter() {\n            return self._data[key];\n          },\n          set: function proxySetter(val) {\n            self._data[key] = val;\n          }\n        });\n      }\n    };\n\n    /**\n     * Unproxy a property.\n     *\n     * @param {String} key\n     */\n\n    Vue.prototype._unproxy = function (key) {\n      if (!isReserved(key)) {\n        delete this[key];\n      }\n    };\n\n    /**\n     * Force update on every watcher in scope.\n     */\n\n    Vue.prototype._digest = function () {\n      for (var i = 0, l = this._watchers.length; i < l; i++) {\n        this._watchers[i].update(true); // shallow updates\n      }\n    };\n\n    /**\n     * Setup computed properties. They are essentially\n     * special getter/setters\n     */\n\n    function noop() {}\n    Vue.prototype._initComputed = function () {\n      var computed = this.$options.computed;\n      if (computed) {\n        for (var key in computed) {\n          var userDef = computed[key];\n          var def = {\n            enumerable: true,\n            configurable: true\n          };\n          if (typeof userDef === 'function') {\n            def.get = makeComputedGetter(userDef, this);\n            def.set = noop;\n          } else {\n            def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n            def.set = userDef.set ? bind(userDef.set, this) : noop;\n          }\n          Object.defineProperty(this, key, def);\n        }\n      }\n    };\n\n    function makeComputedGetter(getter, owner) {\n      var watcher = new Watcher(owner, getter, null, {\n        lazy: true\n      });\n      return function computedGetter() {\n        if (watcher.dirty) {\n          watcher.evaluate();\n        }\n        if (Dep.target) {\n          watcher.depend();\n        }\n        return watcher.value;\n      };\n    }\n\n    /**\n     * Setup instance methods. Methods must be bound to the\n     * instance since they might be passed down as a prop to\n     * child components.\n     */\n\n    Vue.prototype._initMethods = function () {\n      var methods = this.$options.methods;\n      if (methods) {\n        for (var key in methods) {\n          this[key] = bind(methods[key], this);\n        }\n      }\n    };\n\n    /**\n     * Initialize meta information like $index, $key & $value.\n     */\n\n    Vue.prototype._initMeta = function () {\n      var metas = this.$options._meta;\n      if (metas) {\n        for (var key in metas) {\n          defineReactive(this, key, metas[key]);\n        }\n      }\n    };\n  }\n\n  var eventRE = /^v-on:|^@/;\n\n  function eventsMixin (Vue) {\n    /**\n     * Setup the instance's option events & watchers.\n     * If the value is a string, we pull it from the\n     * instance's methods by name.\n     */\n\n    Vue.prototype._initEvents = function () {\n      var options = this.$options;\n      if (options._asComponent) {\n        registerComponentEvents(this, options.el);\n      }\n      registerCallbacks(this, '$on', options.events);\n      registerCallbacks(this, '$watch', options.watch);\n    };\n\n    /**\n     * Register v-on events on a child component\n     *\n     * @param {Vue} vm\n     * @param {Element} el\n     */\n\n    function registerComponentEvents(vm, el) {\n      var attrs = el.attributes;\n      var name, value, handler;\n      for (var i = 0, l = attrs.length; i < l; i++) {\n        name = attrs[i].name;\n        if (eventRE.test(name)) {\n          name = name.replace(eventRE, '');\n          // force the expression into a statement so that\n          // it always dynamically resolves the method to call (#2670)\n          // kinda ugly hack, but does the job.\n          value = attrs[i].value;\n          if (isSimplePath(value)) {\n            value += '.apply(this, $arguments)';\n          }\n          handler = (vm._scope || vm._context).$eval(value, true);\n          handler._fromParent = true;\n          vm.$on(name.replace(eventRE), handler);\n        }\n      }\n    }\n\n    /**\n     * Register callbacks for option events and watchers.\n     *\n     * @param {Vue} vm\n     * @param {String} action\n     * @param {Object} hash\n     */\n\n    function registerCallbacks(vm, action, hash) {\n      if (!hash) return;\n      var handlers, key, i, j;\n      for (key in hash) {\n        handlers = hash[key];\n        if (isArray(handlers)) {\n          for (i = 0, j = handlers.length; i < j; i++) {\n            register(vm, action, key, handlers[i]);\n          }\n        } else {\n          register(vm, action, key, handlers);\n        }\n      }\n    }\n\n    /**\n     * Helper to register an event/watch callback.\n     *\n     * @param {Vue} vm\n     * @param {String} action\n     * @param {String} key\n     * @param {Function|String|Object} handler\n     * @param {Object} [options]\n     */\n\n    function register(vm, action, key, handler, options) {\n      var type = typeof handler;\n      if (type === 'function') {\n        vm[action](key, handler, options);\n      } else if (type === 'string') {\n        var methods = vm.$options.methods;\n        var method = methods && methods[handler];\n        if (method) {\n          vm[action](key, method, options);\n        } else {\n          'development' !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n        }\n      } else if (handler && type === 'object') {\n        register(vm, action, key, handler.handler, handler);\n      }\n    }\n\n    /**\n     * Setup recursive attached/detached calls\n     */\n\n    Vue.prototype._initDOMHooks = function () {\n      this.$on('hook:attached', onAttached);\n      this.$on('hook:detached', onDetached);\n    };\n\n    /**\n     * Callback to recursively call attached hook on children\n     */\n\n    function onAttached() {\n      if (!this._isAttached) {\n        this._isAttached = true;\n        this.$children.forEach(callAttach);\n      }\n    }\n\n    /**\n     * Iterator to call attached hook\n     *\n     * @param {Vue} child\n     */\n\n    function callAttach(child) {\n      if (!child._isAttached && inDoc(child.$el)) {\n        child._callHook('attached');\n      }\n    }\n\n    /**\n     * Callback to recursively call detached hook on children\n     */\n\n    function onDetached() {\n      if (this._isAttached) {\n        this._isAttached = false;\n        this.$children.forEach(callDetach);\n      }\n    }\n\n    /**\n     * Iterator to call detached hook\n     *\n     * @param {Vue} child\n     */\n\n    function callDetach(child) {\n      if (child._isAttached && !inDoc(child.$el)) {\n        child._callHook('detached');\n      }\n    }\n\n    /**\n     * Trigger all handlers for a hook\n     *\n     * @param {String} hook\n     */\n\n    Vue.prototype._callHook = function (hook) {\n      this.$emit('pre-hook:' + hook);\n      var handlers = this.$options[hook];\n      if (handlers) {\n        for (var i = 0, j = handlers.length; i < j; i++) {\n          handlers[i].call(this);\n        }\n      }\n      this.$emit('hook:' + hook);\n    };\n  }\n\n  function noop$1() {}\n\n  /**\n   * A directive links a DOM element with a piece of data,\n   * which is the result of evaluating an expression.\n   * It registers a watcher with the expression and calls\n   * the DOM update function when a change is triggered.\n   *\n   * @param {Object} descriptor\n   *                 - {String} name\n   *                 - {Object} def\n   *                 - {String} expression\n   *                 - {Array<Object>} [filters]\n   *                 - {Object} [modifiers]\n   *                 - {Boolean} literal\n   *                 - {String} attr\n   *                 - {String} arg\n   *                 - {String} raw\n   *                 - {String} [ref]\n   *                 - {Array<Object>} [interp]\n   *                 - {Boolean} [hasOneTime]\n   * @param {Vue} vm\n   * @param {Node} el\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   * @constructor\n   */\n  function Directive(descriptor, vm, el, host, scope, frag) {\n    this.vm = vm;\n    this.el = el;\n    // copy descriptor properties\n    this.descriptor = descriptor;\n    this.name = descriptor.name;\n    this.expression = descriptor.expression;\n    this.arg = descriptor.arg;\n    this.modifiers = descriptor.modifiers;\n    this.filters = descriptor.filters;\n    this.literal = this.modifiers && this.modifiers.literal;\n    // private\n    this._locked = false;\n    this._bound = false;\n    this._listeners = null;\n    // link context\n    this._host = host;\n    this._scope = scope;\n    this._frag = frag;\n    // store directives on node in dev mode\n    if ('development' !== 'production' && this.el) {\n      this.el._vue_directives = this.el._vue_directives || [];\n      this.el._vue_directives.push(this);\n    }\n  }\n\n  /**\n   * Initialize the directive, mixin definition properties,\n   * setup the watcher, call definition bind() and update()\n   * if present.\n   */\n\n  Directive.prototype._bind = function () {\n    var name = this.name;\n    var descriptor = this.descriptor;\n\n    // remove attribute\n    if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n      var attr = descriptor.attr || 'v-' + name;\n      this.el.removeAttribute(attr);\n    }\n\n    // copy def properties\n    var def = descriptor.def;\n    if (typeof def === 'function') {\n      this.update = def;\n    } else {\n      extend(this, def);\n    }\n\n    // setup directive params\n    this._setupParams();\n\n    // initial bind\n    if (this.bind) {\n      this.bind();\n    }\n    this._bound = true;\n\n    if (this.literal) {\n      this.update && this.update(descriptor.raw);\n    } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n      // wrapped updater for context\n      var dir = this;\n      if (this.update) {\n        this._update = function (val, oldVal) {\n          if (!dir._locked) {\n            dir.update(val, oldVal);\n          }\n        };\n      } else {\n        this._update = noop$1;\n      }\n      var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n      var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n      var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n      {\n        filters: this.filters,\n        twoWay: this.twoWay,\n        deep: this.deep,\n        preProcess: preProcess,\n        postProcess: postProcess,\n        scope: this._scope\n      });\n      // v-model with inital inline value need to sync back to\n      // model instead of update to DOM on init. They would\n      // set the afterBind hook to indicate that.\n      if (this.afterBind) {\n        this.afterBind();\n      } else if (this.update) {\n        this.update(watcher.value);\n      }\n    }\n  };\n\n  /**\n   * Setup all param attributes, e.g. track-by,\n   * transition-mode, etc...\n   */\n\n  Directive.prototype._setupParams = function () {\n    if (!this.params) {\n      return;\n    }\n    var params = this.params;\n    // swap the params array with a fresh object.\n    this.params = Object.create(null);\n    var i = params.length;\n    var key, val, mappedKey;\n    while (i--) {\n      key = hyphenate(params[i]);\n      mappedKey = camelize(key);\n      val = getBindAttr(this.el, key);\n      if (val != null) {\n        // dynamic\n        this._setupParamWatcher(mappedKey, val);\n      } else {\n        // static\n        val = getAttr(this.el, key);\n        if (val != null) {\n          this.params[mappedKey] = val === '' ? true : val;\n        }\n      }\n    }\n  };\n\n  /**\n   * Setup a watcher for a dynamic param.\n   *\n   * @param {String} key\n   * @param {String} expression\n   */\n\n  Directive.prototype._setupParamWatcher = function (key, expression) {\n    var self = this;\n    var called = false;\n    var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n      self.params[key] = val;\n      // since we are in immediate mode,\n      // only call the param change callbacks if this is not the first update.\n      if (called) {\n        var cb = self.paramWatchers && self.paramWatchers[key];\n        if (cb) {\n          cb.call(self, val, oldVal);\n        }\n      } else {\n        called = true;\n      }\n    }, {\n      immediate: true,\n      user: false\n    });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n  };\n\n  /**\n   * Check if the directive is a function caller\n   * and if the expression is a callable one. If both true,\n   * we wrap up the expression and use it as the event\n   * handler.\n   *\n   * e.g. on-click=\"a++\"\n   *\n   * @return {Boolean}\n   */\n\n  Directive.prototype._checkStatement = function () {\n    var expression = this.expression;\n    if (expression && this.acceptStatement && !isSimplePath(expression)) {\n      var fn = parseExpression(expression).get;\n      var scope = this._scope || this.vm;\n      var handler = function handler(e) {\n        scope.$event = e;\n        fn.call(scope, scope);\n        scope.$event = null;\n      };\n      if (this.filters) {\n        handler = scope._applyFilters(handler, null, this.filters);\n      }\n      this.update(handler);\n      return true;\n    }\n  };\n\n  /**\n   * Set the corresponding value with the setter.\n   * This should only be used in two-way directives\n   * e.g. v-model.\n   *\n   * @param {*} value\n   * @public\n   */\n\n  Directive.prototype.set = function (value) {\n    /* istanbul ignore else */\n    if (this.twoWay) {\n      this._withLock(function () {\n        this._watcher.set(value);\n      });\n    } else if (true) {\n      warn('Directive.set() can only be used inside twoWay' + 'directives.');\n    }\n  };\n\n  /**\n   * Execute a function while preventing that function from\n   * triggering updates on this directive instance.\n   *\n   * @param {Function} fn\n   */\n\n  Directive.prototype._withLock = function (fn) {\n    var self = this;\n    self._locked = true;\n    fn.call(self);\n    nextTick(function () {\n      self._locked = false;\n    });\n  };\n\n  /**\n   * Convenience method that attaches a DOM event listener\n   * to the directive element and autometically tears it down\n   * during unbind.\n   *\n   * @param {String} event\n   * @param {Function} handler\n   * @param {Boolean} [useCapture]\n   */\n\n  Directive.prototype.on = function (event, handler, useCapture) {\n    on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n  };\n\n  /**\n   * Teardown the watcher and call unbind.\n   */\n\n  Directive.prototype._teardown = function () {\n    if (this._bound) {\n      this._bound = false;\n      if (this.unbind) {\n        this.unbind();\n      }\n      if (this._watcher) {\n        this._watcher.teardown();\n      }\n      var listeners = this._listeners;\n      var i;\n      if (listeners) {\n        i = listeners.length;\n        while (i--) {\n          off(this.el, listeners[i][0], listeners[i][1]);\n        }\n      }\n      var unwatchFns = this._paramUnwatchFns;\n      if (unwatchFns) {\n        i = unwatchFns.length;\n        while (i--) {\n          unwatchFns[i]();\n        }\n      }\n      if ('development' !== 'production' && this.el) {\n        this.el._vue_directives.$remove(this);\n      }\n      this.vm = this.el = this._watcher = this._listeners = null;\n    }\n  };\n\n  function lifecycleMixin (Vue) {\n    /**\n     * Update v-ref for component.\n     *\n     * @param {Boolean} remove\n     */\n\n    Vue.prototype._updateRef = function (remove) {\n      var ref = this.$options._ref;\n      if (ref) {\n        var refs = (this._scope || this._context).$refs;\n        if (remove) {\n          if (refs[ref] === this) {\n            refs[ref] = null;\n          }\n        } else {\n          refs[ref] = this;\n        }\n      }\n    };\n\n    /**\n     * Transclude, compile and link element.\n     *\n     * If a pre-compiled linker is available, that means the\n     * passed in element will be pre-transcluded and compiled\n     * as well - all we need to do is to call the linker.\n     *\n     * Otherwise we need to call transclude/compile/link here.\n     *\n     * @param {Element} el\n     */\n\n    Vue.prototype._compile = function (el) {\n      var options = this.$options;\n\n      // transclude and init element\n      // transclude can potentially replace original\n      // so we need to keep reference; this step also injects\n      // the template and caches the original attributes\n      // on the container node and replacer node.\n      var original = el;\n      el = transclude(el, options);\n      this._initElement(el);\n\n      // handle v-pre on root node (#2026)\n      if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n        return;\n      }\n\n      // root is always compiled per-instance, because\n      // container attrs and props can be different every time.\n      var contextOptions = this._context && this._context.$options;\n      var rootLinker = compileRoot(el, options, contextOptions);\n\n      // resolve slot distribution\n      resolveSlots(this, options._content);\n\n      // compile and link the rest\n      var contentLinkFn;\n      var ctor = this.constructor;\n      // component compilation can be cached\n      // as long as it's not using inline-template\n      if (options._linkerCachable) {\n        contentLinkFn = ctor.linker;\n        if (!contentLinkFn) {\n          contentLinkFn = ctor.linker = compile(el, options);\n        }\n      }\n\n      // link phase\n      // make sure to link root with prop scope!\n      var rootUnlinkFn = rootLinker(this, el, this._scope);\n      var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n      // register composite unlink function\n      // to be called during instance destruction\n      this._unlinkFn = function () {\n        rootUnlinkFn();\n        // passing destroying: true to avoid searching and\n        // splicing the directives\n        contentUnlinkFn(true);\n      };\n\n      // finally replace original\n      if (options.replace) {\n        replace(original, el);\n      }\n\n      this._isCompiled = true;\n      this._callHook('compiled');\n    };\n\n    /**\n     * Initialize instance element. Called in the public\n     * $mount() method.\n     *\n     * @param {Element} el\n     */\n\n    Vue.prototype._initElement = function (el) {\n      if (isFragment(el)) {\n        this._isFragment = true;\n        this.$el = this._fragmentStart = el.firstChild;\n        this._fragmentEnd = el.lastChild;\n        // set persisted text anchors to empty\n        if (this._fragmentStart.nodeType === 3) {\n          this._fragmentStart.data = this._fragmentEnd.data = '';\n        }\n        this._fragment = el;\n      } else {\n        this.$el = el;\n      }\n      this.$el.__vue__ = this;\n      this._callHook('beforeCompile');\n    };\n\n    /**\n     * Create and bind a directive to an element.\n     *\n     * @param {Object} descriptor - parsed directive descriptor\n     * @param {Node} node   - target node\n     * @param {Vue} [host] - transclusion host component\n     * @param {Object} [scope] - v-for scope\n     * @param {Fragment} [frag] - owner fragment\n     */\n\n    Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n      this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n    };\n\n    /**\n     * Teardown an instance, unobserves the data, unbind all the\n     * directives, turn off all the event listeners, etc.\n     *\n     * @param {Boolean} remove - whether to remove the DOM node.\n     * @param {Boolean} deferCleanup - if true, defer cleanup to\n     *                                 be called later\n     */\n\n    Vue.prototype._destroy = function (remove, deferCleanup) {\n      if (this._isBeingDestroyed) {\n        if (!deferCleanup) {\n          this._cleanup();\n        }\n        return;\n      }\n\n      var destroyReady;\n      var pendingRemoval;\n\n      var self = this;\n      // Cleanup should be called either synchronously or asynchronoysly as\n      // callback of this.$remove(), or if remove and deferCleanup are false.\n      // In any case it should be called after all other removing, unbinding and\n      // turning of is done\n      var cleanupIfPossible = function cleanupIfPossible() {\n        if (destroyReady && !pendingRemoval && !deferCleanup) {\n          self._cleanup();\n        }\n      };\n\n      // remove DOM element\n      if (remove && this.$el) {\n        pendingRemoval = true;\n        this.$remove(function () {\n          pendingRemoval = false;\n          cleanupIfPossible();\n        });\n      }\n\n      this._callHook('beforeDestroy');\n      this._isBeingDestroyed = true;\n      var i;\n      // remove self from parent. only necessary\n      // if parent is not being destroyed as well.\n      var parent = this.$parent;\n      if (parent && !parent._isBeingDestroyed) {\n        parent.$children.$remove(this);\n        // unregister ref (remove: true)\n        this._updateRef(true);\n      }\n      // destroy all children.\n      i = this.$children.length;\n      while (i--) {\n        this.$children[i].$destroy();\n      }\n      // teardown props\n      if (this._propsUnlinkFn) {\n        this._propsUnlinkFn();\n      }\n      // teardown all directives. this also tearsdown all\n      // directive-owned watchers.\n      if (this._unlinkFn) {\n        this._unlinkFn();\n      }\n      i = this._watchers.length;\n      while (i--) {\n        this._watchers[i].teardown();\n      }\n      // remove reference to self on $el\n      if (this.$el) {\n        this.$el.__vue__ = null;\n      }\n\n      destroyReady = true;\n      cleanupIfPossible();\n    };\n\n    /**\n     * Clean up to ensure garbage collection.\n     * This is called after the leave transition if there\n     * is any.\n     */\n\n    Vue.prototype._cleanup = function () {\n      if (this._isDestroyed) {\n        return;\n      }\n      // remove self from owner fragment\n      // do it in cleanup so that we can call $destroy with\n      // defer right when a fragment is about to be removed.\n      if (this._frag) {\n        this._frag.children.$remove(this);\n      }\n      // remove reference from data ob\n      // frozen object may not have observer.\n      if (this._data && this._data.__ob__) {\n        this._data.__ob__.removeVm(this);\n      }\n      // Clean up references to private properties and other\n      // instances. preserve reference to _data so that proxy\n      // accessors still work. The only potential side effect\n      // here is that mutating the instance after it's destroyed\n      // may affect the state of other components that are still\n      // observing the same object, but that seems to be a\n      // reasonable responsibility for the user rather than\n      // always throwing an error on them.\n      this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n      // call the last hook...\n      this._isDestroyed = true;\n      this._callHook('destroyed');\n      // turn off all instance listeners.\n      this.$off();\n    };\n  }\n\n  function miscMixin (Vue) {\n    /**\n     * Apply a list of filter (descriptors) to a value.\n     * Using plain for loops here because this will be called in\n     * the getter of any watcher with filters so it is very\n     * performance sensitive.\n     *\n     * @param {*} value\n     * @param {*} [oldValue]\n     * @param {Array} filters\n     * @param {Boolean} write\n     * @return {*}\n     */\n\n    Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n      var filter, fn, args, arg, offset, i, l, j, k;\n      for (i = 0, l = filters.length; i < l; i++) {\n        filter = filters[write ? l - i - 1 : i];\n        fn = resolveAsset(this.$options, 'filters', filter.name, true);\n        if (!fn) continue;\n        fn = write ? fn.write : fn.read || fn;\n        if (typeof fn !== 'function') continue;\n        args = write ? [value, oldValue] : [value];\n        offset = write ? 2 : 1;\n        if (filter.args) {\n          for (j = 0, k = filter.args.length; j < k; j++) {\n            arg = filter.args[j];\n            args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n          }\n        }\n        value = fn.apply(this, args);\n      }\n      return value;\n    };\n\n    /**\n     * Resolve a component, depending on whether the component\n     * is defined normally or using an async factory function.\n     * Resolves synchronously if already resolved, otherwise\n     * resolves asynchronously and caches the resolved\n     * constructor on the factory.\n     *\n     * @param {String|Function} value\n     * @param {Function} cb\n     */\n\n    Vue.prototype._resolveComponent = function (value, cb) {\n      var factory;\n      if (typeof value === 'function') {\n        factory = value;\n      } else {\n        factory = resolveAsset(this.$options, 'components', value, true);\n      }\n      /* istanbul ignore if */\n      if (!factory) {\n        return;\n      }\n      // async component factory\n      if (!factory.options) {\n        if (factory.resolved) {\n          // cached\n          cb(factory.resolved);\n        } else if (factory.requested) {\n          // pool callbacks\n          factory.pendingCallbacks.push(cb);\n        } else {\n          factory.requested = true;\n          var cbs = factory.pendingCallbacks = [cb];\n          factory.call(this, function resolve(res) {\n            if (isPlainObject(res)) {\n              res = Vue.extend(res);\n            }\n            // cache resolved\n            factory.resolved = res;\n            // invoke callbacks\n            for (var i = 0, l = cbs.length; i < l; i++) {\n              cbs[i](res);\n            }\n          }, function reject(reason) {\n            'development' !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n          });\n        }\n      } else {\n        // normal component\n        cb(factory);\n      }\n    };\n  }\n\n  var filterRE$1 = /[^|]\\|[^|]/;\n\n  function dataAPI (Vue) {\n    /**\n     * Get the value from an expression on this vm.\n     *\n     * @param {String} exp\n     * @param {Boolean} [asStatement]\n     * @return {*}\n     */\n\n    Vue.prototype.$get = function (exp, asStatement) {\n      var res = parseExpression(exp);\n      if (res) {\n        if (asStatement) {\n          var self = this;\n          return function statementHandler() {\n            self.$arguments = toArray(arguments);\n            var result = res.get.call(self, self);\n            self.$arguments = null;\n            return result;\n          };\n        } else {\n          try {\n            return res.get.call(this, this);\n          } catch (e) {}\n        }\n      }\n    };\n\n    /**\n     * Set the value from an expression on this vm.\n     * The expression must be a valid left-hand\n     * expression in an assignment.\n     *\n     * @param {String} exp\n     * @param {*} val\n     */\n\n    Vue.prototype.$set = function (exp, val) {\n      var res = parseExpression(exp, true);\n      if (res && res.set) {\n        res.set.call(this, this, val);\n      }\n    };\n\n    /**\n     * Delete a property on the VM\n     *\n     * @param {String} key\n     */\n\n    Vue.prototype.$delete = function (key) {\n      del(this._data, key);\n    };\n\n    /**\n     * Watch an expression, trigger callback when its\n     * value changes.\n     *\n     * @param {String|Function} expOrFn\n     * @param {Function} cb\n     * @param {Object} [options]\n     *                 - {Boolean} deep\n     *                 - {Boolean} immediate\n     * @return {Function} - unwatchFn\n     */\n\n    Vue.prototype.$watch = function (expOrFn, cb, options) {\n      var vm = this;\n      var parsed;\n      if (typeof expOrFn === 'string') {\n        parsed = parseDirective(expOrFn);\n        expOrFn = parsed.expression;\n      }\n      var watcher = new Watcher(vm, expOrFn, cb, {\n        deep: options && options.deep,\n        sync: options && options.sync,\n        filters: parsed && parsed.filters,\n        user: !options || options.user !== false\n      });\n      if (options && options.immediate) {\n        cb.call(vm, watcher.value);\n      }\n      return function unwatchFn() {\n        watcher.teardown();\n      };\n    };\n\n    /**\n     * Evaluate a text directive, including filters.\n     *\n     * @param {String} text\n     * @param {Boolean} [asStatement]\n     * @return {String}\n     */\n\n    Vue.prototype.$eval = function (text, asStatement) {\n      // check for filters.\n      if (filterRE$1.test(text)) {\n        var dir = parseDirective(text);\n        // the filter regex check might give false positive\n        // for pipes inside strings, so it's possible that\n        // we don't get any filters here\n        var val = this.$get(dir.expression, asStatement);\n        return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n      } else {\n        // no filter\n        return this.$get(text, asStatement);\n      }\n    };\n\n    /**\n     * Interpolate a piece of template text.\n     *\n     * @param {String} text\n     * @return {String}\n     */\n\n    Vue.prototype.$interpolate = function (text) {\n      var tokens = parseText(text);\n      var vm = this;\n      if (tokens) {\n        if (tokens.length === 1) {\n          return vm.$eval(tokens[0].value) + '';\n        } else {\n          return tokens.map(function (token) {\n            return token.tag ? vm.$eval(token.value) : token.value;\n          }).join('');\n        }\n      } else {\n        return text;\n      }\n    };\n\n    /**\n     * Log instance data as a plain JS object\n     * so that it is easier to inspect in console.\n     * This method assumes console is available.\n     *\n     * @param {String} [path]\n     */\n\n    Vue.prototype.$log = function (path) {\n      var data = path ? getPath(this._data, path) : this._data;\n      if (data) {\n        data = clean(data);\n      }\n      // include computed fields\n      if (!path) {\n        var key;\n        for (key in this.$options.computed) {\n          data[key] = clean(this[key]);\n        }\n        if (this._props) {\n          for (key in this._props) {\n            data[key] = clean(this[key]);\n          }\n        }\n      }\n      console.log(data);\n    };\n\n    /**\n     * \"clean\" a getter/setter converted object into a plain\n     * object copy.\n     *\n     * @param {Object} - obj\n     * @return {Object}\n     */\n\n    function clean(obj) {\n      return JSON.parse(JSON.stringify(obj));\n    }\n  }\n\n  function domAPI (Vue) {\n    /**\n     * Convenience on-instance nextTick. The callback is\n     * auto-bound to the instance, and this avoids component\n     * modules having to rely on the global Vue.\n     *\n     * @param {Function} fn\n     */\n\n    Vue.prototype.$nextTick = function (fn) {\n      nextTick(fn, this);\n    };\n\n    /**\n     * Append instance to target\n     *\n     * @param {Node} target\n     * @param {Function} [cb]\n     * @param {Boolean} [withTransition] - defaults to true\n     */\n\n    Vue.prototype.$appendTo = function (target, cb, withTransition) {\n      return insert(this, target, cb, withTransition, append, appendWithTransition);\n    };\n\n    /**\n     * Prepend instance to target\n     *\n     * @param {Node} target\n     * @param {Function} [cb]\n     * @param {Boolean} [withTransition] - defaults to true\n     */\n\n    Vue.prototype.$prependTo = function (target, cb, withTransition) {\n      target = query(target);\n      if (target.hasChildNodes()) {\n        this.$before(target.firstChild, cb, withTransition);\n      } else {\n        this.$appendTo(target, cb, withTransition);\n      }\n      return this;\n    };\n\n    /**\n     * Insert instance before target\n     *\n     * @param {Node} target\n     * @param {Function} [cb]\n     * @param {Boolean} [withTransition] - defaults to true\n     */\n\n    Vue.prototype.$before = function (target, cb, withTransition) {\n      return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n    };\n\n    /**\n     * Insert instance after target\n     *\n     * @param {Node} target\n     * @param {Function} [cb]\n     * @param {Boolean} [withTransition] - defaults to true\n     */\n\n    Vue.prototype.$after = function (target, cb, withTransition) {\n      target = query(target);\n      if (target.nextSibling) {\n        this.$before(target.nextSibling, cb, withTransition);\n      } else {\n        this.$appendTo(target.parentNode, cb, withTransition);\n      }\n      return this;\n    };\n\n    /**\n     * Remove instance from DOM\n     *\n     * @param {Function} [cb]\n     * @param {Boolean} [withTransition] - defaults to true\n     */\n\n    Vue.prototype.$remove = function (cb, withTransition) {\n      if (!this.$el.parentNode) {\n        return cb && cb();\n      }\n      var inDocument = this._isAttached && inDoc(this.$el);\n      // if we are not in document, no need to check\n      // for transitions\n      if (!inDocument) withTransition = false;\n      var self = this;\n      var realCb = function realCb() {\n        if (inDocument) self._callHook('detached');\n        if (cb) cb();\n      };\n      if (this._isFragment) {\n        removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n      } else {\n        var op = withTransition === false ? removeWithCb : removeWithTransition;\n        op(this.$el, this, realCb);\n      }\n      return this;\n    };\n\n    /**\n     * Shared DOM insertion function.\n     *\n     * @param {Vue} vm\n     * @param {Element} target\n     * @param {Function} [cb]\n     * @param {Boolean} [withTransition]\n     * @param {Function} op1 - op for non-transition insert\n     * @param {Function} op2 - op for transition insert\n     * @return vm\n     */\n\n    function insert(vm, target, cb, withTransition, op1, op2) {\n      target = query(target);\n      var targetIsDetached = !inDoc(target);\n      var op = withTransition === false || targetIsDetached ? op1 : op2;\n      var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n      if (vm._isFragment) {\n        mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n          op(node, target, vm);\n        });\n        cb && cb();\n      } else {\n        op(vm.$el, target, vm, cb);\n      }\n      if (shouldCallHook) {\n        vm._callHook('attached');\n      }\n      return vm;\n    }\n\n    /**\n     * Check for selectors\n     *\n     * @param {String|Element} el\n     */\n\n    function query(el) {\n      return typeof el === 'string' ? document.querySelector(el) : el;\n    }\n\n    /**\n     * Append operation that takes a callback.\n     *\n     * @param {Node} el\n     * @param {Node} target\n     * @param {Vue} vm - unused\n     * @param {Function} [cb]\n     */\n\n    function append(el, target, vm, cb) {\n      target.appendChild(el);\n      if (cb) cb();\n    }\n\n    /**\n     * InsertBefore operation that takes a callback.\n     *\n     * @param {Node} el\n     * @param {Node} target\n     * @param {Vue} vm - unused\n     * @param {Function} [cb]\n     */\n\n    function beforeWithCb(el, target, vm, cb) {\n      before(el, target);\n      if (cb) cb();\n    }\n\n    /**\n     * Remove operation that takes a callback.\n     *\n     * @param {Node} el\n     * @param {Vue} vm - unused\n     * @param {Function} [cb]\n     */\n\n    function removeWithCb(el, vm, cb) {\n      remove(el);\n      if (cb) cb();\n    }\n  }\n\n  function eventsAPI (Vue) {\n    /**\n     * Listen on the given `event` with `fn`.\n     *\n     * @param {String} event\n     * @param {Function} fn\n     */\n\n    Vue.prototype.$on = function (event, fn) {\n      (this._events[event] || (this._events[event] = [])).push(fn);\n      modifyListenerCount(this, event, 1);\n      return this;\n    };\n\n    /**\n     * Adds an `event` listener that will be invoked a single\n     * time then automatically removed.\n     *\n     * @param {String} event\n     * @param {Function} fn\n     */\n\n    Vue.prototype.$once = function (event, fn) {\n      var self = this;\n      function on() {\n        self.$off(event, on);\n        fn.apply(this, arguments);\n      }\n      on.fn = fn;\n      this.$on(event, on);\n      return this;\n    };\n\n    /**\n     * Remove the given callback for `event` or all\n     * registered callbacks.\n     *\n     * @param {String} event\n     * @param {Function} fn\n     */\n\n    Vue.prototype.$off = function (event, fn) {\n      var cbs;\n      // all\n      if (!arguments.length) {\n        if (this.$parent) {\n          for (event in this._events) {\n            cbs = this._events[event];\n            if (cbs) {\n              modifyListenerCount(this, event, -cbs.length);\n            }\n          }\n        }\n        this._events = {};\n        return this;\n      }\n      // specific event\n      cbs = this._events[event];\n      if (!cbs) {\n        return this;\n      }\n      if (arguments.length === 1) {\n        modifyListenerCount(this, event, -cbs.length);\n        this._events[event] = null;\n        return this;\n      }\n      // specific handler\n      var cb;\n      var i = cbs.length;\n      while (i--) {\n        cb = cbs[i];\n        if (cb === fn || cb.fn === fn) {\n          modifyListenerCount(this, event, -1);\n          cbs.splice(i, 1);\n          break;\n        }\n      }\n      return this;\n    };\n\n    /**\n     * Trigger an event on self.\n     *\n     * @param {String|Object} event\n     * @return {Boolean} shouldPropagate\n     */\n\n    Vue.prototype.$emit = function (event) {\n      var isSource = typeof event === 'string';\n      event = isSource ? event : event.name;\n      var cbs = this._events[event];\n      var shouldPropagate = isSource || !cbs;\n      if (cbs) {\n        cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n        // this is a somewhat hacky solution to the question raised\n        // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n        // the propagation handling is somewhat broken. Therefore we\n        // need to treat these inline callbacks differently.\n        var hasParentCbs = isSource && cbs.some(function (cb) {\n          return cb._fromParent;\n        });\n        if (hasParentCbs) {\n          shouldPropagate = false;\n        }\n        var args = toArray(arguments, 1);\n        for (var i = 0, l = cbs.length; i < l; i++) {\n          var cb = cbs[i];\n          var res = cb.apply(this, args);\n          if (res === true && (!hasParentCbs || cb._fromParent)) {\n            shouldPropagate = true;\n          }\n        }\n      }\n      return shouldPropagate;\n    };\n\n    /**\n     * Recursively broadcast an event to all children instances.\n     *\n     * @param {String|Object} event\n     * @param {...*} additional arguments\n     */\n\n    Vue.prototype.$broadcast = function (event) {\n      var isSource = typeof event === 'string';\n      event = isSource ? event : event.name;\n      // if no child has registered for this event,\n      // then there's no need to broadcast.\n      if (!this._eventsCount[event]) return;\n      var children = this.$children;\n      var args = toArray(arguments);\n      if (isSource) {\n        // use object event to indicate non-source emit\n        // on children\n        args[0] = { name: event, source: this };\n      }\n      for (var i = 0, l = children.length; i < l; i++) {\n        var child = children[i];\n        var shouldPropagate = child.$emit.apply(child, args);\n        if (shouldPropagate) {\n          child.$broadcast.apply(child, args);\n        }\n      }\n      return this;\n    };\n\n    /**\n     * Recursively propagate an event up the parent chain.\n     *\n     * @param {String} event\n     * @param {...*} additional arguments\n     */\n\n    Vue.prototype.$dispatch = function (event) {\n      var shouldPropagate = this.$emit.apply(this, arguments);\n      if (!shouldPropagate) return;\n      var parent = this.$parent;\n      var args = toArray(arguments);\n      // use object event to indicate non-source emit\n      // on parents\n      args[0] = { name: event, source: this };\n      while (parent) {\n        shouldPropagate = parent.$emit.apply(parent, args);\n        parent = shouldPropagate ? parent.$parent : null;\n      }\n      return this;\n    };\n\n    /**\n     * Modify the listener counts on all parents.\n     * This bookkeeping allows $broadcast to return early when\n     * no child has listened to a certain event.\n     *\n     * @param {Vue} vm\n     * @param {String} event\n     * @param {Number} count\n     */\n\n    var hookRE = /^hook:/;\n    function modifyListenerCount(vm, event, count) {\n      var parent = vm.$parent;\n      // hooks do not get broadcasted so no need\n      // to do bookkeeping for them\n      if (!parent || !count || hookRE.test(event)) return;\n      while (parent) {\n        parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n        parent = parent.$parent;\n      }\n    }\n  }\n\n  function lifecycleAPI (Vue) {\n    /**\n     * Set instance target element and kick off the compilation\n     * process. The passed in `el` can be a selector string, an\n     * existing Element, or a DocumentFragment (for block\n     * instances).\n     *\n     * @param {Element|DocumentFragment|string} el\n     * @public\n     */\n\n    Vue.prototype.$mount = function (el) {\n      if (this._isCompiled) {\n        'development' !== 'production' && warn('$mount() should be called only once.', this);\n        return;\n      }\n      el = query(el);\n      if (!el) {\n        el = document.createElement('div');\n      }\n      this._compile(el);\n      this._initDOMHooks();\n      if (inDoc(this.$el)) {\n        this._callHook('attached');\n        ready.call(this);\n      } else {\n        this.$once('hook:attached', ready);\n      }\n      return this;\n    };\n\n    /**\n     * Mark an instance as ready.\n     */\n\n    function ready() {\n      this._isAttached = true;\n      this._isReady = true;\n      this._callHook('ready');\n    }\n\n    /**\n     * Teardown the instance, simply delegate to the internal\n     * _destroy.\n     *\n     * @param {Boolean} remove\n     * @param {Boolean} deferCleanup\n     */\n\n    Vue.prototype.$destroy = function (remove, deferCleanup) {\n      this._destroy(remove, deferCleanup);\n    };\n\n    /**\n     * Partially compile a piece of DOM and return a\n     * decompile function.\n     *\n     * @param {Element|DocumentFragment} el\n     * @param {Vue} [host]\n     * @param {Object} [scope]\n     * @param {Fragment} [frag]\n     * @return {Function}\n     */\n\n    Vue.prototype.$compile = function (el, host, scope, frag) {\n      return compile(el, this.$options, true)(this, el, host, scope, frag);\n    };\n  }\n\n  /**\n   * The exposed Vue constructor.\n   *\n   * API conventions:\n   * - public API methods/properties are prefixed with `$`\n   * - internal methods/properties are prefixed with `_`\n   * - non-prefixed properties are assumed to be proxied user\n   *   data.\n   *\n   * @constructor\n   * @param {Object} [options]\n   * @public\n   */\n\n  function Vue(options) {\n    this._init(options);\n  }\n\n  // install internals\n  initMixin(Vue);\n  stateMixin(Vue);\n  eventsMixin(Vue);\n  lifecycleMixin(Vue);\n  miscMixin(Vue);\n\n  // install instance APIs\n  dataAPI(Vue);\n  domAPI(Vue);\n  eventsAPI(Vue);\n  lifecycleAPI(Vue);\n\n  var slot = {\n\n    priority: SLOT,\n    params: ['name'],\n\n    bind: function bind() {\n      // this was resolved during component transclusion\n      var name = this.params.name || 'default';\n      var content = this.vm._slotContents && this.vm._slotContents[name];\n      if (!content || !content.hasChildNodes()) {\n        this.fallback();\n      } else {\n        this.compile(content.cloneNode(true), this.vm._context, this.vm);\n      }\n    },\n\n    compile: function compile(content, context, host) {\n      if (content && context) {\n        if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n          // if the inserted slot has v-if\n          // inject fallback content as the v-else\n          var elseBlock = document.createElement('template');\n          elseBlock.setAttribute('v-else', '');\n          elseBlock.innerHTML = this.el.innerHTML;\n          // the else block should be compiled in child scope\n          elseBlock._context = this.vm;\n          content.appendChild(elseBlock);\n        }\n        var scope = host ? host._scope : this._scope;\n        this.unlink = context.$compile(content, host, scope, this._frag);\n      }\n      if (content) {\n        replace(this.el, content);\n      } else {\n        remove(this.el);\n      }\n    },\n\n    fallback: function fallback() {\n      this.compile(extractContent(this.el, true), this.vm);\n    },\n\n    unbind: function unbind() {\n      if (this.unlink) {\n        this.unlink();\n      }\n    }\n  };\n\n  var partial = {\n\n    priority: PARTIAL,\n\n    params: ['name'],\n\n    // watch changes to name for dynamic partials\n    paramWatchers: {\n      name: function name(value) {\n        vIf.remove.call(this);\n        if (value) {\n          this.insert(value);\n        }\n      }\n    },\n\n    bind: function bind() {\n      this.anchor = createAnchor('v-partial');\n      replace(this.el, this.anchor);\n      this.insert(this.params.name);\n    },\n\n    insert: function insert(id) {\n      var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n      if (partial) {\n        this.factory = new FragmentFactory(this.vm, partial);\n        vIf.insert.call(this);\n      }\n    },\n\n    unbind: function unbind() {\n      if (this.frag) {\n        this.frag.destroy();\n      }\n    }\n  };\n\n  var elementDirectives = {\n    slot: slot,\n    partial: partial\n  };\n\n  var convertArray = vFor._postProcess;\n\n  /**\n   * Limit filter for arrays\n   *\n   * @param {Number} n\n   * @param {Number} offset (Decimal expected)\n   */\n\n  function limitBy(arr, n, offset) {\n    offset = offset ? parseInt(offset, 10) : 0;\n    n = toNumber(n);\n    return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n  }\n\n  /**\n   * Filter filter for arrays\n   *\n   * @param {String} search\n   * @param {String} [delimiter]\n   * @param {String} ...dataKeys\n   */\n\n  function filterBy(arr, search, delimiter) {\n    arr = convertArray(arr);\n    if (search == null) {\n      return arr;\n    }\n    if (typeof search === 'function') {\n      return arr.filter(search);\n    }\n    // cast to lowercase string\n    search = ('' + search).toLowerCase();\n    // allow optional `in` delimiter\n    // because why not\n    var n = delimiter === 'in' ? 3 : 2;\n    // extract and flatten keys\n    var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n    var res = [];\n    var item, key, val, j;\n    for (var i = 0, l = arr.length; i < l; i++) {\n      item = arr[i];\n      val = item && item.$value || item;\n      j = keys.length;\n      if (j) {\n        while (j--) {\n          key = keys[j];\n          if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n            res.push(item);\n            break;\n          }\n        }\n      } else if (contains(item, search)) {\n        res.push(item);\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Filter filter for arrays\n   *\n   * @param {String|Array<String>|Function} ...sortKeys\n   * @param {Number} [order]\n   */\n\n  function orderBy(arr) {\n    var comparator = null;\n    var sortKeys = undefined;\n    arr = convertArray(arr);\n\n    // determine order (last argument)\n    var args = toArray(arguments, 1);\n    var order = args[args.length - 1];\n    if (typeof order === 'number') {\n      order = order < 0 ? -1 : 1;\n      args = args.length > 1 ? args.slice(0, -1) : args;\n    } else {\n      order = 1;\n    }\n\n    // determine sortKeys & comparator\n    var firstArg = args[0];\n    if (!firstArg) {\n      return arr;\n    } else if (typeof firstArg === 'function') {\n      // custom comparator\n      comparator = function (a, b) {\n        return firstArg(a, b) * order;\n      };\n    } else {\n      // string keys. flatten first\n      sortKeys = Array.prototype.concat.apply([], args);\n      comparator = function (a, b, i) {\n        i = i || 0;\n        return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n      };\n    }\n\n    function baseCompare(a, b, sortKeyIndex) {\n      var sortKey = sortKeys[sortKeyIndex];\n      if (sortKey) {\n        if (sortKey !== '$key') {\n          if (isObject(a) && '$value' in a) a = a.$value;\n          if (isObject(b) && '$value' in b) b = b.$value;\n        }\n        a = isObject(a) ? getPath(a, sortKey) : a;\n        b = isObject(b) ? getPath(b, sortKey) : b;\n      }\n      return a === b ? 0 : a > b ? order : -order;\n    }\n\n    // sort on a copy to avoid mutating original array\n    return arr.slice().sort(comparator);\n  }\n\n  /**\n   * String contain helper\n   *\n   * @param {*} val\n   * @param {String} search\n   */\n\n  function contains(val, search) {\n    var i;\n    if (isPlainObject(val)) {\n      var keys = Object.keys(val);\n      i = keys.length;\n      while (i--) {\n        if (contains(val[keys[i]], search)) {\n          return true;\n        }\n      }\n    } else if (isArray(val)) {\n      i = val.length;\n      while (i--) {\n        if (contains(val[i], search)) {\n          return true;\n        }\n      }\n    } else if (val != null) {\n      return val.toString().toLowerCase().indexOf(search) > -1;\n    }\n  }\n\n  var digitsRE = /(\\d{3})(?=\\d)/g;\n\n  // asset collections must be a plain object.\n  var filters = {\n\n    orderBy: orderBy,\n    filterBy: filterBy,\n    limitBy: limitBy,\n\n    /**\n     * Stringify value.\n     *\n     * @param {Number} indent\n     */\n\n    json: {\n      read: function read(value, indent) {\n        return typeof value === 'string' ? value : JSON.stringify(value, null, arguments.length > 1 ? indent : 2);\n      },\n      write: function write(value) {\n        try {\n          return JSON.parse(value);\n        } catch (e) {\n          return value;\n        }\n      }\n    },\n\n    /**\n     * 'abc' => 'Abc'\n     */\n\n    capitalize: function capitalize(value) {\n      if (!value && value !== 0) return '';\n      value = value.toString();\n      return value.charAt(0).toUpperCase() + value.slice(1);\n    },\n\n    /**\n     * 'abc' => 'ABC'\n     */\n\n    uppercase: function uppercase(value) {\n      return value || value === 0 ? value.toString().toUpperCase() : '';\n    },\n\n    /**\n     * 'AbC' => 'abc'\n     */\n\n    lowercase: function lowercase(value) {\n      return value || value === 0 ? value.toString().toLowerCase() : '';\n    },\n\n    /**\n     * 12345 => $12,345.00\n     *\n     * @param {String} sign\n     * @param {Number} decimals Decimal places\n     */\n\n    currency: function currency(value, _currency, decimals) {\n      value = parseFloat(value);\n      if (!isFinite(value) || !value && value !== 0) return '';\n      _currency = _currency != null ? _currency : '$';\n      decimals = decimals != null ? decimals : 2;\n      var stringified = Math.abs(value).toFixed(decimals);\n      var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n      var i = _int.length % 3;\n      var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n      var _float = decimals ? stringified.slice(-1 - decimals) : '';\n      var sign = value < 0 ? '-' : '';\n      return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n    },\n\n    /**\n     * 'item' => 'items'\n     *\n     * @params\n     *  an array of strings corresponding to\n     *  the single, double, triple ... forms of the word to\n     *  be pluralized. When the number to be pluralized\n     *  exceeds the length of the args, it will use the last\n     *  entry in the array.\n     *\n     *  e.g. ['single', 'double', 'triple', 'multiple']\n     */\n\n    pluralize: function pluralize(value) {\n      var args = toArray(arguments, 1);\n      var length = args.length;\n      if (length > 1) {\n        var index = value % 10 - 1;\n        return index in args ? args[index] : args[length - 1];\n      } else {\n        return args[0] + (value === 1 ? '' : 's');\n      }\n    },\n\n    /**\n     * Debounce a handler function.\n     *\n     * @param {Function} handler\n     * @param {Number} delay = 300\n     * @return {Function}\n     */\n\n    debounce: function debounce(handler, delay) {\n      if (!handler) return;\n      if (!delay) {\n        delay = 300;\n      }\n      return _debounce(handler, delay);\n    }\n  };\n\n  function installGlobalAPI (Vue) {\n    /**\n     * Vue and every constructor that extends Vue has an\n     * associated options object, which can be accessed during\n     * compilation steps as `this.constructor.options`.\n     *\n     * These can be seen as the default options of every\n     * Vue instance.\n     */\n\n    Vue.options = {\n      directives: directives,\n      elementDirectives: elementDirectives,\n      filters: filters,\n      transitions: {},\n      components: {},\n      partials: {},\n      replace: true\n    };\n\n    /**\n     * Expose useful internals\n     */\n\n    Vue.util = util;\n    Vue.config = config;\n    Vue.set = set;\n    Vue['delete'] = del;\n    Vue.nextTick = nextTick;\n\n    /**\n     * The following are exposed for advanced usage / plugins\n     */\n\n    Vue.compiler = compiler;\n    Vue.FragmentFactory = FragmentFactory;\n    Vue.internalDirectives = internalDirectives;\n    Vue.parsers = {\n      path: path,\n      text: text,\n      template: template,\n      directive: directive,\n      expression: expression\n    };\n\n    /**\n     * Each instance constructor, including Vue, has a unique\n     * cid. This enables us to create wrapped \"child\n     * constructors\" for prototypal inheritance and cache them.\n     */\n\n    Vue.cid = 0;\n    var cid = 1;\n\n    /**\n     * Class inheritance\n     *\n     * @param {Object} extendOptions\n     */\n\n    Vue.extend = function (extendOptions) {\n      extendOptions = extendOptions || {};\n      var Super = this;\n      var isFirstExtend = Super.cid === 0;\n      if (isFirstExtend && extendOptions._Ctor) {\n        return extendOptions._Ctor;\n      }\n      var name = extendOptions.name || Super.options.name;\n      if (true) {\n        if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n          warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n          name = null;\n        }\n      }\n      var Sub = createClass(name || 'VueComponent');\n      Sub.prototype = Object.create(Super.prototype);\n      Sub.prototype.constructor = Sub;\n      Sub.cid = cid++;\n      Sub.options = mergeOptions(Super.options, extendOptions);\n      Sub['super'] = Super;\n      // allow further extension\n      Sub.extend = Super.extend;\n      // create asset registers, so extended classes\n      // can have their private assets too.\n      config._assetTypes.forEach(function (type) {\n        Sub[type] = Super[type];\n      });\n      // enable recursive self-lookup\n      if (name) {\n        Sub.options.components[name] = Sub;\n      }\n      // cache constructor\n      if (isFirstExtend) {\n        extendOptions._Ctor = Sub;\n      }\n      return Sub;\n    };\n\n    /**\n     * A function that returns a sub-class constructor with the\n     * given name. This gives us much nicer output when\n     * logging instances in the console.\n     *\n     * @param {String} name\n     * @return {Function}\n     */\n\n    function createClass(name) {\n      /* eslint-disable no-new-func */\n      return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n      /* eslint-enable no-new-func */\n    }\n\n    /**\n     * Plugin system\n     *\n     * @param {Object} plugin\n     */\n\n    Vue.use = function (plugin) {\n      /* istanbul ignore if */\n      if (plugin.installed) {\n        return;\n      }\n      // additional parameters\n      var args = toArray(arguments, 1);\n      args.unshift(this);\n      if (typeof plugin.install === 'function') {\n        plugin.install.apply(plugin, args);\n      } else {\n        plugin.apply(null, args);\n      }\n      plugin.installed = true;\n      return this;\n    };\n\n    /**\n     * Apply a global mixin by merging it into the default\n     * options.\n     */\n\n    Vue.mixin = function (mixin) {\n      Vue.options = mergeOptions(Vue.options, mixin);\n    };\n\n    /**\n     * Create asset registration methods with the following\n     * signature:\n     *\n     * @param {String} id\n     * @param {*} definition\n     */\n\n    config._assetTypes.forEach(function (type) {\n      Vue[type] = function (id, definition) {\n        if (!definition) {\n          return this.options[type + 's'][id];\n        } else {\n          /* istanbul ignore if */\n          if (true) {\n            if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n              warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n            }\n          }\n          if (type === 'component' && isPlainObject(definition)) {\n            if (!definition.name) {\n              definition.name = id;\n            }\n            definition = Vue.extend(definition);\n          }\n          this.options[type + 's'][id] = definition;\n          return definition;\n        }\n      };\n    });\n\n    // expose internal transition API\n    extend(Vue.transition, transition);\n  }\n\n  installGlobalAPI(Vue);\n\n  Vue.version = '1.0.26';\n\n  // devtools global hook\n  /* istanbul ignore next */\n  setTimeout(function () {\n    if (config.devtools) {\n      if (devtools) {\n        devtools.emit('init', Vue);\n      } else if ('development' !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n        console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n      }\n    }\n  }, 0);\n\n  return Vue;\n\n}));\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(12)))\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vue__);\n/* unused harmony export vue2 *//* unused harmony export vueVersion *//* unused harmony export vm *//* harmony export */ exports[\"a\"] = component;\nvar vueVersion = __WEBPACK_IMPORTED_MODULE_0_vue__['version'], vue2 = vueVersion.charAt(0) === '2';\nfunction vm(self) {\n    return self;\n}\nfunction createFnActivateV1(fnActivate) {\n    return function () {\n        return fnActivate(this);\n    };\n}\nfunction createFnDeactivateV1(fnDeactivate) {\n    return function () {\n        return fnDeactivate(this);\n    };\n}\nfunction createFnActivateV2(fnActivate) {\n    return function (route, redirect, next) {\n        return next(fnActivate);\n    };\n}\nfunction createFnDeactivateV2(fnDeactivate) {\n    return function (route, redirect, next) {\n        return fnDeactivate(this) && next();\n    };\n}\nfunction fillHookOpts(opts, cls, fnActivate, fnDeactivate) {\n    cls.component = opts;\n    if (!fnActivate && !fnDeactivate)\n        return opts;\n    var route = vue2 ? opts : (opts.route || (opts.route = {}));\n    if (fnActivate) {\n        if (vue2)\n            route.beforeRouteEnter = createFnActivateV2(fnActivate);\n        else\n            route.activate = createFnActivateV1(fnActivate);\n    }\n    if (fnDeactivate) {\n        if (vue2)\n            route.beforeRouteLeave = createFnDeactivateV2(fnDeactivate);\n        else\n            route.canDeactivate = createFnDeactivateV1(fnDeactivate);\n    }\n    return opts;\n}\nfunction fillOpts(opts, cls) {\n    var methods = opts.methods, pt = cls.prototype;\n    if (!methods)\n        opts.methods = methods = {};\n    for (var key in pt) {\n        if (key !== 'constructor')\n            methods[key] = pt[key];\n    }\n    //Object.assign(methods, pt)\n    opts.data = function () { return new cls(); };\n    opts.name = cls.name;\n    return opts;\n}\nfunction component(opts, clazz, fnActivate, fnDeactivate) {\n    if (clazz)\n        return fillHookOpts(fillOpts(opts || {}, clazz), clazz, fnActivate, fnDeactivate);\n    return function (cls) { return __WEBPACK_IMPORTED_MODULE_0_vue__[\"extend\"](fillOpts(opts || {}, cls)); };\n}\n//# sourceMappingURL=index.js.map\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuets__ = __webpack_require__(1);\n/* unused harmony export Hello */\nvar Hello = (function () {\n    function Hello() {\n        this.msg = 'Hello, world!';\n        this.activate = 0;\n        this.deactivate = 0;\n    }\n    Hello.activate = function (self) {\n        self.activate++;\n    };\n    Hello.deactivate = function (self) {\n        self.deactivate++;\n        return true;\n    };\n    Hello.prototype.append = function (suffix) {\n        this.msg += suffix;\n    };\n    return Hello;\n}());\n/* harmony default export */ exports[\"a\"] = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_vuets__[\"a\" /* component */])({\n    template: \"\\n<div>\\n  <h3 @click=\\\"append('!')\\\">{{ msg }}</h3>\\n  <div>\\n    activate count: {{ activate }}\\n  </div>\\n  <div>\\n    deactivate count: {{ deactivate }}\\n  </div>\\n</div>\\n\"\n}, Hello, Hello.activate, Hello.deactivate);\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuets__ = __webpack_require__(1);\n/* unused harmony export Home */\nvar Home = (function () {\n    function Home() {\n        this.msg = 'Home';\n        this.activate = 0;\n        this.deactivate = 0;\n    }\n    Home.activate = function (self) {\n        self.activate++;\n    };\n    Home.deactivate = function (self) {\n        self.deactivate++;\n        return true;\n    };\n    Home.prototype.append = function (suffix) {\n        this.msg += suffix;\n    };\n    return Home;\n}());\n/* harmony default export */ exports[\"a\"] = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_vuets__[\"a\" /* component */])({\n    template: \"\\n<div>\\n  <h3 @click=\\\"append('!')\\\">{{ msg }}</h3>\\n  <div>\\n    activate count: {{ activate }} | deactivate count: {{ deactivate }}\\n  </div>\\n</div>\\n\"\n}, Home, Home.activate, Home.deactivate);\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __vue_script__, __vue_template__\n__webpack_require__(11)\n__vue_script__ = __webpack_require__(6)\n__vue_template__ = __webpack_require__(9)\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n/*!\n * vue-router v0.7.13\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n(function (global, factory) {\n   true ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  global.VueRouter = factory();\n}(this, function () { 'use strict';\n\n  var babelHelpers = {};\n\n  babelHelpers.classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n  function Target(path, matcher, delegate) {\n    this.path = path;\n    this.matcher = matcher;\n    this.delegate = delegate;\n  }\n\n  Target.prototype = {\n    to: function to(target, callback) {\n      var delegate = this.delegate;\n\n      if (delegate && delegate.willAddRoute) {\n        target = delegate.willAddRoute(this.matcher.target, target);\n      }\n\n      this.matcher.add(this.path, target);\n\n      if (callback) {\n        if (callback.length === 0) {\n          throw new Error(\"You must have an argument in the function passed to `to`\");\n        }\n        this.matcher.addChild(this.path, target, callback, this.delegate);\n      }\n      return this;\n    }\n  };\n\n  function Matcher(target) {\n    this.routes = {};\n    this.children = {};\n    this.target = target;\n  }\n\n  Matcher.prototype = {\n    add: function add(path, handler) {\n      this.routes[path] = handler;\n    },\n\n    addChild: function addChild(path, target, callback, delegate) {\n      var matcher = new Matcher(target);\n      this.children[path] = matcher;\n\n      var match = generateMatch(path, matcher, delegate);\n\n      if (delegate && delegate.contextEntered) {\n        delegate.contextEntered(target, match);\n      }\n\n      callback(match);\n    }\n  };\n\n  function generateMatch(startingPath, matcher, delegate) {\n    return function (path, nestedCallback) {\n      var fullPath = startingPath + path;\n\n      if (nestedCallback) {\n        nestedCallback(generateMatch(fullPath, matcher, delegate));\n      } else {\n        return new Target(startingPath + path, matcher, delegate);\n      }\n    };\n  }\n\n  function addRoute(routeArray, path, handler) {\n    var len = 0;\n    for (var i = 0, l = routeArray.length; i < l; i++) {\n      len += routeArray[i].path.length;\n    }\n\n    path = path.substr(len);\n    var route = { path: path, handler: handler };\n    routeArray.push(route);\n  }\n\n  function eachRoute(baseRoute, matcher, callback, binding) {\n    var routes = matcher.routes;\n\n    for (var path in routes) {\n      if (routes.hasOwnProperty(path)) {\n        var routeArray = baseRoute.slice();\n        addRoute(routeArray, path, routes[path]);\n\n        if (matcher.children[path]) {\n          eachRoute(routeArray, matcher.children[path], callback, binding);\n        } else {\n          callback.call(binding, routeArray);\n        }\n      }\n    }\n  }\n\n  function map (callback, addRouteCallback) {\n    var matcher = new Matcher();\n\n    callback(generateMatch(\"\", matcher, this.delegate));\n\n    eachRoute([], matcher, function (route) {\n      if (addRouteCallback) {\n        addRouteCallback(this, route);\n      } else {\n        this.add(route);\n      }\n    }, this);\n  }\n\n  var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'];\n\n  var escapeRegex = new RegExp('(\\\\' + specials.join('|\\\\') + ')', 'g');\n\n  var noWarning = false;\n  function warn(msg) {\n    if (!noWarning && typeof console !== 'undefined') {\n      console.error('[vue-router] ' + msg);\n    }\n  }\n\n  function tryDecode(uri, asComponent) {\n    try {\n      return asComponent ? decodeURIComponent(uri) : decodeURI(uri);\n    } catch (e) {\n      warn('malformed URI' + (asComponent ? ' component: ' : ': ') + uri);\n    }\n  }\n\n  function isArray(test) {\n    return Object.prototype.toString.call(test) === \"[object Array]\";\n  }\n\n  // A Segment represents a segment in the original route description.\n  // Each Segment type provides an `eachChar` and `regex` method.\n  //\n  // The `eachChar` method invokes the callback with one or more character\n  // specifications. A character specification consumes one or more input\n  // characters.\n  //\n  // The `regex` method returns a regex fragment for the segment. If the\n  // segment is a dynamic of star segment, the regex fragment also includes\n  // a capture.\n  //\n  // A character specification contains:\n  //\n  // * `validChars`: a String with a list of all valid characters, or\n  // * `invalidChars`: a String with a list of all invalid characters\n  // * `repeat`: true if the character specification can repeat\n\n  function StaticSegment(string) {\n    this.string = string;\n  }\n  StaticSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      var string = this.string,\n          ch;\n\n      for (var i = 0, l = string.length; i < l; i++) {\n        ch = string.charAt(i);\n        callback({ validChars: ch });\n      }\n    },\n\n    regex: function regex() {\n      return this.string.replace(escapeRegex, '\\\\$1');\n    },\n\n    generate: function generate() {\n      return this.string;\n    }\n  };\n\n  function DynamicSegment(name) {\n    this.name = name;\n  }\n  DynamicSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      callback({ invalidChars: \"/\", repeat: true });\n    },\n\n    regex: function regex() {\n      return \"([^/]+)\";\n    },\n\n    generate: function generate(params) {\n      var val = params[this.name];\n      return val == null ? \":\" + this.name : val;\n    }\n  };\n\n  function StarSegment(name) {\n    this.name = name;\n  }\n  StarSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      callback({ invalidChars: \"\", repeat: true });\n    },\n\n    regex: function regex() {\n      return \"(.+)\";\n    },\n\n    generate: function generate(params) {\n      var val = params[this.name];\n      return val == null ? \":\" + this.name : val;\n    }\n  };\n\n  function EpsilonSegment() {}\n  EpsilonSegment.prototype = {\n    eachChar: function eachChar() {},\n    regex: function regex() {\n      return \"\";\n    },\n    generate: function generate() {\n      return \"\";\n    }\n  };\n\n  function parse(route, names, specificity) {\n    // normalize route as not starting with a \"/\". Recognition will\n    // also normalize.\n    if (route.charAt(0) === \"/\") {\n      route = route.substr(1);\n    }\n\n    var segments = route.split(\"/\"),\n        results = [];\n\n    // A routes has specificity determined by the order that its different segments\n    // appear in. This system mirrors how the magnitude of numbers written as strings\n    // works.\n    // Consider a number written as: \"abc\". An example would be \"200\". Any other number written\n    // \"xyz\" will be smaller than \"abc\" so long as `a > z`. For instance, \"199\" is smaller\n    // then \"200\", even though \"y\" and \"z\" (which are both 9) are larger than \"0\" (the value\n    // of (`b` and `c`). This is because the leading symbol, \"2\", is larger than the other\n    // leading symbol, \"1\".\n    // The rule is that symbols to the left carry more weight than symbols to the right\n    // when a number is written out as a string. In the above strings, the leading digit\n    // represents how many 100's are in the number, and it carries more weight than the middle\n    // number which represents how many 10's are in the number.\n    // This system of number magnitude works well for route specificity, too. A route written as\n    // `a/b/c` will be more specific than `x/y/z` as long as `a` is more specific than\n    // `x`, irrespective of the other parts.\n    // Because of this similarity, we assign each type of segment a number value written as a\n    // string. We can find the specificity of compound routes by concatenating these strings\n    // together, from left to right. After we have looped through all of the segments,\n    // we convert the string to a number.\n    specificity.val = '';\n\n    for (var i = 0, l = segments.length; i < l; i++) {\n      var segment = segments[i],\n          match;\n\n      if (match = segment.match(/^:([^\\/]+)$/)) {\n        results.push(new DynamicSegment(match[1]));\n        names.push(match[1]);\n        specificity.val += '3';\n      } else if (match = segment.match(/^\\*([^\\/]+)$/)) {\n        results.push(new StarSegment(match[1]));\n        specificity.val += '2';\n        names.push(match[1]);\n      } else if (segment === \"\") {\n        results.push(new EpsilonSegment());\n        specificity.val += '1';\n      } else {\n        results.push(new StaticSegment(segment));\n        specificity.val += '4';\n      }\n    }\n\n    specificity.val = +specificity.val;\n\n    return results;\n  }\n\n  // A State has a character specification and (`charSpec`) and a list of possible\n  // subsequent states (`nextStates`).\n  //\n  // If a State is an accepting state, it will also have several additional\n  // properties:\n  //\n  // * `regex`: A regular expression that is used to extract parameters from paths\n  //   that reached this accepting state.\n  // * `handlers`: Information on how to convert the list of captures into calls\n  //   to registered handlers with the specified parameters\n  // * `types`: How many static, dynamic or star segments in this route. Used to\n  //   decide which route to use if multiple registered routes match a path.\n  //\n  // Currently, State is implemented naively by looping over `nextStates` and\n  // comparing a character specification against a character. A more efficient\n  // implementation would use a hash of keys pointing at one or more next states.\n\n  function State(charSpec) {\n    this.charSpec = charSpec;\n    this.nextStates = [];\n  }\n\n  State.prototype = {\n    get: function get(charSpec) {\n      var nextStates = this.nextStates;\n\n      for (var i = 0, l = nextStates.length; i < l; i++) {\n        var child = nextStates[i];\n\n        var isEqual = child.charSpec.validChars === charSpec.validChars;\n        isEqual = isEqual && child.charSpec.invalidChars === charSpec.invalidChars;\n\n        if (isEqual) {\n          return child;\n        }\n      }\n    },\n\n    put: function put(charSpec) {\n      var state;\n\n      // If the character specification already exists in a child of the current\n      // state, just return that state.\n      if (state = this.get(charSpec)) {\n        return state;\n      }\n\n      // Make a new state for the character spec\n      state = new State(charSpec);\n\n      // Insert the new state as a child of the current state\n      this.nextStates.push(state);\n\n      // If this character specification repeats, insert the new state as a child\n      // of itself. Note that this will not trigger an infinite loop because each\n      // transition during recognition consumes a character.\n      if (charSpec.repeat) {\n        state.nextStates.push(state);\n      }\n\n      // Return the new state\n      return state;\n    },\n\n    // Find a list of child states matching the next character\n    match: function match(ch) {\n      // DEBUG \"Processing `\" + ch + \"`:\"\n      var nextStates = this.nextStates,\n          child,\n          charSpec,\n          chars;\n\n      // DEBUG \"  \" + debugState(this)\n      var returned = [];\n\n      for (var i = 0, l = nextStates.length; i < l; i++) {\n        child = nextStates[i];\n\n        charSpec = child.charSpec;\n\n        if (typeof (chars = charSpec.validChars) !== 'undefined') {\n          if (chars.indexOf(ch) !== -1) {\n            returned.push(child);\n          }\n        } else if (typeof (chars = charSpec.invalidChars) !== 'undefined') {\n          if (chars.indexOf(ch) === -1) {\n            returned.push(child);\n          }\n        }\n      }\n\n      return returned;\n    }\n\n    /** IF DEBUG\n    , debug: function() {\n      var charSpec = this.charSpec,\n          debug = \"[\",\n          chars = charSpec.validChars || charSpec.invalidChars;\n       if (charSpec.invalidChars) { debug += \"^\"; }\n      debug += chars;\n      debug += \"]\";\n       if (charSpec.repeat) { debug += \"+\"; }\n       return debug;\n    }\n    END IF **/\n  };\n\n  /** IF DEBUG\n  function debug(log) {\n    console.log(log);\n  }\n\n  function debugState(state) {\n    return state.nextStates.map(function(n) {\n      if (n.nextStates.length === 0) { return \"( \" + n.debug() + \" [accepting] )\"; }\n      return \"( \" + n.debug() + \" <then> \" + n.nextStates.map(function(s) { return s.debug() }).join(\" or \") + \" )\";\n    }).join(\", \")\n  }\n  END IF **/\n\n  // Sort the routes by specificity\n  function sortSolutions(states) {\n    return states.sort(function (a, b) {\n      return b.specificity.val - a.specificity.val;\n    });\n  }\n\n  function recognizeChar(states, ch) {\n    var nextStates = [];\n\n    for (var i = 0, l = states.length; i < l; i++) {\n      var state = states[i];\n\n      nextStates = nextStates.concat(state.match(ch));\n    }\n\n    return nextStates;\n  }\n\n  var oCreate = Object.create || function (proto) {\n    function F() {}\n    F.prototype = proto;\n    return new F();\n  };\n\n  function RecognizeResults(queryParams) {\n    this.queryParams = queryParams || {};\n  }\n  RecognizeResults.prototype = oCreate({\n    splice: Array.prototype.splice,\n    slice: Array.prototype.slice,\n    push: Array.prototype.push,\n    length: 0,\n    queryParams: null\n  });\n\n  function findHandler(state, path, queryParams) {\n    var handlers = state.handlers,\n        regex = state.regex;\n    var captures = path.match(regex),\n        currentCapture = 1;\n    var result = new RecognizeResults(queryParams);\n\n    for (var i = 0, l = handlers.length; i < l; i++) {\n      var handler = handlers[i],\n          names = handler.names,\n          params = {};\n\n      for (var j = 0, m = names.length; j < m; j++) {\n        params[names[j]] = captures[currentCapture++];\n      }\n\n      result.push({ handler: handler.handler, params: params, isDynamic: !!names.length });\n    }\n\n    return result;\n  }\n\n  function addSegment(currentState, segment) {\n    segment.eachChar(function (ch) {\n      var state;\n\n      currentState = currentState.put(ch);\n    });\n\n    return currentState;\n  }\n\n  function decodeQueryParamPart(part) {\n    // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\n    part = part.replace(/\\+/gm, '%20');\n    return tryDecode(part, true);\n  }\n\n  // The main interface\n\n  var RouteRecognizer = function RouteRecognizer() {\n    this.rootState = new State();\n    this.names = {};\n  };\n\n  RouteRecognizer.prototype = {\n    add: function add(routes, options) {\n      var currentState = this.rootState,\n          regex = \"^\",\n          specificity = {},\n          handlers = [],\n          allSegments = [],\n          name;\n\n      var isEmpty = true;\n\n      for (var i = 0, l = routes.length; i < l; i++) {\n        var route = routes[i],\n            names = [];\n\n        var segments = parse(route.path, names, specificity);\n\n        allSegments = allSegments.concat(segments);\n\n        for (var j = 0, m = segments.length; j < m; j++) {\n          var segment = segments[j];\n\n          if (segment instanceof EpsilonSegment) {\n            continue;\n          }\n\n          isEmpty = false;\n\n          // Add a \"/\" for the new segment\n          currentState = currentState.put({ validChars: \"/\" });\n          regex += \"/\";\n\n          // Add a representation of the segment to the NFA and regex\n          currentState = addSegment(currentState, segment);\n          regex += segment.regex();\n        }\n\n        var handler = { handler: route.handler, names: names };\n        handlers.push(handler);\n      }\n\n      if (isEmpty) {\n        currentState = currentState.put({ validChars: \"/\" });\n        regex += \"/\";\n      }\n\n      currentState.handlers = handlers;\n      currentState.regex = new RegExp(regex + \"$\");\n      currentState.specificity = specificity;\n\n      if (name = options && options.as) {\n        this.names[name] = {\n          segments: allSegments,\n          handlers: handlers\n        };\n      }\n    },\n\n    handlersFor: function handlersFor(name) {\n      var route = this.names[name],\n          result = [];\n      if (!route) {\n        throw new Error(\"There is no route named \" + name);\n      }\n\n      for (var i = 0, l = route.handlers.length; i < l; i++) {\n        result.push(route.handlers[i]);\n      }\n\n      return result;\n    },\n\n    hasRoute: function hasRoute(name) {\n      return !!this.names[name];\n    },\n\n    generate: function generate(name, params) {\n      var route = this.names[name],\n          output = \"\";\n      if (!route) {\n        throw new Error(\"There is no route named \" + name);\n      }\n\n      var segments = route.segments;\n\n      for (var i = 0, l = segments.length; i < l; i++) {\n        var segment = segments[i];\n\n        if (segment instanceof EpsilonSegment) {\n          continue;\n        }\n\n        output += \"/\";\n        output += segment.generate(params);\n      }\n\n      if (output.charAt(0) !== '/') {\n        output = '/' + output;\n      }\n\n      if (params && params.queryParams) {\n        output += this.generateQueryString(params.queryParams);\n      }\n\n      return output;\n    },\n\n    generateQueryString: function generateQueryString(params) {\n      var pairs = [];\n      var keys = [];\n      for (var key in params) {\n        if (params.hasOwnProperty(key)) {\n          keys.push(key);\n        }\n      }\n      keys.sort();\n      for (var i = 0, len = keys.length; i < len; i++) {\n        key = keys[i];\n        var value = params[key];\n        if (value == null) {\n          continue;\n        }\n        var pair = encodeURIComponent(key);\n        if (isArray(value)) {\n          for (var j = 0, l = value.length; j < l; j++) {\n            var arrayPair = key + '[]' + '=' + encodeURIComponent(value[j]);\n            pairs.push(arrayPair);\n          }\n        } else {\n          pair += \"=\" + encodeURIComponent(value);\n          pairs.push(pair);\n        }\n      }\n\n      if (pairs.length === 0) {\n        return '';\n      }\n\n      return \"?\" + pairs.join(\"&\");\n    },\n\n    parseQueryString: function parseQueryString(queryString) {\n      var pairs = queryString.split(\"&\"),\n          queryParams = {};\n      for (var i = 0; i < pairs.length; i++) {\n        var pair = pairs[i].split('='),\n            key = decodeQueryParamPart(pair[0]),\n            keyLength = key.length,\n            isArray = false,\n            value;\n        if (pair.length === 1) {\n          value = 'true';\n        } else {\n          //Handle arrays\n          if (keyLength > 2 && key.slice(keyLength - 2) === '[]') {\n            isArray = true;\n            key = key.slice(0, keyLength - 2);\n            if (!queryParams[key]) {\n              queryParams[key] = [];\n            }\n          }\n          value = pair[1] ? decodeQueryParamPart(pair[1]) : '';\n        }\n        if (isArray) {\n          queryParams[key].push(value);\n        } else {\n          queryParams[key] = value;\n        }\n      }\n      return queryParams;\n    },\n\n    recognize: function recognize(path, silent) {\n      noWarning = silent;\n      var states = [this.rootState],\n          pathLen,\n          i,\n          l,\n          queryStart,\n          queryParams = {},\n          isSlashDropped = false;\n\n      queryStart = path.indexOf('?');\n      if (queryStart !== -1) {\n        var queryString = path.substr(queryStart + 1, path.length);\n        path = path.substr(0, queryStart);\n        if (queryString) {\n          queryParams = this.parseQueryString(queryString);\n        }\n      }\n\n      path = tryDecode(path);\n      if (!path) return;\n\n      // DEBUG GROUP path\n\n      if (path.charAt(0) !== \"/\") {\n        path = \"/\" + path;\n      }\n\n      pathLen = path.length;\n      if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\n        path = path.substr(0, pathLen - 1);\n        isSlashDropped = true;\n      }\n\n      for (i = 0, l = path.length; i < l; i++) {\n        states = recognizeChar(states, path.charAt(i));\n        if (!states.length) {\n          break;\n        }\n      }\n\n      // END DEBUG GROUP\n\n      var solutions = [];\n      for (i = 0, l = states.length; i < l; i++) {\n        if (states[i].handlers) {\n          solutions.push(states[i]);\n        }\n      }\n\n      states = sortSolutions(solutions);\n\n      var state = solutions[0];\n\n      if (state && state.handlers) {\n        // if a trailing slash was dropped and a star segment is the last segment\n        // specified, put the trailing slash back\n        if (isSlashDropped && state.regex.source.slice(-5) === \"(.+)$\") {\n          path = path + \"/\";\n        }\n        return findHandler(state, path, queryParams);\n      }\n    }\n  };\n\n  RouteRecognizer.prototype.map = map;\n\n  var genQuery = RouteRecognizer.prototype.generateQueryString;\n\n  // export default for holding the Vue reference\n  var exports$1 = {};\n  /**\n   * Warn stuff.\n   *\n   * @param {String} msg\n   */\n\n  function warn$1(msg) {\n    /* istanbul ignore next */\n    if (typeof console !== 'undefined') {\n      console.error('[vue-router] ' + msg);\n    }\n  }\n\n  /**\n   * Resolve a relative path.\n   *\n   * @param {String} base\n   * @param {String} relative\n   * @param {Boolean} append\n   * @return {String}\n   */\n\n  function resolvePath(base, relative, append) {\n    var query = base.match(/(\\?.*)$/);\n    if (query) {\n      query = query[1];\n      base = base.slice(0, -query.length);\n    }\n    // a query!\n    if (relative.charAt(0) === '?') {\n      return base + relative;\n    }\n    var stack = base.split('/');\n    // remove trailing segment if:\n    // - not appending\n    // - appending to trailing slash (last segment is empty)\n    if (!append || !stack[stack.length - 1]) {\n      stack.pop();\n    }\n    // resolve relative path\n    var segments = relative.replace(/^\\//, '').split('/');\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n      if (segment === '.') {\n        continue;\n      } else if (segment === '..') {\n        stack.pop();\n      } else {\n        stack.push(segment);\n      }\n    }\n    // ensure leading slash\n    if (stack[0] !== '') {\n      stack.unshift('');\n    }\n    return stack.join('/');\n  }\n\n  /**\n   * Forgiving check for a promise\n   *\n   * @param {Object} p\n   * @return {Boolean}\n   */\n\n  function isPromise(p) {\n    return p && typeof p.then === 'function';\n  }\n\n  /**\n   * Retrive a route config field from a component instance\n   * OR a component contructor.\n   *\n   * @param {Function|Vue} component\n   * @param {String} name\n   * @return {*}\n   */\n\n  function getRouteConfig(component, name) {\n    var options = component && (component.$options || component.options);\n    return options && options.route && options.route[name];\n  }\n\n  /**\n   * Resolve an async component factory. Have to do a dirty\n   * mock here because of Vue core's internal API depends on\n   * an ID check.\n   *\n   * @param {Object} handler\n   * @param {Function} cb\n   */\n\n  var resolver = undefined;\n\n  function resolveAsyncComponent(handler, cb) {\n    if (!resolver) {\n      resolver = {\n        resolve: exports$1.Vue.prototype._resolveComponent,\n        $options: {\n          components: {\n            _: handler.component\n          }\n        }\n      };\n    } else {\n      resolver.$options.components._ = handler.component;\n    }\n    resolver.resolve('_', function (Component) {\n      handler.component = Component;\n      cb(Component);\n    });\n  }\n\n  /**\n   * Map the dynamic segments in a path to params.\n   *\n   * @param {String} path\n   * @param {Object} params\n   * @param {Object} query\n   */\n\n  function mapParams(path, params, query) {\n    if (params === undefined) params = {};\n\n    path = path.replace(/:([^\\/]+)/g, function (_, key) {\n      var val = params[key];\n      /* istanbul ignore if */\n      if (!val) {\n        warn$1('param \"' + key + '\" not found when generating ' + 'path for \"' + path + '\" with params ' + JSON.stringify(params));\n      }\n      return val || '';\n    });\n    if (query) {\n      path += genQuery(query);\n    }\n    return path;\n  }\n\n  var hashRE = /#.*$/;\n\n  var HTML5History = (function () {\n    function HTML5History(_ref) {\n      var root = _ref.root;\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, HTML5History);\n\n      if (root && root !== '/') {\n        // make sure there's the starting slash\n        if (root.charAt(0) !== '/') {\n          root = '/' + root;\n        }\n        // remove trailing slash\n        this.root = root.replace(/\\/$/, '');\n        this.rootRE = new RegExp('^\\\\' + this.root);\n      } else {\n        this.root = null;\n      }\n      this.onChange = onChange;\n      // check base tag\n      var baseEl = document.querySelector('base');\n      this.base = baseEl && baseEl.getAttribute('href');\n    }\n\n    HTML5History.prototype.start = function start() {\n      var _this = this;\n\n      this.listener = function (e) {\n        var url = location.pathname + location.search;\n        if (_this.root) {\n          url = url.replace(_this.rootRE, '');\n        }\n        _this.onChange(url, e && e.state, location.hash);\n      };\n      window.addEventListener('popstate', this.listener);\n      this.listener();\n    };\n\n    HTML5History.prototype.stop = function stop() {\n      window.removeEventListener('popstate', this.listener);\n    };\n\n    HTML5History.prototype.go = function go(path, replace, append) {\n      var url = this.formatPath(path, append);\n      if (replace) {\n        history.replaceState({}, '', url);\n      } else {\n        // record scroll position by replacing current state\n        history.replaceState({\n          pos: {\n            x: window.pageXOffset,\n            y: window.pageYOffset\n          }\n        }, '', location.href);\n        // then push new state\n        history.pushState({}, '', url);\n      }\n      var hashMatch = path.match(hashRE);\n      var hash = hashMatch && hashMatch[0];\n      path = url\n      // strip hash so it doesn't mess up params\n      .replace(hashRE, '')\n      // remove root before matching\n      .replace(this.rootRE, '');\n      this.onChange(path, null, hash);\n    };\n\n    HTML5History.prototype.formatPath = function formatPath(path, append) {\n      return path.charAt(0) === '/'\n      // absolute path\n      ? this.root ? this.root + '/' + path.replace(/^\\//, '') : path : resolvePath(this.base || location.pathname, path, append);\n    };\n\n    return HTML5History;\n  })();\n\n  var HashHistory = (function () {\n    function HashHistory(_ref) {\n      var hashbang = _ref.hashbang;\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, HashHistory);\n\n      this.hashbang = hashbang;\n      this.onChange = onChange;\n    }\n\n    HashHistory.prototype.start = function start() {\n      var self = this;\n      this.listener = function () {\n        var path = location.hash;\n        var raw = path.replace(/^#!?/, '');\n        // always\n        if (raw.charAt(0) !== '/') {\n          raw = '/' + raw;\n        }\n        var formattedPath = self.formatPath(raw);\n        if (formattedPath !== path) {\n          location.replace(formattedPath);\n          return;\n        }\n        // determine query\n        // note it's possible to have queries in both the actual URL\n        // and the hash fragment itself.\n        var query = location.search && path.indexOf('?') > -1 ? '&' + location.search.slice(1) : location.search;\n        self.onChange(path.replace(/^#!?/, '') + query);\n      };\n      window.addEventListener('hashchange', this.listener);\n      this.listener();\n    };\n\n    HashHistory.prototype.stop = function stop() {\n      window.removeEventListener('hashchange', this.listener);\n    };\n\n    HashHistory.prototype.go = function go(path, replace, append) {\n      path = this.formatPath(path, append);\n      if (replace) {\n        location.replace(path);\n      } else {\n        location.hash = path;\n      }\n    };\n\n    HashHistory.prototype.formatPath = function formatPath(path, append) {\n      var isAbsoloute = path.charAt(0) === '/';\n      var prefix = '#' + (this.hashbang ? '!' : '');\n      return isAbsoloute ? prefix + path : prefix + resolvePath(location.hash.replace(/^#!?/, ''), path, append);\n    };\n\n    return HashHistory;\n  })();\n\n  var AbstractHistory = (function () {\n    function AbstractHistory(_ref) {\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, AbstractHistory);\n\n      this.onChange = onChange;\n      this.currentPath = '/';\n    }\n\n    AbstractHistory.prototype.start = function start() {\n      this.onChange('/');\n    };\n\n    AbstractHistory.prototype.stop = function stop() {\n      // noop\n    };\n\n    AbstractHistory.prototype.go = function go(path, replace, append) {\n      path = this.currentPath = this.formatPath(path, append);\n      this.onChange(path);\n    };\n\n    AbstractHistory.prototype.formatPath = function formatPath(path, append) {\n      return path.charAt(0) === '/' ? path : resolvePath(this.currentPath, path, append);\n    };\n\n    return AbstractHistory;\n  })();\n\n  /**\n   * Determine the reusability of an existing router view.\n   *\n   * @param {Directive} view\n   * @param {Object} handler\n   * @param {Transition} transition\n   */\n\n  function canReuse(view, handler, transition) {\n    var component = view.childVM;\n    if (!component || !handler) {\n      return false;\n    }\n    // important: check view.Component here because it may\n    // have been changed in activate hook\n    if (view.Component !== handler.component) {\n      return false;\n    }\n    var canReuseFn = getRouteConfig(component, 'canReuse');\n    return typeof canReuseFn === 'boolean' ? canReuseFn : canReuseFn ? canReuseFn.call(component, {\n      to: transition.to,\n      from: transition.from\n    }) : true; // defaults to true\n  }\n\n  /**\n   * Check if a component can deactivate.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function canDeactivate(view, transition, next) {\n    var fromComponent = view.childVM;\n    var hook = getRouteConfig(fromComponent, 'canDeactivate');\n    if (!hook) {\n      next();\n    } else {\n      transition.callHook(hook, fromComponent, next, {\n        expectBoolean: true\n      });\n    }\n  }\n\n  /**\n   * Check if a component can activate.\n   *\n   * @param {Object} handler\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function canActivate(handler, transition, next) {\n    resolveAsyncComponent(handler, function (Component) {\n      // have to check due to async-ness\n      if (transition.aborted) {\n        return;\n      }\n      // determine if this component can be activated\n      var hook = getRouteConfig(Component, 'canActivate');\n      if (!hook) {\n        next();\n      } else {\n        transition.callHook(hook, null, next, {\n          expectBoolean: true\n        });\n      }\n    });\n  }\n\n  /**\n   * Call deactivate hooks for existing router-views.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function deactivate(view, transition, next) {\n    var component = view.childVM;\n    var hook = getRouteConfig(component, 'deactivate');\n    if (!hook) {\n      next();\n    } else {\n      transition.callHooks(hook, component, next);\n    }\n  }\n\n  /**\n   * Activate / switch component for a router-view.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Number} depth\n   * @param {Function} [cb]\n   */\n\n  function activate(view, transition, depth, cb, reuse) {\n    var handler = transition.activateQueue[depth];\n    if (!handler) {\n      saveChildView(view);\n      if (view._bound) {\n        view.setComponent(null);\n      }\n      cb && cb();\n      return;\n    }\n\n    var Component = view.Component = handler.component;\n    var activateHook = getRouteConfig(Component, 'activate');\n    var dataHook = getRouteConfig(Component, 'data');\n    var waitForData = getRouteConfig(Component, 'waitForData');\n\n    view.depth = depth;\n    view.activated = false;\n\n    var component = undefined;\n    var loading = !!(dataHook && !waitForData);\n\n    // \"reuse\" is a flag passed down when the parent view is\n    // either reused via keep-alive or as a child of a kept-alive view.\n    // of course we can only reuse if the current kept-alive instance\n    // is of the correct type.\n    reuse = reuse && view.childVM && view.childVM.constructor === Component;\n\n    if (reuse) {\n      // just reuse\n      component = view.childVM;\n      component.$loadingRouteData = loading;\n    } else {\n      saveChildView(view);\n\n      // unbuild current component. this step also destroys\n      // and removes all nested child views.\n      view.unbuild(true);\n\n      // build the new component. this will also create the\n      // direct child view of the current one. it will register\n      // itself as view.childView.\n      component = view.build({\n        _meta: {\n          $loadingRouteData: loading\n        },\n        created: function created() {\n          this._routerView = view;\n        }\n      });\n\n      // handle keep-alive.\n      // when a kept-alive child vm is restored, we need to\n      // add its cached child views into the router's view list,\n      // and also properly update current view's child view.\n      if (view.keepAlive) {\n        component.$loadingRouteData = loading;\n        var cachedChildView = component._keepAliveRouterView;\n        if (cachedChildView) {\n          view.childView = cachedChildView;\n          component._keepAliveRouterView = null;\n        }\n      }\n    }\n\n    // cleanup the component in case the transition is aborted\n    // before the component is ever inserted.\n    var cleanup = function cleanup() {\n      component.$destroy();\n    };\n\n    // actually insert the component and trigger transition\n    var insert = function insert() {\n      if (reuse) {\n        cb && cb();\n        return;\n      }\n      var router = transition.router;\n      if (router._rendered || router._transitionOnLoad) {\n        view.transition(component);\n      } else {\n        // no transition on first render, manual transition\n        /* istanbul ignore if */\n        if (view.setCurrent) {\n          // 0.12 compat\n          view.setCurrent(component);\n        } else {\n          // 1.0\n          view.childVM = component;\n        }\n        component.$before(view.anchor, null, false);\n      }\n      cb && cb();\n    };\n\n    var afterData = function afterData() {\n      // activate the child view\n      if (view.childView) {\n        activate(view.childView, transition, depth + 1, null, reuse || view.keepAlive);\n      }\n      insert();\n    };\n\n    // called after activation hook is resolved\n    var afterActivate = function afterActivate() {\n      view.activated = true;\n      if (dataHook && waitForData) {\n        // wait until data loaded to insert\n        loadData(component, transition, dataHook, afterData, cleanup);\n      } else {\n        // load data and insert at the same time\n        if (dataHook) {\n          loadData(component, transition, dataHook);\n        }\n        afterData();\n      }\n    };\n\n    if (activateHook) {\n      transition.callHooks(activateHook, component, afterActivate, {\n        cleanup: cleanup,\n        postActivate: true\n      });\n    } else {\n      afterActivate();\n    }\n  }\n\n  /**\n   * Reuse a view, just reload data if necessary.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   */\n\n  function reuse(view, transition) {\n    var component = view.childVM;\n    var dataHook = getRouteConfig(component, 'data');\n    if (dataHook) {\n      loadData(component, transition, dataHook);\n    }\n  }\n\n  /**\n   * Asynchronously load and apply data to component.\n   *\n   * @param {Vue} component\n   * @param {Transition} transition\n   * @param {Function} hook\n   * @param {Function} cb\n   * @param {Function} cleanup\n   */\n\n  function loadData(component, transition, hook, cb, cleanup) {\n    component.$loadingRouteData = true;\n    transition.callHooks(hook, component, function () {\n      component.$loadingRouteData = false;\n      component.$emit('route-data-loaded', component);\n      cb && cb();\n    }, {\n      cleanup: cleanup,\n      postActivate: true,\n      processData: function processData(data) {\n        // handle promise sugar syntax\n        var promises = [];\n        if (isPlainObject(data)) {\n          Object.keys(data).forEach(function (key) {\n            var val = data[key];\n            if (isPromise(val)) {\n              promises.push(val.then(function (resolvedVal) {\n                component.$set(key, resolvedVal);\n              }));\n            } else {\n              component.$set(key, val);\n            }\n          });\n        }\n        if (promises.length) {\n          return promises[0].constructor.all(promises);\n        }\n      }\n    });\n  }\n\n  /**\n   * Save the child view for a kept-alive view so that\n   * we can restore it when it is switched back to.\n   *\n   * @param {Directive} view\n   */\n\n  function saveChildView(view) {\n    if (view.keepAlive && view.childVM && view.childView) {\n      view.childVM._keepAliveRouterView = view.childView;\n    }\n    view.childView = null;\n  }\n\n  /**\n   * Check plain object.\n   *\n   * @param {*} val\n   */\n\n  function isPlainObject(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n  }\n\n  /**\n   * A RouteTransition object manages the pipeline of a\n   * router-view switching process. This is also the object\n   * passed into user route hooks.\n   *\n   * @param {Router} router\n   * @param {Route} to\n   * @param {Route} from\n   */\n\n  var RouteTransition = (function () {\n    function RouteTransition(router, to, from) {\n      babelHelpers.classCallCheck(this, RouteTransition);\n\n      this.router = router;\n      this.to = to;\n      this.from = from;\n      this.next = null;\n      this.aborted = false;\n      this.done = false;\n    }\n\n    /**\n     * Abort current transition and return to previous location.\n     */\n\n    RouteTransition.prototype.abort = function abort() {\n      if (!this.aborted) {\n        this.aborted = true;\n        // if the root path throws an error during validation\n        // on initial load, it gets caught in an infinite loop.\n        var abortingOnLoad = !this.from.path && this.to.path === '/';\n        if (!abortingOnLoad) {\n          this.router.replace(this.from.path || '/');\n        }\n      }\n    };\n\n    /**\n     * Abort current transition and redirect to a new location.\n     *\n     * @param {String} path\n     */\n\n    RouteTransition.prototype.redirect = function redirect(path) {\n      if (!this.aborted) {\n        this.aborted = true;\n        if (typeof path === 'string') {\n          path = mapParams(path, this.to.params, this.to.query);\n        } else {\n          path.params = path.params || this.to.params;\n          path.query = path.query || this.to.query;\n        }\n        this.router.replace(path);\n      }\n    };\n\n    /**\n     * A router view transition's pipeline can be described as\n     * follows, assuming we are transitioning from an existing\n     * <router-view> chain [Component A, Component B] to a new\n     * chain [Component A, Component C]:\n     *\n     *  A    A\n     *  | => |\n     *  B    C\n     *\n     * 1. Reusablity phase:\n     *   -> canReuse(A, A)\n     *   -> canReuse(B, C)\n     *   -> determine new queues:\n     *      - deactivation: [B]\n     *      - activation: [C]\n     *\n     * 2. Validation phase:\n     *   -> canDeactivate(B)\n     *   -> canActivate(C)\n     *\n     * 3. Activation phase:\n     *   -> deactivate(B)\n     *   -> activate(C)\n     *\n     * Each of these steps can be asynchronous, and any\n     * step can potentially abort the transition.\n     *\n     * @param {Function} cb\n     */\n\n    RouteTransition.prototype.start = function start(cb) {\n      var transition = this;\n\n      // determine the queue of views to deactivate\n      var deactivateQueue = [];\n      var view = this.router._rootView;\n      while (view) {\n        deactivateQueue.unshift(view);\n        view = view.childView;\n      }\n      var reverseDeactivateQueue = deactivateQueue.slice().reverse();\n\n      // determine the queue of route handlers to activate\n      var activateQueue = this.activateQueue = toArray(this.to.matched).map(function (match) {\n        return match.handler;\n      });\n\n      // 1. Reusability phase\n      var i = undefined,\n          reuseQueue = undefined;\n      for (i = 0; i < reverseDeactivateQueue.length; i++) {\n        if (!canReuse(reverseDeactivateQueue[i], activateQueue[i], transition)) {\n          break;\n        }\n      }\n      if (i > 0) {\n        reuseQueue = reverseDeactivateQueue.slice(0, i);\n        deactivateQueue = reverseDeactivateQueue.slice(i).reverse();\n        activateQueue = activateQueue.slice(i);\n      }\n\n      // 2. Validation phase\n      transition.runQueue(deactivateQueue, canDeactivate, function () {\n        transition.runQueue(activateQueue, canActivate, function () {\n          transition.runQueue(deactivateQueue, deactivate, function () {\n            // 3. Activation phase\n\n            // Update router current route\n            transition.router._onTransitionValidated(transition);\n\n            // trigger reuse for all reused views\n            reuseQueue && reuseQueue.forEach(function (view) {\n              return reuse(view, transition);\n            });\n\n            // the root of the chain that needs to be replaced\n            // is the top-most non-reusable view.\n            if (deactivateQueue.length) {\n              var _view = deactivateQueue[deactivateQueue.length - 1];\n              var depth = reuseQueue ? reuseQueue.length : 0;\n              activate(_view, transition, depth, cb);\n            } else {\n              cb();\n            }\n          });\n        });\n      });\n    };\n\n    /**\n     * Asynchronously and sequentially apply a function to a\n     * queue.\n     *\n     * @param {Array} queue\n     * @param {Function} fn\n     * @param {Function} cb\n     */\n\n    RouteTransition.prototype.runQueue = function runQueue(queue, fn, cb) {\n      var transition = this;\n      step(0);\n      function step(index) {\n        if (index >= queue.length) {\n          cb();\n        } else {\n          fn(queue[index], transition, function () {\n            step(index + 1);\n          });\n        }\n      }\n    };\n\n    /**\n     * Call a user provided route transition hook and handle\n     * the response (e.g. if the user returns a promise).\n     *\n     * If the user neither expects an argument nor returns a\n     * promise, the hook is assumed to be synchronous.\n     *\n     * @param {Function} hook\n     * @param {*} [context]\n     * @param {Function} [cb]\n     * @param {Object} [options]\n     *                 - {Boolean} expectBoolean\n     *                 - {Boolean} postActive\n     *                 - {Function} processData\n     *                 - {Function} cleanup\n     */\n\n    RouteTransition.prototype.callHook = function callHook(hook, context, cb) {\n      var _ref = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\n      var _ref$expectBoolean = _ref.expectBoolean;\n      var expectBoolean = _ref$expectBoolean === undefined ? false : _ref$expectBoolean;\n      var _ref$postActivate = _ref.postActivate;\n      var postActivate = _ref$postActivate === undefined ? false : _ref$postActivate;\n      var processData = _ref.processData;\n      var cleanup = _ref.cleanup;\n\n      var transition = this;\n      var nextCalled = false;\n\n      // abort the transition\n      var abort = function abort() {\n        cleanup && cleanup();\n        transition.abort();\n      };\n\n      // handle errors\n      var onError = function onError(err) {\n        postActivate ? next() : abort();\n        if (err && !transition.router._suppress) {\n          warn$1('Uncaught error during transition: ');\n          throw err instanceof Error ? err : new Error(err);\n        }\n      };\n\n      // since promise swallows errors, we have to\n      // throw it in the next tick...\n      var onPromiseError = function onPromiseError(err) {\n        try {\n          onError(err);\n        } catch (e) {\n          setTimeout(function () {\n            throw e;\n          }, 0);\n        }\n      };\n\n      // advance the transition to the next step\n      var next = function next() {\n        if (nextCalled) {\n          warn$1('transition.next() should be called only once.');\n          return;\n        }\n        nextCalled = true;\n        if (transition.aborted) {\n          cleanup && cleanup();\n          return;\n        }\n        cb && cb();\n      };\n\n      var nextWithBoolean = function nextWithBoolean(res) {\n        if (typeof res === 'boolean') {\n          res ? next() : abort();\n        } else if (isPromise(res)) {\n          res.then(function (ok) {\n            ok ? next() : abort();\n          }, onPromiseError);\n        } else if (!hook.length) {\n          next();\n        }\n      };\n\n      var nextWithData = function nextWithData(data) {\n        var res = undefined;\n        try {\n          res = processData(data);\n        } catch (err) {\n          return onError(err);\n        }\n        if (isPromise(res)) {\n          res.then(next, onPromiseError);\n        } else {\n          next();\n        }\n      };\n\n      // expose a clone of the transition object, so that each\n      // hook gets a clean copy and prevent the user from\n      // messing with the internals.\n      var exposed = {\n        to: transition.to,\n        from: transition.from,\n        abort: abort,\n        next: processData ? nextWithData : next,\n        redirect: function redirect() {\n          transition.redirect.apply(transition, arguments);\n        }\n      };\n\n      // actually call the hook\n      var res = undefined;\n      try {\n        res = hook.call(context, exposed);\n      } catch (err) {\n        return onError(err);\n      }\n\n      if (expectBoolean) {\n        // boolean hooks\n        nextWithBoolean(res);\n      } else if (isPromise(res)) {\n        // promise\n        if (processData) {\n          res.then(nextWithData, onPromiseError);\n        } else {\n          res.then(next, onPromiseError);\n        }\n      } else if (processData && isPlainOjbect(res)) {\n        // data promise sugar\n        nextWithData(res);\n      } else if (!hook.length) {\n        next();\n      }\n    };\n\n    /**\n     * Call a single hook or an array of async hooks in series.\n     *\n     * @param {Array} hooks\n     * @param {*} context\n     * @param {Function} cb\n     * @param {Object} [options]\n     */\n\n    RouteTransition.prototype.callHooks = function callHooks(hooks, context, cb, options) {\n      var _this = this;\n\n      if (Array.isArray(hooks)) {\n        this.runQueue(hooks, function (hook, _, next) {\n          if (!_this.aborted) {\n            _this.callHook(hook, context, next, options);\n          }\n        }, cb);\n      } else {\n        this.callHook(hooks, context, cb, options);\n      }\n    };\n\n    return RouteTransition;\n  })();\n\n  function isPlainOjbect(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n  }\n\n  function toArray(val) {\n    return val ? Array.prototype.slice.call(val) : [];\n  }\n\n  var internalKeysRE = /^(component|subRoutes|fullPath)$/;\n\n  /**\n   * Route Context Object\n   *\n   * @param {String} path\n   * @param {Router} router\n   */\n\n  var Route = function Route(path, router) {\n    var _this = this;\n\n    babelHelpers.classCallCheck(this, Route);\n\n    var matched = router._recognizer.recognize(path);\n    if (matched) {\n      // copy all custom fields from route configs\n      [].forEach.call(matched, function (match) {\n        for (var key in match.handler) {\n          if (!internalKeysRE.test(key)) {\n            _this[key] = match.handler[key];\n          }\n        }\n      });\n      // set query and params\n      this.query = matched.queryParams;\n      this.params = [].reduce.call(matched, function (prev, cur) {\n        if (cur.params) {\n          for (var key in cur.params) {\n            prev[key] = cur.params[key];\n          }\n        }\n        return prev;\n      }, {});\n    }\n    // expose path and router\n    this.path = path;\n    // for internal use\n    this.matched = matched || router._notFoundHandler;\n    // internal reference to router\n    Object.defineProperty(this, 'router', {\n      enumerable: false,\n      value: router\n    });\n    // Important: freeze self to prevent observation\n    Object.freeze(this);\n  };\n\n  function applyOverride (Vue) {\n    var _Vue$util = Vue.util;\n    var extend = _Vue$util.extend;\n    var isArray = _Vue$util.isArray;\n    var defineReactive = _Vue$util.defineReactive;\n\n    // override Vue's init and destroy process to keep track of router instances\n    var init = Vue.prototype._init;\n    Vue.prototype._init = function (options) {\n      options = options || {};\n      var root = options._parent || options.parent || this;\n      var router = root.$router;\n      var route = root.$route;\n      if (router) {\n        // expose router\n        this.$router = router;\n        router._children.push(this);\n        /* istanbul ignore if */\n        if (this._defineMeta) {\n          // 0.12\n          this._defineMeta('$route', route);\n        } else {\n          // 1.0\n          defineReactive(this, '$route', route);\n        }\n      }\n      init.call(this, options);\n    };\n\n    var destroy = Vue.prototype._destroy;\n    Vue.prototype._destroy = function () {\n      if (!this._isBeingDestroyed && this.$router) {\n        this.$router._children.$remove(this);\n      }\n      destroy.apply(this, arguments);\n    };\n\n    // 1.0 only: enable route mixins\n    var strats = Vue.config.optionMergeStrategies;\n    var hooksToMergeRE = /^(data|activate|deactivate)$/;\n\n    if (strats) {\n      strats.route = function (parentVal, childVal) {\n        if (!childVal) return parentVal;\n        if (!parentVal) return childVal;\n        var ret = {};\n        extend(ret, parentVal);\n        for (var key in childVal) {\n          var a = ret[key];\n          var b = childVal[key];\n          // for data, activate and deactivate, we need to merge them into\n          // arrays similar to lifecycle hooks.\n          if (a && hooksToMergeRE.test(key)) {\n            ret[key] = (isArray(a) ? a : [a]).concat(b);\n          } else {\n            ret[key] = b;\n          }\n        }\n        return ret;\n      };\n    }\n  }\n\n  function View (Vue) {\n\n    var _ = Vue.util;\n    var componentDef =\n    // 0.12\n    Vue.directive('_component') ||\n    // 1.0\n    Vue.internalDirectives.component;\n    // <router-view> extends the internal component directive\n    var viewDef = _.extend({}, componentDef);\n\n    // with some overrides\n    _.extend(viewDef, {\n\n      _isRouterView: true,\n\n      bind: function bind() {\n        var route = this.vm.$route;\n        /* istanbul ignore if */\n        if (!route) {\n          warn$1('<router-view> can only be used inside a ' + 'router-enabled app.');\n          return;\n        }\n        // force dynamic directive so v-component doesn't\n        // attempt to build right now\n        this._isDynamicLiteral = true;\n        // finally, init by delegating to v-component\n        componentDef.bind.call(this);\n\n        // locate the parent view\n        var parentView = undefined;\n        var parent = this.vm;\n        while (parent) {\n          if (parent._routerView) {\n            parentView = parent._routerView;\n            break;\n          }\n          parent = parent.$parent;\n        }\n        if (parentView) {\n          // register self as a child of the parent view,\n          // instead of activating now. This is so that the\n          // child's activate hook is called after the\n          // parent's has resolved.\n          this.parentView = parentView;\n          parentView.childView = this;\n        } else {\n          // this is the root view!\n          var router = route.router;\n          router._rootView = this;\n        }\n\n        // handle late-rendered view\n        // two possibilities:\n        // 1. root view rendered after transition has been\n        //    validated;\n        // 2. child view rendered after parent view has been\n        //    activated.\n        var transition = route.router._currentTransition;\n        if (!parentView && transition.done || parentView && parentView.activated) {\n          var depth = parentView ? parentView.depth + 1 : 0;\n          activate(this, transition, depth);\n        }\n      },\n\n      unbind: function unbind() {\n        if (this.parentView) {\n          this.parentView.childView = null;\n        }\n        componentDef.unbind.call(this);\n      }\n    });\n\n    Vue.elementDirective('router-view', viewDef);\n  }\n\n  var trailingSlashRE = /\\/$/;\n  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n  var queryStringRE = /\\?.*$/;\n\n  // install v-link, which provides navigation support for\n  // HTML5 history mode\n  function Link (Vue) {\n    var _Vue$util = Vue.util;\n    var _bind = _Vue$util.bind;\n    var isObject = _Vue$util.isObject;\n    var addClass = _Vue$util.addClass;\n    var removeClass = _Vue$util.removeClass;\n\n    var onPriority = Vue.directive('on').priority;\n    var LINK_UPDATE = '__vue-router-link-update__';\n\n    var activeId = 0;\n\n    Vue.directive('link-active', {\n      priority: 9999,\n      bind: function bind() {\n        var _this = this;\n\n        var id = String(activeId++);\n        // collect v-links contained within this element.\n        // we need do this here before the parent-child relationship\n        // gets messed up by terminal directives (if, for, components)\n        var childLinks = this.el.querySelectorAll('[v-link]');\n        for (var i = 0, l = childLinks.length; i < l; i++) {\n          var link = childLinks[i];\n          var existingId = link.getAttribute(LINK_UPDATE);\n          var value = existingId ? existingId + ',' + id : id;\n          // leave a mark on the link element which can be persisted\n          // through fragment clones.\n          link.setAttribute(LINK_UPDATE, value);\n        }\n        this.vm.$on(LINK_UPDATE, this.cb = function (link, path) {\n          if (link.activeIds.indexOf(id) > -1) {\n            link.updateClasses(path, _this.el);\n          }\n        });\n      },\n      unbind: function unbind() {\n        this.vm.$off(LINK_UPDATE, this.cb);\n      }\n    });\n\n    Vue.directive('link', {\n      priority: onPriority - 2,\n\n      bind: function bind() {\n        var vm = this.vm;\n        /* istanbul ignore if */\n        if (!vm.$route) {\n          warn$1('v-link can only be used inside a router-enabled app.');\n          return;\n        }\n        this.router = vm.$route.router;\n        // update things when the route changes\n        this.unwatch = vm.$watch('$route', _bind(this.onRouteUpdate, this));\n        // check v-link-active ids\n        var activeIds = this.el.getAttribute(LINK_UPDATE);\n        if (activeIds) {\n          this.el.removeAttribute(LINK_UPDATE);\n          this.activeIds = activeIds.split(',');\n        }\n        // no need to handle click if link expects to be opened\n        // in a new window/tab.\n        /* istanbul ignore if */\n        if (this.el.tagName === 'A' && this.el.getAttribute('target') === '_blank') {\n          return;\n        }\n        // handle click\n        this.handler = _bind(this.onClick, this);\n        this.el.addEventListener('click', this.handler);\n      },\n\n      update: function update(target) {\n        this.target = target;\n        if (isObject(target)) {\n          this.append = target.append;\n          this.exact = target.exact;\n          this.prevActiveClass = this.activeClass;\n          this.activeClass = target.activeClass;\n        }\n        this.onRouteUpdate(this.vm.$route);\n      },\n\n      onClick: function onClick(e) {\n        // don't redirect with control keys\n        /* istanbul ignore if */\n        if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n        // don't redirect when preventDefault called\n        /* istanbul ignore if */\n        if (e.defaultPrevented) return;\n        // don't redirect on right click\n        /* istanbul ignore if */\n        if (e.button !== 0) return;\n\n        var target = this.target;\n        if (target) {\n          // v-link with expression, just go\n          e.preventDefault();\n          this.router.go(target);\n        } else {\n          // no expression, delegate for an <a> inside\n          var el = e.target;\n          while (el.tagName !== 'A' && el !== this.el) {\n            el = el.parentNode;\n          }\n          if (el.tagName === 'A' && sameOrigin(el)) {\n            e.preventDefault();\n            var path = el.pathname;\n            if (this.router.history.root) {\n              path = path.replace(this.router.history.rootRE, '');\n            }\n            this.router.go({\n              path: path,\n              replace: target && target.replace,\n              append: target && target.append\n            });\n          }\n        }\n      },\n\n      onRouteUpdate: function onRouteUpdate(route) {\n        // router.stringifyPath is dependent on current route\n        // and needs to be called again whenver route changes.\n        var newPath = this.router.stringifyPath(this.target);\n        if (this.path !== newPath) {\n          this.path = newPath;\n          this.updateActiveMatch();\n          this.updateHref();\n        }\n        if (this.activeIds) {\n          this.vm.$emit(LINK_UPDATE, this, route.path);\n        } else {\n          this.updateClasses(route.path, this.el);\n        }\n      },\n\n      updateActiveMatch: function updateActiveMatch() {\n        this.activeRE = this.path && !this.exact ? new RegExp('^' + this.path.replace(/\\/$/, '').replace(queryStringRE, '').replace(regexEscapeRE, '\\\\$&') + '(\\\\/|$)') : null;\n      },\n\n      updateHref: function updateHref() {\n        if (this.el.tagName !== 'A') {\n          return;\n        }\n        var path = this.path;\n        var router = this.router;\n        var isAbsolute = path.charAt(0) === '/';\n        // do not format non-hash relative paths\n        var href = path && (router.mode === 'hash' || isAbsolute) ? router.history.formatPath(path, this.append) : path;\n        if (href) {\n          this.el.href = href;\n        } else {\n          this.el.removeAttribute('href');\n        }\n      },\n\n      updateClasses: function updateClasses(path, el) {\n        var activeClass = this.activeClass || this.router._linkActiveClass;\n        // clear old class\n        if (this.prevActiveClass && this.prevActiveClass !== activeClass) {\n          toggleClasses(el, this.prevActiveClass, removeClass);\n        }\n        // remove query string before matching\n        var dest = this.path.replace(queryStringRE, '');\n        path = path.replace(queryStringRE, '');\n        // add new class\n        if (this.exact) {\n          if (dest === path ||\n          // also allow additional trailing slash\n          dest.charAt(dest.length - 1) !== '/' && dest === path.replace(trailingSlashRE, '')) {\n            toggleClasses(el, activeClass, addClass);\n          } else {\n            toggleClasses(el, activeClass, removeClass);\n          }\n        } else {\n          if (this.activeRE && this.activeRE.test(path)) {\n            toggleClasses(el, activeClass, addClass);\n          } else {\n            toggleClasses(el, activeClass, removeClass);\n          }\n        }\n      },\n\n      unbind: function unbind() {\n        this.el.removeEventListener('click', this.handler);\n        this.unwatch && this.unwatch();\n      }\n    });\n\n    function sameOrigin(link) {\n      return link.protocol === location.protocol && link.hostname === location.hostname && link.port === location.port;\n    }\n\n    // this function is copied from v-bind:class implementation until\n    // we properly expose it...\n    function toggleClasses(el, key, fn) {\n      key = key.trim();\n      if (key.indexOf(' ') === -1) {\n        fn(el, key);\n        return;\n      }\n      var keys = key.split(/\\s+/);\n      for (var i = 0, l = keys.length; i < l; i++) {\n        fn(el, keys[i]);\n      }\n    }\n  }\n\n  var historyBackends = {\n    abstract: AbstractHistory,\n    hash: HashHistory,\n    html5: HTML5History\n  };\n\n  // late bind during install\n  var Vue = undefined;\n\n  /**\n   * Router constructor\n   *\n   * @param {Object} [options]\n   */\n\n  var Router = (function () {\n    function Router() {\n      var _this = this;\n\n      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n      var _ref$hashbang = _ref.hashbang;\n      var hashbang = _ref$hashbang === undefined ? true : _ref$hashbang;\n      var _ref$abstract = _ref.abstract;\n      var abstract = _ref$abstract === undefined ? false : _ref$abstract;\n      var _ref$history = _ref.history;\n      var history = _ref$history === undefined ? false : _ref$history;\n      var _ref$saveScrollPosition = _ref.saveScrollPosition;\n      var saveScrollPosition = _ref$saveScrollPosition === undefined ? false : _ref$saveScrollPosition;\n      var _ref$transitionOnLoad = _ref.transitionOnLoad;\n      var transitionOnLoad = _ref$transitionOnLoad === undefined ? false : _ref$transitionOnLoad;\n      var _ref$suppressTransitionError = _ref.suppressTransitionError;\n      var suppressTransitionError = _ref$suppressTransitionError === undefined ? false : _ref$suppressTransitionError;\n      var _ref$root = _ref.root;\n      var root = _ref$root === undefined ? null : _ref$root;\n      var _ref$linkActiveClass = _ref.linkActiveClass;\n      var linkActiveClass = _ref$linkActiveClass === undefined ? 'v-link-active' : _ref$linkActiveClass;\n      babelHelpers.classCallCheck(this, Router);\n\n      /* istanbul ignore if */\n      if (!Router.installed) {\n        throw new Error('Please install the Router with Vue.use() before ' + 'creating an instance.');\n      }\n\n      // Vue instances\n      this.app = null;\n      this._children = [];\n\n      // route recognizer\n      this._recognizer = new RouteRecognizer();\n      this._guardRecognizer = new RouteRecognizer();\n\n      // state\n      this._started = false;\n      this._startCb = null;\n      this._currentRoute = {};\n      this._currentTransition = null;\n      this._previousTransition = null;\n      this._notFoundHandler = null;\n      this._notFoundRedirect = null;\n      this._beforeEachHooks = [];\n      this._afterEachHooks = [];\n\n      // trigger transition on initial render?\n      this._rendered = false;\n      this._transitionOnLoad = transitionOnLoad;\n\n      // history mode\n      this._root = root;\n      this._abstract = abstract;\n      this._hashbang = hashbang;\n\n      // check if HTML5 history is available\n      var hasPushState = typeof window !== 'undefined' && window.history && window.history.pushState;\n      this._history = history && hasPushState;\n      this._historyFallback = history && !hasPushState;\n\n      // create history object\n      var inBrowser = Vue.util.inBrowser;\n      this.mode = !inBrowser || this._abstract ? 'abstract' : this._history ? 'html5' : 'hash';\n\n      var History = historyBackends[this.mode];\n      this.history = new History({\n        root: root,\n        hashbang: this._hashbang,\n        onChange: function onChange(path, state, anchor) {\n          _this._match(path, state, anchor);\n        }\n      });\n\n      // other options\n      this._saveScrollPosition = saveScrollPosition;\n      this._linkActiveClass = linkActiveClass;\n      this._suppress = suppressTransitionError;\n    }\n\n    /**\n     * Allow directly passing components to a route\n     * definition.\n     *\n     * @param {String} path\n     * @param {Object} handler\n     */\n\n    // API ===================================================\n\n    /**\n    * Register a map of top-level paths.\n    *\n    * @param {Object} map\n    */\n\n    Router.prototype.map = function map(_map) {\n      for (var route in _map) {\n        this.on(route, _map[route]);\n      }\n      return this;\n    };\n\n    /**\n     * Register a single root-level path\n     *\n     * @param {String} rootPath\n     * @param {Object} handler\n     *                 - {String} component\n     *                 - {Object} [subRoutes]\n     *                 - {Boolean} [forceRefresh]\n     *                 - {Function} [before]\n     *                 - {Function} [after]\n     */\n\n    Router.prototype.on = function on(rootPath, handler) {\n      if (rootPath === '*') {\n        this._notFound(handler);\n      } else {\n        this._addRoute(rootPath, handler, []);\n      }\n      return this;\n    };\n\n    /**\n     * Set redirects.\n     *\n     * @param {Object} map\n     */\n\n    Router.prototype.redirect = function redirect(map) {\n      for (var path in map) {\n        this._addRedirect(path, map[path]);\n      }\n      return this;\n    };\n\n    /**\n     * Set aliases.\n     *\n     * @param {Object} map\n     */\n\n    Router.prototype.alias = function alias(map) {\n      for (var path in map) {\n        this._addAlias(path, map[path]);\n      }\n      return this;\n    };\n\n    /**\n     * Set global before hook.\n     *\n     * @param {Function} fn\n     */\n\n    Router.prototype.beforeEach = function beforeEach(fn) {\n      this._beforeEachHooks.push(fn);\n      return this;\n    };\n\n    /**\n     * Set global after hook.\n     *\n     * @param {Function} fn\n     */\n\n    Router.prototype.afterEach = function afterEach(fn) {\n      this._afterEachHooks.push(fn);\n      return this;\n    };\n\n    /**\n     * Navigate to a given path.\n     * The path can be an object describing a named path in\n     * the format of { name: '...', params: {}, query: {}}\n     * The path is assumed to be already decoded, and will\n     * be resolved against root (if provided)\n     *\n     * @param {String|Object} path\n     * @param {Boolean} [replace]\n     */\n\n    Router.prototype.go = function go(path) {\n      var replace = false;\n      var append = false;\n      if (Vue.util.isObject(path)) {\n        replace = path.replace;\n        append = path.append;\n      }\n      path = this.stringifyPath(path);\n      if (path) {\n        this.history.go(path, replace, append);\n      }\n    };\n\n    /**\n     * Short hand for replacing current path\n     *\n     * @param {String} path\n     */\n\n    Router.prototype.replace = function replace(path) {\n      if (typeof path === 'string') {\n        path = { path: path };\n      }\n      path.replace = true;\n      this.go(path);\n    };\n\n    /**\n     * Start the router.\n     *\n     * @param {VueConstructor} App\n     * @param {String|Element} container\n     * @param {Function} [cb]\n     */\n\n    Router.prototype.start = function start(App, container, cb) {\n      /* istanbul ignore if */\n      if (this._started) {\n        warn$1('already started.');\n        return;\n      }\n      this._started = true;\n      this._startCb = cb;\n      if (!this.app) {\n        /* istanbul ignore if */\n        if (!App || !container) {\n          throw new Error('Must start vue-router with a component and a ' + 'root container.');\n        }\n        /* istanbul ignore if */\n        if (App instanceof Vue) {\n          throw new Error('Must start vue-router with a component, not a ' + 'Vue instance.');\n        }\n        this._appContainer = container;\n        var Ctor = this._appConstructor = typeof App === 'function' ? App : Vue.extend(App);\n        // give it a name for better debugging\n        Ctor.options.name = Ctor.options.name || 'RouterApp';\n      }\n\n      // handle history fallback in browsers that do not\n      // support HTML5 history API\n      if (this._historyFallback) {\n        var _location = window.location;\n        var _history = new HTML5History({ root: this._root });\n        var path = _history.root ? _location.pathname.replace(_history.rootRE, '') : _location.pathname;\n        if (path && path !== '/') {\n          _location.assign((_history.root || '') + '/' + this.history.formatPath(path) + _location.search);\n          return;\n        }\n      }\n\n      this.history.start();\n    };\n\n    /**\n     * Stop listening to route changes.\n     */\n\n    Router.prototype.stop = function stop() {\n      this.history.stop();\n      this._started = false;\n    };\n\n    /**\n     * Normalize named route object / string paths into\n     * a string.\n     *\n     * @param {Object|String|Number} path\n     * @return {String}\n     */\n\n    Router.prototype.stringifyPath = function stringifyPath(path) {\n      var generatedPath = '';\n      if (path && typeof path === 'object') {\n        if (path.name) {\n          var extend = Vue.util.extend;\n          var currentParams = this._currentTransition && this._currentTransition.to.params;\n          var targetParams = path.params || {};\n          var params = currentParams ? extend(extend({}, currentParams), targetParams) : targetParams;\n          generatedPath = encodeURI(this._recognizer.generate(path.name, params));\n        } else if (path.path) {\n          generatedPath = encodeURI(path.path);\n        }\n        if (path.query) {\n          // note: the generated query string is pre-URL-encoded by the recognizer\n          var query = this._recognizer.generateQueryString(path.query);\n          if (generatedPath.indexOf('?') > -1) {\n            generatedPath += '&' + query.slice(1);\n          } else {\n            generatedPath += query;\n          }\n        }\n      } else {\n        generatedPath = encodeURI(path ? path + '' : '');\n      }\n      return generatedPath;\n    };\n\n    // Internal methods ======================================\n\n    /**\n    * Add a route containing a list of segments to the internal\n    * route recognizer. Will be called recursively to add all\n    * possible sub-routes.\n    *\n    * @param {String} path\n    * @param {Object} handler\n    * @param {Array} segments\n    */\n\n    Router.prototype._addRoute = function _addRoute(path, handler, segments) {\n      guardComponent(path, handler);\n      handler.path = path;\n      handler.fullPath = (segments.reduce(function (path, segment) {\n        return path + segment.path;\n      }, '') + path).replace('//', '/');\n      segments.push({\n        path: path,\n        handler: handler\n      });\n      this._recognizer.add(segments, {\n        as: handler.name\n      });\n      // add sub routes\n      if (handler.subRoutes) {\n        for (var subPath in handler.subRoutes) {\n          // recursively walk all sub routes\n          this._addRoute(subPath, handler.subRoutes[subPath],\n          // pass a copy in recursion to avoid mutating\n          // across branches\n          segments.slice());\n        }\n      }\n    };\n\n    /**\n     * Set the notFound route handler.\n     *\n     * @param {Object} handler\n     */\n\n    Router.prototype._notFound = function _notFound(handler) {\n      guardComponent('*', handler);\n      this._notFoundHandler = [{ handler: handler }];\n    };\n\n    /**\n     * Add a redirect record.\n     *\n     * @param {String} path\n     * @param {String} redirectPath\n     */\n\n    Router.prototype._addRedirect = function _addRedirect(path, redirectPath) {\n      if (path === '*') {\n        this._notFoundRedirect = redirectPath;\n      } else {\n        this._addGuard(path, redirectPath, this.replace);\n      }\n    };\n\n    /**\n     * Add an alias record.\n     *\n     * @param {String} path\n     * @param {String} aliasPath\n     */\n\n    Router.prototype._addAlias = function _addAlias(path, aliasPath) {\n      this._addGuard(path, aliasPath, this._match);\n    };\n\n    /**\n     * Add a path guard.\n     *\n     * @param {String} path\n     * @param {String} mappedPath\n     * @param {Function} handler\n     */\n\n    Router.prototype._addGuard = function _addGuard(path, mappedPath, _handler) {\n      var _this2 = this;\n\n      this._guardRecognizer.add([{\n        path: path,\n        handler: function handler(match, query) {\n          var realPath = mapParams(mappedPath, match.params, query);\n          _handler.call(_this2, realPath);\n        }\n      }]);\n    };\n\n    /**\n     * Check if a path matches any redirect records.\n     *\n     * @param {String} path\n     * @return {Boolean} - if true, will skip normal match.\n     */\n\n    Router.prototype._checkGuard = function _checkGuard(path) {\n      var matched = this._guardRecognizer.recognize(path, true);\n      if (matched) {\n        matched[0].handler(matched[0], matched.queryParams);\n        return true;\n      } else if (this._notFoundRedirect) {\n        matched = this._recognizer.recognize(path);\n        if (!matched) {\n          this.replace(this._notFoundRedirect);\n          return true;\n        }\n      }\n    };\n\n    /**\n     * Match a URL path and set the route context on vm,\n     * triggering view updates.\n     *\n     * @param {String} path\n     * @param {Object} [state]\n     * @param {String} [anchor]\n     */\n\n    Router.prototype._match = function _match(path, state, anchor) {\n      var _this3 = this;\n\n      if (this._checkGuard(path)) {\n        return;\n      }\n\n      var currentRoute = this._currentRoute;\n      var currentTransition = this._currentTransition;\n\n      if (currentTransition) {\n        if (currentTransition.to.path === path) {\n          // do nothing if we have an active transition going to the same path\n          return;\n        } else if (currentRoute.path === path) {\n          // We are going to the same path, but we also have an ongoing but\n          // not-yet-validated transition. Abort that transition and reset to\n          // prev transition.\n          currentTransition.aborted = true;\n          this._currentTransition = this._prevTransition;\n          return;\n        } else {\n          // going to a totally different path. abort ongoing transition.\n          currentTransition.aborted = true;\n        }\n      }\n\n      // construct new route and transition context\n      var route = new Route(path, this);\n      var transition = new RouteTransition(this, route, currentRoute);\n\n      // current transition is updated right now.\n      // however, current route will only be updated after the transition has\n      // been validated.\n      this._prevTransition = currentTransition;\n      this._currentTransition = transition;\n\n      if (!this.app) {\n        (function () {\n          // initial render\n          var router = _this3;\n          _this3.app = new _this3._appConstructor({\n            el: _this3._appContainer,\n            created: function created() {\n              this.$router = router;\n            },\n            _meta: {\n              $route: route\n            }\n          });\n        })();\n      }\n\n      // check global before hook\n      var beforeHooks = this._beforeEachHooks;\n      var startTransition = function startTransition() {\n        transition.start(function () {\n          _this3._postTransition(route, state, anchor);\n        });\n      };\n\n      if (beforeHooks.length) {\n        transition.runQueue(beforeHooks, function (hook, _, next) {\n          if (transition === _this3._currentTransition) {\n            transition.callHook(hook, null, next, {\n              expectBoolean: true\n            });\n          }\n        }, startTransition);\n      } else {\n        startTransition();\n      }\n\n      if (!this._rendered && this._startCb) {\n        this._startCb.call(null);\n      }\n\n      // HACK:\n      // set rendered to true after the transition start, so\n      // that components that are acitvated synchronously know\n      // whether it is the initial render.\n      this._rendered = true;\n    };\n\n    /**\n     * Set current to the new transition.\n     * This is called by the transition object when the\n     * validation of a route has succeeded.\n     *\n     * @param {Transition} transition\n     */\n\n    Router.prototype._onTransitionValidated = function _onTransitionValidated(transition) {\n      // set current route\n      var route = this._currentRoute = transition.to;\n      // update route context for all children\n      if (this.app.$route !== route) {\n        this.app.$route = route;\n        this._children.forEach(function (child) {\n          child.$route = route;\n        });\n      }\n      // call global after hook\n      if (this._afterEachHooks.length) {\n        this._afterEachHooks.forEach(function (hook) {\n          return hook.call(null, {\n            to: transition.to,\n            from: transition.from\n          });\n        });\n      }\n      this._currentTransition.done = true;\n    };\n\n    /**\n     * Handle stuff after the transition.\n     *\n     * @param {Route} route\n     * @param {Object} [state]\n     * @param {String} [anchor]\n     */\n\n    Router.prototype._postTransition = function _postTransition(route, state, anchor) {\n      // handle scroll positions\n      // saved scroll positions take priority\n      // then we check if the path has an anchor\n      var pos = state && state.pos;\n      if (pos && this._saveScrollPosition) {\n        Vue.nextTick(function () {\n          window.scrollTo(pos.x, pos.y);\n        });\n      } else if (anchor) {\n        Vue.nextTick(function () {\n          var el = document.getElementById(anchor.slice(1));\n          if (el) {\n            window.scrollTo(window.scrollX, el.offsetTop);\n          }\n        });\n      }\n    };\n\n    return Router;\n  })();\n\n  function guardComponent(path, handler) {\n    var comp = handler.component;\n    if (Vue.util.isPlainObject(comp)) {\n      comp = handler.component = Vue.extend(comp);\n    }\n    /* istanbul ignore if */\n    if (typeof comp !== 'function') {\n      handler.component = null;\n      warn$1('invalid component for route \"' + path + '\".');\n    }\n  }\n\n  /* Installation */\n\n  Router.installed = false;\n\n  /**\n   * Installation interface.\n   * Install the necessary directives.\n   */\n\n  Router.install = function (externalVue) {\n    /* istanbul ignore if */\n    if (Router.installed) {\n      warn$1('already installed.');\n      return;\n    }\n    Vue = externalVue;\n    applyOverride(Vue);\n    View(Vue);\n    Link(Vue);\n    exports$1.Vue = Vue;\n    Router.installed = true;\n  };\n\n  // auto install\n  /* istanbul ignore if */\n  if (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(Router);\n  }\n\n  return Router;\n\n}));\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\"use strict\";\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  data: function data() {\n    return {};\n  }\n};\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(8)();\n// imports\n\n\n// module\nexports.push([module.i, \"body{color:#333}.nav>a.active{font-weight:700;font-size:1.2em}.view{-webkit-transition:opacity .2s ease;transition:opacity .2s ease}.view.v-enter,.view.v-leave{opacity:0}\", \"\"]);\n\n// exports\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\nmodule.exports = \" <div> <div class=nav> <a v-link=\\\"'/home'\\\">Home</a> <a v-link=\\\"'/hello'\\\">Hello</a> </div> <router-view class=view keep-alive transition transition-mode=out-in> </router-view> </div> \";\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nvar stylesInDom = {},\n\tmemoize = function(fn) {\n\t\tvar memo;\n\t\treturn function () {\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\treturn memo;\n\t\t};\n\t},\n\tisOldIE = memoize(function() {\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\n\t}),\n\tgetHeadElement = memoize(function () {\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t}),\n\tsingletonElement = null,\n\tsingletonCounter = 0,\n\tstyleElementsInsertedAtTop = [];\n\nmodule.exports = function(list, options) {\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the bottom of <head>.\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list);\n\taddStylesToDom(styles, options);\n\n\treturn function update(newList) {\n\t\tvar mayRemove = [];\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction addStylesToDom(styles, options) {\n\tfor(var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles(list) {\n\tvar styles = [];\n\tvar newStyles = {};\n\tfor(var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\tif(!newStyles[id])\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse\n\t\t\tnewStyles[id].parts.push(part);\n\t}\n\treturn styles;\n}\n\nfunction insertStyleElement(options, styleElement) {\n\tvar head = getHeadElement();\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\tif (options.insertAt === \"top\") {\n\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\thead.insertBefore(styleElement, head.firstChild);\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\thead.appendChild(styleElement);\n\t\t}\n\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t} else if (options.insertAt === \"bottom\") {\n\t\thead.appendChild(styleElement);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement(styleElement) {\n\tstyleElement.parentNode.removeChild(styleElement);\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\tif(idx >= 0) {\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement(options) {\n\tvar styleElement = document.createElement(\"style\");\n\tstyleElement.type = \"text/css\";\n\tinsertStyleElement(options, styleElement);\n\treturn styleElement;\n}\n\nfunction addStyle(obj, options) {\n\tvar styleElement, update, remove;\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t} else {\n\t\tstyleElement = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, styleElement);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle(newObj) {\n\t\tif(newObj) {\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\treturn;\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = styleElement.childNodes;\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\tif (childNodes.length) {\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyleElement.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag(styleElement, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\tvar sourceMap = obj.sourceMap;\n\n\tif (media) {\n\t\tstyleElement.setAttribute(\"media\", media);\n\t}\n\n\tif (sourceMap) {\n\t\t// https://developer.chrome.com/devtools/docs/javascript-debugging\n\t\t// this makes source maps inside style tags work properly in Chrome\n\t\tcss += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */';\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = css;\n\t} else {\n\t\twhile(styleElement.firstChild) {\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t}\n\t\tstyleElement.appendChild(document.createTextNode(css));\n\t}\n}\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(7);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// add the styles to the DOM\nvar update = __webpack_require__(10)(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js!./../node_modules/vue-loader/lib/style-rewriter.js!./../node_modules/less-loader/index.js!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./App.vue\", function() {\n\t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js!./../node_modules/vue-loader/lib/style-rewriter.js!./../node_modules/less-loader/index.js!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./App.vue\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() { return this; })();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vue__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vue_router__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vue_router___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_vue_router__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__home___ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Hello__ = __webpack_require__(2);\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"use\"](__WEBPACK_IMPORTED_MODULE_1_vue_router__);\nvar router = new __WEBPACK_IMPORTED_MODULE_1_vue_router__({ linkActiveClass: 'active' });\nrouter.map({\n    '/home': { component: __WEBPACK_IMPORTED_MODULE_2__home___[\"a\" /* default */] },\n    '/hello': { component: __WEBPACK_IMPORTED_MODULE_3__Hello__[\"a\" /* default */] }\n});\nrouter.redirect({\n    '*': '/home'\n});\nrouter.beforeEach(function () {\n    window.scrollTo(0, 0);\n});\nrouter.start(__webpack_require__(4), '#app');\n\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// build.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmory imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmory exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tObject.defineProperty(exports, name, {\n \t\t\tconfigurable: false,\n \t\t\tenumerable: true,\n \t\t\tget: getter\n \t\t});\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 24bad91f02da4dbdccaf","/*!\n * Vue.js v1.0.26\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Vue = factory());\n}(this, function () { 'use strict';\n\n  function set(obj, key, val) {\n    if (hasOwn(obj, key)) {\n      obj[key] = val;\n      return;\n    }\n    if (obj._isVue) {\n      set(obj._data, key, val);\n      return;\n    }\n    var ob = obj.__ob__;\n    if (!ob) {\n      obj[key] = val;\n      return;\n    }\n    ob.convert(key, val);\n    ob.dep.notify();\n    if (ob.vms) {\n      var i = ob.vms.length;\n      while (i--) {\n        var vm = ob.vms[i];\n        vm._proxy(key);\n        vm._digest();\n      }\n    }\n    return val;\n  }\n\n  /**\n   * Delete a property and trigger change if necessary.\n   *\n   * @param {Object} obj\n   * @param {String} key\n   */\n\n  function del(obj, key) {\n    if (!hasOwn(obj, key)) {\n      return;\n    }\n    delete obj[key];\n    var ob = obj.__ob__;\n    if (!ob) {\n      if (obj._isVue) {\n        delete obj._data[key];\n        obj._digest();\n      }\n      return;\n    }\n    ob.dep.notify();\n    if (ob.vms) {\n      var i = ob.vms.length;\n      while (i--) {\n        var vm = ob.vms[i];\n        vm._unproxy(key);\n        vm._digest();\n      }\n    }\n  }\n\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  /**\n   * Check whether the object has the property.\n   *\n   * @param {Object} obj\n   * @param {String} key\n   * @return {Boolean}\n   */\n\n  function hasOwn(obj, key) {\n    return hasOwnProperty.call(obj, key);\n  }\n\n  /**\n   * Check if an expression is a literal value.\n   *\n   * @param {String} exp\n   * @return {Boolean}\n   */\n\n  var literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\n  function isLiteral(exp) {\n    return literalValueRE.test(exp);\n  }\n\n  /**\n   * Check if a string starts with $ or _\n   *\n   * @param {String} str\n   * @return {Boolean}\n   */\n\n  function isReserved(str) {\n    var c = (str + '').charCodeAt(0);\n    return c === 0x24 || c === 0x5F;\n  }\n\n  /**\n   * Guard text output, make sure undefined outputs\n   * empty string\n   *\n   * @param {*} value\n   * @return {String}\n   */\n\n  function _toString(value) {\n    return value == null ? '' : value.toString();\n  }\n\n  /**\n   * Check and convert possible numeric strings to numbers\n   * before setting back to data\n   *\n   * @param {*} value\n   * @return {*|Number}\n   */\n\n  function toNumber(value) {\n    if (typeof value !== 'string') {\n      return value;\n    } else {\n      var parsed = Number(value);\n      return isNaN(parsed) ? value : parsed;\n    }\n  }\n\n  /**\n   * Convert string boolean literals into real booleans.\n   *\n   * @param {*} value\n   * @return {*|Boolean}\n   */\n\n  function toBoolean(value) {\n    return value === 'true' ? true : value === 'false' ? false : value;\n  }\n\n  /**\n   * Strip quotes from a string\n   *\n   * @param {String} str\n   * @return {String | false}\n   */\n\n  function stripQuotes(str) {\n    var a = str.charCodeAt(0);\n    var b = str.charCodeAt(str.length - 1);\n    return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n  }\n\n  /**\n   * Camelize a hyphen-delmited string.\n   *\n   * @param {String} str\n   * @return {String}\n   */\n\n  var camelizeRE = /-(\\w)/g;\n\n  function camelize(str) {\n    return str.replace(camelizeRE, toUpper);\n  }\n\n  function toUpper(_, c) {\n    return c ? c.toUpperCase() : '';\n  }\n\n  /**\n   * Hyphenate a camelCase string.\n   *\n   * @param {String} str\n   * @return {String}\n   */\n\n  var hyphenateRE = /([a-z\\d])([A-Z])/g;\n\n  function hyphenate(str) {\n    return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n  }\n\n  /**\n   * Converts hyphen/underscore/slash delimitered names into\n   * camelized classNames.\n   *\n   * e.g. my-component => MyComponent\n   *      some_else    => SomeElse\n   *      some/comp    => SomeComp\n   *\n   * @param {String} str\n   * @return {String}\n   */\n\n  var classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\n  function classify(str) {\n    return str.replace(classifyRE, toUpper);\n  }\n\n  /**\n   * Simple bind, faster than native\n   *\n   * @param {Function} fn\n   * @param {Object} ctx\n   * @return {Function}\n   */\n\n  function bind(fn, ctx) {\n    return function (a) {\n      var l = arguments.length;\n      return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n    };\n  }\n\n  /**\n   * Convert an Array-like object to a real Array.\n   *\n   * @param {Array-like} list\n   * @param {Number} [start] - start index\n   * @return {Array}\n   */\n\n  function toArray(list, start) {\n    start = start || 0;\n    var i = list.length - start;\n    var ret = new Array(i);\n    while (i--) {\n      ret[i] = list[i + start];\n    }\n    return ret;\n  }\n\n  /**\n   * Mix properties into target object.\n   *\n   * @param {Object} to\n   * @param {Object} from\n   */\n\n  function extend(to, from) {\n    var keys = Object.keys(from);\n    var i = keys.length;\n    while (i--) {\n      to[keys[i]] = from[keys[i]];\n    }\n    return to;\n  }\n\n  /**\n   * Quick object check - this is primarily used to tell\n   * Objects from primitive values when we know the value\n   * is a JSON-compliant type.\n   *\n   * @param {*} obj\n   * @return {Boolean}\n   */\n\n  function isObject(obj) {\n    return obj !== null && typeof obj === 'object';\n  }\n\n  /**\n   * Strict object type check. Only returns true\n   * for plain JavaScript objects.\n   *\n   * @param {*} obj\n   * @return {Boolean}\n   */\n\n  var toString = Object.prototype.toString;\n  var OBJECT_STRING = '[object Object]';\n\n  function isPlainObject(obj) {\n    return toString.call(obj) === OBJECT_STRING;\n  }\n\n  /**\n   * Array type check.\n   *\n   * @param {*} obj\n   * @return {Boolean}\n   */\n\n  var isArray = Array.isArray;\n\n  /**\n   * Define a property.\n   *\n   * @param {Object} obj\n   * @param {String} key\n   * @param {*} val\n   * @param {Boolean} [enumerable]\n   */\n\n  function def(obj, key, val, enumerable) {\n    Object.defineProperty(obj, key, {\n      value: val,\n      enumerable: !!enumerable,\n      writable: true,\n      configurable: true\n    });\n  }\n\n  /**\n   * Debounce a function so it only gets called after the\n   * input stops arriving after the given wait period.\n   *\n   * @param {Function} func\n   * @param {Number} wait\n   * @return {Function} - the debounced function\n   */\n\n  function _debounce(func, wait) {\n    var timeout, args, context, timestamp, result;\n    var later = function later() {\n      var last = Date.now() - timestamp;\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      }\n    };\n    return function () {\n      context = this;\n      args = arguments;\n      timestamp = Date.now();\n      if (!timeout) {\n        timeout = setTimeout(later, wait);\n      }\n      return result;\n    };\n  }\n\n  /**\n   * Manual indexOf because it's slightly faster than\n   * native.\n   *\n   * @param {Array} arr\n   * @param {*} obj\n   */\n\n  function indexOf(arr, obj) {\n    var i = arr.length;\n    while (i--) {\n      if (arr[i] === obj) return i;\n    }\n    return -1;\n  }\n\n  /**\n   * Make a cancellable version of an async callback.\n   *\n   * @param {Function} fn\n   * @return {Function}\n   */\n\n  function cancellable(fn) {\n    var cb = function cb() {\n      if (!cb.cancelled) {\n        return fn.apply(this, arguments);\n      }\n    };\n    cb.cancel = function () {\n      cb.cancelled = true;\n    };\n    return cb;\n  }\n\n  /**\n   * Check if two values are loosely equal - that is,\n   * if they are plain objects, do they have the same shape?\n   *\n   * @param {*} a\n   * @param {*} b\n   * @return {Boolean}\n   */\n\n  function looseEqual(a, b) {\n    /* eslint-disable eqeqeq */\n    return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n    /* eslint-enable eqeqeq */\n  }\n\n  var hasProto = ('__proto__' in {});\n\n  // Browser environment sniffing\n  var inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\n  // detect devtools\n  var devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n  // UA sniffing for working around browser-specific quirks\n  var UA = inBrowser && window.navigator.userAgent.toLowerCase();\n  var isIE = UA && UA.indexOf('trident') > 0;\n  var isIE9 = UA && UA.indexOf('msie 9.0') > 0;\n  var isAndroid = UA && UA.indexOf('android') > 0;\n  var isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\n  var iosVersionMatch = isIos && UA.match(/os ([\\d_]+)/);\n  var iosVersion = iosVersionMatch && iosVersionMatch[1].split('_');\n\n  // detecting iOS UIWebView by indexedDB\n  var hasMutationObserverBug = iosVersion && Number(iosVersion[0]) >= 9 && Number(iosVersion[1]) >= 3 && !window.indexedDB;\n\n  var transitionProp = undefined;\n  var transitionEndEvent = undefined;\n  var animationProp = undefined;\n  var animationEndEvent = undefined;\n\n  // Transition property/event sniffing\n  if (inBrowser && !isIE9) {\n    var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n    var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n    transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n    transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n    animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n    animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n  }\n\n  /**\n   * Defer a task to execute it asynchronously. Ideally this\n   * should be executed as a microtask, so we leverage\n   * MutationObserver if it's available, and fallback to\n   * setTimeout(0).\n   *\n   * @param {Function} cb\n   * @param {Object} ctx\n   */\n\n  var nextTick = (function () {\n    var callbacks = [];\n    var pending = false;\n    var timerFunc;\n    function nextTickHandler() {\n      pending = false;\n      var copies = callbacks.slice(0);\n      callbacks = [];\n      for (var i = 0; i < copies.length; i++) {\n        copies[i]();\n      }\n    }\n\n    /* istanbul ignore if */\n    if (typeof MutationObserver !== 'undefined' && !hasMutationObserverBug) {\n      var counter = 1;\n      var observer = new MutationObserver(nextTickHandler);\n      var textNode = document.createTextNode(counter);\n      observer.observe(textNode, {\n        characterData: true\n      });\n      timerFunc = function () {\n        counter = (counter + 1) % 2;\n        textNode.data = counter;\n      };\n    } else {\n      // webpack attempts to inject a shim for setImmediate\n      // if it is used as a global, so we have to work around that to\n      // avoid bundling unnecessary code.\n      var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n      timerFunc = context.setImmediate || setTimeout;\n    }\n    return function (cb, ctx) {\n      var func = ctx ? function () {\n        cb.call(ctx);\n      } : cb;\n      callbacks.push(func);\n      if (pending) return;\n      pending = true;\n      timerFunc(nextTickHandler, 0);\n    };\n  })();\n\n  var _Set = undefined;\n  /* istanbul ignore if */\n  if (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n    // use native Set when available.\n    _Set = Set;\n  } else {\n    // a non-standard Set polyfill that only works with primitive keys.\n    _Set = function () {\n      this.set = Object.create(null);\n    };\n    _Set.prototype.has = function (key) {\n      return this.set[key] !== undefined;\n    };\n    _Set.prototype.add = function (key) {\n      this.set[key] = 1;\n    };\n    _Set.prototype.clear = function () {\n      this.set = Object.create(null);\n    };\n  }\n\n  function Cache(limit) {\n    this.size = 0;\n    this.limit = limit;\n    this.head = this.tail = undefined;\n    this._keymap = Object.create(null);\n  }\n\n  var p = Cache.prototype;\n\n  /**\n   * Put <value> into the cache associated with <key>.\n   * Returns the entry which was removed to make room for\n   * the new entry. Otherwise undefined is returned.\n   * (i.e. if there was enough room already).\n   *\n   * @param {String} key\n   * @param {*} value\n   * @return {Entry|undefined}\n   */\n\n  p.put = function (key, value) {\n    var removed;\n\n    var entry = this.get(key, true);\n    if (!entry) {\n      if (this.size === this.limit) {\n        removed = this.shift();\n      }\n      entry = {\n        key: key\n      };\n      this._keymap[key] = entry;\n      if (this.tail) {\n        this.tail.newer = entry;\n        entry.older = this.tail;\n      } else {\n        this.head = entry;\n      }\n      this.tail = entry;\n      this.size++;\n    }\n    entry.value = value;\n\n    return removed;\n  };\n\n  /**\n   * Purge the least recently used (oldest) entry from the\n   * cache. Returns the removed entry or undefined if the\n   * cache was empty.\n   */\n\n  p.shift = function () {\n    var entry = this.head;\n    if (entry) {\n      this.head = this.head.newer;\n      this.head.older = undefined;\n      entry.newer = entry.older = undefined;\n      this._keymap[entry.key] = undefined;\n      this.size--;\n    }\n    return entry;\n  };\n\n  /**\n   * Get and register recent use of <key>. Returns the value\n   * associated with <key> or undefined if not in cache.\n   *\n   * @param {String} key\n   * @param {Boolean} returnEntry\n   * @return {Entry|*}\n   */\n\n  p.get = function (key, returnEntry) {\n    var entry = this._keymap[key];\n    if (entry === undefined) return;\n    if (entry === this.tail) {\n      return returnEntry ? entry : entry.value;\n    }\n    // HEAD--------------TAIL\n    //   <.older   .newer>\n    //  <--- add direction --\n    //   A  B  C  <D>  E\n    if (entry.newer) {\n      if (entry === this.head) {\n        this.head = entry.newer;\n      }\n      entry.newer.older = entry.older; // C <-- E.\n    }\n    if (entry.older) {\n      entry.older.newer = entry.newer; // C. --> E\n    }\n    entry.newer = undefined; // D --x\n    entry.older = this.tail; // D. --> E\n    if (this.tail) {\n      this.tail.newer = entry; // E. <-- D\n    }\n    this.tail = entry;\n    return returnEntry ? entry : entry.value;\n  };\n\n  var cache$1 = new Cache(1000);\n  var filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\n  var reservedArgRE = /^in$|^-?\\d+/;\n\n  /**\n   * Parser state\n   */\n\n  var str;\n  var dir;\n  var c;\n  var prev;\n  var i;\n  var l;\n  var lastFilterIndex;\n  var inSingle;\n  var inDouble;\n  var curly;\n  var square;\n  var paren;\n  /**\n   * Push a filter to the current directive object\n   */\n\n  function pushFilter() {\n    var exp = str.slice(lastFilterIndex, i).trim();\n    var filter;\n    if (exp) {\n      filter = {};\n      var tokens = exp.match(filterTokenRE);\n      filter.name = tokens[0];\n      if (tokens.length > 1) {\n        filter.args = tokens.slice(1).map(processFilterArg);\n      }\n    }\n    if (filter) {\n      (dir.filters = dir.filters || []).push(filter);\n    }\n    lastFilterIndex = i + 1;\n  }\n\n  /**\n   * Check if an argument is dynamic and strip quotes.\n   *\n   * @param {String} arg\n   * @return {Object}\n   */\n\n  function processFilterArg(arg) {\n    if (reservedArgRE.test(arg)) {\n      return {\n        value: toNumber(arg),\n        dynamic: false\n      };\n    } else {\n      var stripped = stripQuotes(arg);\n      var dynamic = stripped === arg;\n      return {\n        value: dynamic ? arg : stripped,\n        dynamic: dynamic\n      };\n    }\n  }\n\n  /**\n   * Parse a directive value and extract the expression\n   * and its filters into a descriptor.\n   *\n   * Example:\n   *\n   * \"a + 1 | uppercase\" will yield:\n   * {\n   *   expression: 'a + 1',\n   *   filters: [\n   *     { name: 'uppercase', args: null }\n   *   ]\n   * }\n   *\n   * @param {String} s\n   * @return {Object}\n   */\n\n  function parseDirective(s) {\n    var hit = cache$1.get(s);\n    if (hit) {\n      return hit;\n    }\n\n    // reset parser state\n    str = s;\n    inSingle = inDouble = false;\n    curly = square = paren = 0;\n    lastFilterIndex = 0;\n    dir = {};\n\n    for (i = 0, l = str.length; i < l; i++) {\n      prev = c;\n      c = str.charCodeAt(i);\n      if (inSingle) {\n        // check single quote\n        if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n      } else if (inDouble) {\n        // check double quote\n        if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n      } else if (c === 0x7C && // pipe\n      str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n        if (dir.expression == null) {\n          // first filter, end of expression\n          lastFilterIndex = i + 1;\n          dir.expression = str.slice(0, i).trim();\n        } else {\n          // already has filter\n          pushFilter();\n        }\n      } else {\n        switch (c) {\n          case 0x22:\n            inDouble = true;break; // \"\n          case 0x27:\n            inSingle = true;break; // '\n          case 0x28:\n            paren++;break; // (\n          case 0x29:\n            paren--;break; // )\n          case 0x5B:\n            square++;break; // [\n          case 0x5D:\n            square--;break; // ]\n          case 0x7B:\n            curly++;break; // {\n          case 0x7D:\n            curly--;break; // }\n        }\n      }\n    }\n\n    if (dir.expression == null) {\n      dir.expression = str.slice(0, i).trim();\n    } else if (lastFilterIndex !== 0) {\n      pushFilter();\n    }\n\n    cache$1.put(s, dir);\n    return dir;\n  }\n\nvar directive = Object.freeze({\n    parseDirective: parseDirective\n  });\n\n  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n  var cache = undefined;\n  var tagRE = undefined;\n  var htmlRE = undefined;\n  /**\n   * Escape a string so it can be used in a RegExp\n   * constructor.\n   *\n   * @param {String} str\n   */\n\n  function escapeRegex(str) {\n    return str.replace(regexEscapeRE, '\\\\$&');\n  }\n\n  function compileRegex() {\n    var open = escapeRegex(config.delimiters[0]);\n    var close = escapeRegex(config.delimiters[1]);\n    var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n    var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n    tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n    htmlRE = new RegExp('^' + unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '$');\n    // reset cache\n    cache = new Cache(1000);\n  }\n\n  /**\n   * Parse a template text string into an array of tokens.\n   *\n   * @param {String} text\n   * @return {Array<Object> | null}\n   *               - {String} type\n   *               - {String} value\n   *               - {Boolean} [html]\n   *               - {Boolean} [oneTime]\n   */\n\n  function parseText(text) {\n    if (!cache) {\n      compileRegex();\n    }\n    var hit = cache.get(text);\n    if (hit) {\n      return hit;\n    }\n    if (!tagRE.test(text)) {\n      return null;\n    }\n    var tokens = [];\n    var lastIndex = tagRE.lastIndex = 0;\n    var match, index, html, value, first, oneTime;\n    /* eslint-disable no-cond-assign */\n    while (match = tagRE.exec(text)) {\n      /* eslint-enable no-cond-assign */\n      index = match.index;\n      // push text token\n      if (index > lastIndex) {\n        tokens.push({\n          value: text.slice(lastIndex, index)\n        });\n      }\n      // tag token\n      html = htmlRE.test(match[0]);\n      value = html ? match[1] : match[2];\n      first = value.charCodeAt(0);\n      oneTime = first === 42; // *\n      value = oneTime ? value.slice(1) : value;\n      tokens.push({\n        tag: true,\n        value: value.trim(),\n        html: html,\n        oneTime: oneTime\n      });\n      lastIndex = index + match[0].length;\n    }\n    if (lastIndex < text.length) {\n      tokens.push({\n        value: text.slice(lastIndex)\n      });\n    }\n    cache.put(text, tokens);\n    return tokens;\n  }\n\n  /**\n   * Format a list of tokens into an expression.\n   * e.g. tokens parsed from 'a {{b}} c' can be serialized\n   * into one single expression as '\"a \" + b + \" c\"'.\n   *\n   * @param {Array} tokens\n   * @param {Vue} [vm]\n   * @return {String}\n   */\n\n  function tokensToExp(tokens, vm) {\n    if (tokens.length > 1) {\n      return tokens.map(function (token) {\n        return formatToken(token, vm);\n      }).join('+');\n    } else {\n      return formatToken(tokens[0], vm, true);\n    }\n  }\n\n  /**\n   * Format a single token.\n   *\n   * @param {Object} token\n   * @param {Vue} [vm]\n   * @param {Boolean} [single]\n   * @return {String}\n   */\n\n  function formatToken(token, vm, single) {\n    return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n  }\n\n  /**\n   * For an attribute with multiple interpolation tags,\n   * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n   * the whole thing into a single watchable expression, we\n   * have to inline those filters. This function does exactly\n   * that. This is a bit hacky but it avoids heavy changes\n   * to directive parser and watcher mechanism.\n   *\n   * @param {String} exp\n   * @param {Boolean} single\n   * @return {String}\n   */\n\n  var filterRE = /[^|]\\|[^|]/;\n  function inlineFilters(exp, single) {\n    if (!filterRE.test(exp)) {\n      return single ? exp : '(' + exp + ')';\n    } else {\n      var dir = parseDirective(exp);\n      if (!dir.filters) {\n        return '(' + exp + ')';\n      } else {\n        return 'this._applyFilters(' + dir.expression + // value\n        ',null,' + // oldValue (null for read)\n        JSON.stringify(dir.filters) + // filter descriptors\n        ',false)'; // write?\n      }\n    }\n  }\n\nvar text = Object.freeze({\n    compileRegex: compileRegex,\n    parseText: parseText,\n    tokensToExp: tokensToExp\n  });\n\n  var delimiters = ['{{', '}}'];\n  var unsafeDelimiters = ['{{{', '}}}'];\n\n  var config = Object.defineProperties({\n\n    /**\n     * Whether to print debug messages.\n     * Also enables stack trace for warnings.\n     *\n     * @type {Boolean}\n     */\n\n    debug: false,\n\n    /**\n     * Whether to suppress warnings.\n     *\n     * @type {Boolean}\n     */\n\n    silent: false,\n\n    /**\n     * Whether to use async rendering.\n     */\n\n    async: true,\n\n    /**\n     * Whether to warn against errors caught when evaluating\n     * expressions.\n     */\n\n    warnExpressionErrors: true,\n\n    /**\n     * Whether to allow devtools inspection.\n     * Disabled by default in production builds.\n     */\n\n    devtools: 'development' !== 'production',\n\n    /**\n     * Internal flag to indicate the delimiters have been\n     * changed.\n     *\n     * @type {Boolean}\n     */\n\n    _delimitersChanged: true,\n\n    /**\n     * List of asset types that a component can own.\n     *\n     * @type {Array}\n     */\n\n    _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n    /**\n     * prop binding modes\n     */\n\n    _propBindingModes: {\n      ONE_WAY: 0,\n      TWO_WAY: 1,\n      ONE_TIME: 2\n    },\n\n    /**\n     * Max circular updates allowed in a batcher flush cycle.\n     */\n\n    _maxUpdateCount: 100\n\n  }, {\n    delimiters: { /**\n                   * Interpolation delimiters. Changing these would trigger\n                   * the text parser to re-compile the regular expressions.\n                   *\n                   * @type {Array<String>}\n                   */\n\n      get: function get() {\n        return delimiters;\n      },\n      set: function set(val) {\n        delimiters = val;\n        compileRegex();\n      },\n      configurable: true,\n      enumerable: true\n    },\n    unsafeDelimiters: {\n      get: function get() {\n        return unsafeDelimiters;\n      },\n      set: function set(val) {\n        unsafeDelimiters = val;\n        compileRegex();\n      },\n      configurable: true,\n      enumerable: true\n    }\n  });\n\n  var warn = undefined;\n  var formatComponentName = undefined;\n\n  if ('development' !== 'production') {\n    (function () {\n      var hasConsole = typeof console !== 'undefined';\n\n      warn = function (msg, vm) {\n        if (hasConsole && !config.silent) {\n          console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n        }\n      };\n\n      formatComponentName = function (vm) {\n        var name = vm._isVue ? vm.$options.name : vm.name;\n        return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n      };\n    })();\n  }\n\n  /**\n   * Append with transition.\n   *\n   * @param {Element} el\n   * @param {Element} target\n   * @param {Vue} vm\n   * @param {Function} [cb]\n   */\n\n  function appendWithTransition(el, target, vm, cb) {\n    applyTransition(el, 1, function () {\n      target.appendChild(el);\n    }, vm, cb);\n  }\n\n  /**\n   * InsertBefore with transition.\n   *\n   * @param {Element} el\n   * @param {Element} target\n   * @param {Vue} vm\n   * @param {Function} [cb]\n   */\n\n  function beforeWithTransition(el, target, vm, cb) {\n    applyTransition(el, 1, function () {\n      before(el, target);\n    }, vm, cb);\n  }\n\n  /**\n   * Remove with transition.\n   *\n   * @param {Element} el\n   * @param {Vue} vm\n   * @param {Function} [cb]\n   */\n\n  function removeWithTransition(el, vm, cb) {\n    applyTransition(el, -1, function () {\n      remove(el);\n    }, vm, cb);\n  }\n\n  /**\n   * Apply transitions with an operation callback.\n   *\n   * @param {Element} el\n   * @param {Number} direction\n   *                  1: enter\n   *                 -1: leave\n   * @param {Function} op - the actual DOM operation\n   * @param {Vue} vm\n   * @param {Function} [cb]\n   */\n\n  function applyTransition(el, direction, op, vm, cb) {\n    var transition = el.__v_trans;\n    if (!transition ||\n    // skip if there are no js hooks and CSS transition is\n    // not supported\n    !transition.hooks && !transitionEndEvent ||\n    // skip transitions for initial compile\n    !vm._isCompiled ||\n    // if the vm is being manipulated by a parent directive\n    // during the parent's compilation phase, skip the\n    // animation.\n    vm.$parent && !vm.$parent._isCompiled) {\n      op();\n      if (cb) cb();\n      return;\n    }\n    var action = direction > 0 ? 'enter' : 'leave';\n    transition[action](op, cb);\n  }\n\nvar transition = Object.freeze({\n    appendWithTransition: appendWithTransition,\n    beforeWithTransition: beforeWithTransition,\n    removeWithTransition: removeWithTransition,\n    applyTransition: applyTransition\n  });\n\n  /**\n   * Query an element selector if it's not an element already.\n   *\n   * @param {String|Element} el\n   * @return {Element}\n   */\n\n  function query(el) {\n    if (typeof el === 'string') {\n      var selector = el;\n      el = document.querySelector(el);\n      if (!el) {\n        'development' !== 'production' && warn('Cannot find element: ' + selector);\n      }\n    }\n    return el;\n  }\n\n  /**\n   * Check if a node is in the document.\n   * Note: document.documentElement.contains should work here\n   * but always returns false for comment nodes in phantomjs,\n   * making unit tests difficult. This is fixed by doing the\n   * contains() check on the node's parentNode instead of\n   * the node itself.\n   *\n   * @param {Node} node\n   * @return {Boolean}\n   */\n\n  function inDoc(node) {\n    if (!node) return false;\n    var doc = node.ownerDocument.documentElement;\n    var parent = node.parentNode;\n    return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n  }\n\n  /**\n   * Get and remove an attribute from a node.\n   *\n   * @param {Node} node\n   * @param {String} _attr\n   */\n\n  function getAttr(node, _attr) {\n    var val = node.getAttribute(_attr);\n    if (val !== null) {\n      node.removeAttribute(_attr);\n    }\n    return val;\n  }\n\n  /**\n   * Get an attribute with colon or v-bind: prefix.\n   *\n   * @param {Node} node\n   * @param {String} name\n   * @return {String|null}\n   */\n\n  function getBindAttr(node, name) {\n    var val = getAttr(node, ':' + name);\n    if (val === null) {\n      val = getAttr(node, 'v-bind:' + name);\n    }\n    return val;\n  }\n\n  /**\n   * Check the presence of a bind attribute.\n   *\n   * @param {Node} node\n   * @param {String} name\n   * @return {Boolean}\n   */\n\n  function hasBindAttr(node, name) {\n    return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n  }\n\n  /**\n   * Insert el before target\n   *\n   * @param {Element} el\n   * @param {Element} target\n   */\n\n  function before(el, target) {\n    target.parentNode.insertBefore(el, target);\n  }\n\n  /**\n   * Insert el after target\n   *\n   * @param {Element} el\n   * @param {Element} target\n   */\n\n  function after(el, target) {\n    if (target.nextSibling) {\n      before(el, target.nextSibling);\n    } else {\n      target.parentNode.appendChild(el);\n    }\n  }\n\n  /**\n   * Remove el from DOM\n   *\n   * @param {Element} el\n   */\n\n  function remove(el) {\n    el.parentNode.removeChild(el);\n  }\n\n  /**\n   * Prepend el to target\n   *\n   * @param {Element} el\n   * @param {Element} target\n   */\n\n  function prepend(el, target) {\n    if (target.firstChild) {\n      before(el, target.firstChild);\n    } else {\n      target.appendChild(el);\n    }\n  }\n\n  /**\n   * Replace target with el\n   *\n   * @param {Element} target\n   * @param {Element} el\n   */\n\n  function replace(target, el) {\n    var parent = target.parentNode;\n    if (parent) {\n      parent.replaceChild(el, target);\n    }\n  }\n\n  /**\n   * Add event listener shorthand.\n   *\n   * @param {Element} el\n   * @param {String} event\n   * @param {Function} cb\n   * @param {Boolean} [useCapture]\n   */\n\n  function on(el, event, cb, useCapture) {\n    el.addEventListener(event, cb, useCapture);\n  }\n\n  /**\n   * Remove event listener shorthand.\n   *\n   * @param {Element} el\n   * @param {String} event\n   * @param {Function} cb\n   */\n\n  function off(el, event, cb) {\n    el.removeEventListener(event, cb);\n  }\n\n  /**\n   * For IE9 compat: when both class and :class are present\n   * getAttribute('class') returns wrong value...\n   *\n   * @param {Element} el\n   * @return {String}\n   */\n\n  function getClass(el) {\n    var classname = el.className;\n    if (typeof classname === 'object') {\n      classname = classname.baseVal || '';\n    }\n    return classname;\n  }\n\n  /**\n   * In IE9, setAttribute('class') will result in empty class\n   * if the element also has the :class attribute; However in\n   * PhantomJS, setting `className` does not work on SVG elements...\n   * So we have to do a conditional check here.\n   *\n   * @param {Element} el\n   * @param {String} cls\n   */\n\n  function setClass(el, cls) {\n    /* istanbul ignore if */\n    if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n      el.className = cls;\n    } else {\n      el.setAttribute('class', cls);\n    }\n  }\n\n  /**\n   * Add class with compatibility for IE & SVG\n   *\n   * @param {Element} el\n   * @param {String} cls\n   */\n\n  function addClass(el, cls) {\n    if (el.classList) {\n      el.classList.add(cls);\n    } else {\n      var cur = ' ' + getClass(el) + ' ';\n      if (cur.indexOf(' ' + cls + ' ') < 0) {\n        setClass(el, (cur + cls).trim());\n      }\n    }\n  }\n\n  /**\n   * Remove class with compatibility for IE & SVG\n   *\n   * @param {Element} el\n   * @param {String} cls\n   */\n\n  function removeClass(el, cls) {\n    if (el.classList) {\n      el.classList.remove(cls);\n    } else {\n      var cur = ' ' + getClass(el) + ' ';\n      var tar = ' ' + cls + ' ';\n      while (cur.indexOf(tar) >= 0) {\n        cur = cur.replace(tar, ' ');\n      }\n      setClass(el, cur.trim());\n    }\n    if (!el.className) {\n      el.removeAttribute('class');\n    }\n  }\n\n  /**\n   * Extract raw content inside an element into a temporary\n   * container div\n   *\n   * @param {Element} el\n   * @param {Boolean} asFragment\n   * @return {Element|DocumentFragment}\n   */\n\n  function extractContent(el, asFragment) {\n    var child;\n    var rawContent;\n    /* istanbul ignore if */\n    if (isTemplate(el) && isFragment(el.content)) {\n      el = el.content;\n    }\n    if (el.hasChildNodes()) {\n      trimNode(el);\n      rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n      /* eslint-disable no-cond-assign */\n      while (child = el.firstChild) {\n        /* eslint-enable no-cond-assign */\n        rawContent.appendChild(child);\n      }\n    }\n    return rawContent;\n  }\n\n  /**\n   * Trim possible empty head/tail text and comment\n   * nodes inside a parent.\n   *\n   * @param {Node} node\n   */\n\n  function trimNode(node) {\n    var child;\n    /* eslint-disable no-sequences */\n    while ((child = node.firstChild, isTrimmable(child))) {\n      node.removeChild(child);\n    }\n    while ((child = node.lastChild, isTrimmable(child))) {\n      node.removeChild(child);\n    }\n    /* eslint-enable no-sequences */\n  }\n\n  function isTrimmable(node) {\n    return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n  }\n\n  /**\n   * Check if an element is a template tag.\n   * Note if the template appears inside an SVG its tagName\n   * will be in lowercase.\n   *\n   * @param {Element} el\n   */\n\n  function isTemplate(el) {\n    return el.tagName && el.tagName.toLowerCase() === 'template';\n  }\n\n  /**\n   * Create an \"anchor\" for performing dom insertion/removals.\n   * This is used in a number of scenarios:\n   * - fragment instance\n   * - v-html\n   * - v-if\n   * - v-for\n   * - component\n   *\n   * @param {String} content\n   * @param {Boolean} persist - IE trashes empty textNodes on\n   *                            cloneNode(true), so in certain\n   *                            cases the anchor needs to be\n   *                            non-empty to be persisted in\n   *                            templates.\n   * @return {Comment|Text}\n   */\n\n  function createAnchor(content, persist) {\n    var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n    anchor.__v_anchor = true;\n    return anchor;\n  }\n\n  /**\n   * Find a component ref attribute that starts with $.\n   *\n   * @param {Element} node\n   * @return {String|undefined}\n   */\n\n  var refRE = /^v-ref:/;\n\n  function findRef(node) {\n    if (node.hasAttributes()) {\n      var attrs = node.attributes;\n      for (var i = 0, l = attrs.length; i < l; i++) {\n        var name = attrs[i].name;\n        if (refRE.test(name)) {\n          return camelize(name.replace(refRE, ''));\n        }\n      }\n    }\n  }\n\n  /**\n   * Map a function to a range of nodes .\n   *\n   * @param {Node} node\n   * @param {Node} end\n   * @param {Function} op\n   */\n\n  function mapNodeRange(node, end, op) {\n    var next;\n    while (node !== end) {\n      next = node.nextSibling;\n      op(node);\n      node = next;\n    }\n    op(end);\n  }\n\n  /**\n   * Remove a range of nodes with transition, store\n   * the nodes in a fragment with correct ordering,\n   * and call callback when done.\n   *\n   * @param {Node} start\n   * @param {Node} end\n   * @param {Vue} vm\n   * @param {DocumentFragment} frag\n   * @param {Function} cb\n   */\n\n  function removeNodeRange(start, end, vm, frag, cb) {\n    var done = false;\n    var removed = 0;\n    var nodes = [];\n    mapNodeRange(start, end, function (node) {\n      if (node === end) done = true;\n      nodes.push(node);\n      removeWithTransition(node, vm, onRemoved);\n    });\n    function onRemoved() {\n      removed++;\n      if (done && removed >= nodes.length) {\n        for (var i = 0; i < nodes.length; i++) {\n          frag.appendChild(nodes[i]);\n        }\n        cb && cb();\n      }\n    }\n  }\n\n  /**\n   * Check if a node is a DocumentFragment.\n   *\n   * @param {Node} node\n   * @return {Boolean}\n   */\n\n  function isFragment(node) {\n    return node && node.nodeType === 11;\n  }\n\n  /**\n   * Get outerHTML of elements, taking care\n   * of SVG elements in IE as well.\n   *\n   * @param {Element} el\n   * @return {String}\n   */\n\n  function getOuterHTML(el) {\n    if (el.outerHTML) {\n      return el.outerHTML;\n    } else {\n      var container = document.createElement('div');\n      container.appendChild(el.cloneNode(true));\n      return container.innerHTML;\n    }\n  }\n\n  var commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\n  var reservedTagRE = /^(slot|partial|component)$/i;\n\n  var isUnknownElement = undefined;\n  if ('development' !== 'production') {\n    isUnknownElement = function (el, tag) {\n      if (tag.indexOf('-') > -1) {\n        // http://stackoverflow.com/a/28210364/1070244\n        return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n      } else {\n        return (/HTMLUnknownElement/.test(el.toString()) &&\n          // Chrome returns unknown for several HTML5 elements.\n          // https://code.google.com/p/chromium/issues/detail?id=540526\n          // Firefox returns unknown for some \"Interactive elements.\"\n          !/^(data|time|rtc|rb|details|dialog|summary)$/.test(tag)\n        );\n      }\n    };\n  }\n\n  /**\n   * Check if an element is a component, if yes return its\n   * component id.\n   *\n   * @param {Element} el\n   * @param {Object} options\n   * @return {Object|undefined}\n   */\n\n  function checkComponentAttr(el, options) {\n    var tag = el.tagName.toLowerCase();\n    var hasAttrs = el.hasAttributes();\n    if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n      if (resolveAsset(options, 'components', tag)) {\n        return { id: tag };\n      } else {\n        var is = hasAttrs && getIsBinding(el, options);\n        if (is) {\n          return is;\n        } else if ('development' !== 'production') {\n          var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n          if (expectedTag) {\n            warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n          } else if (isUnknownElement(el, tag)) {\n            warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n          }\n        }\n      }\n    } else if (hasAttrs) {\n      return getIsBinding(el, options);\n    }\n  }\n\n  /**\n   * Get \"is\" binding from an element.\n   *\n   * @param {Element} el\n   * @param {Object} options\n   * @return {Object|undefined}\n   */\n\n  function getIsBinding(el, options) {\n    // dynamic syntax\n    var exp = el.getAttribute('is');\n    if (exp != null) {\n      if (resolveAsset(options, 'components', exp)) {\n        el.removeAttribute('is');\n        return { id: exp };\n      }\n    } else {\n      exp = getBindAttr(el, 'is');\n      if (exp != null) {\n        return { id: exp, dynamic: true };\n      }\n    }\n  }\n\n  /**\n   * Option overwriting strategies are functions that handle\n   * how to merge a parent option value and a child option\n   * value into the final value.\n   *\n   * All strategy functions follow the same signature:\n   *\n   * @param {*} parentVal\n   * @param {*} childVal\n   * @param {Vue} [vm]\n   */\n\n  var strats = config.optionMergeStrategies = Object.create(null);\n\n  /**\n   * Helper that recursively merges two data objects together.\n   */\n\n  function mergeData(to, from) {\n    var key, toVal, fromVal;\n    for (key in from) {\n      toVal = to[key];\n      fromVal = from[key];\n      if (!hasOwn(to, key)) {\n        set(to, key, fromVal);\n      } else if (isObject(toVal) && isObject(fromVal)) {\n        mergeData(toVal, fromVal);\n      }\n    }\n    return to;\n  }\n\n  /**\n   * Data\n   */\n\n  strats.data = function (parentVal, childVal, vm) {\n    if (!vm) {\n      // in a Vue.extend merge, both should be functions\n      if (!childVal) {\n        return parentVal;\n      }\n      if (typeof childVal !== 'function') {\n        'development' !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n        return parentVal;\n      }\n      if (!parentVal) {\n        return childVal;\n      }\n      // when parentVal & childVal are both present,\n      // we need to return a function that returns the\n      // merged result of both functions... no need to\n      // check if parentVal is a function here because\n      // it has to be a function to pass previous merges.\n      return function mergedDataFn() {\n        return mergeData(childVal.call(this), parentVal.call(this));\n      };\n    } else if (parentVal || childVal) {\n      return function mergedInstanceDataFn() {\n        // instance merge\n        var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n        var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n        if (instanceData) {\n          return mergeData(instanceData, defaultData);\n        } else {\n          return defaultData;\n        }\n      };\n    }\n  };\n\n  /**\n   * El\n   */\n\n  strats.el = function (parentVal, childVal, vm) {\n    if (!vm && childVal && typeof childVal !== 'function') {\n      'development' !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n      return;\n    }\n    var ret = childVal || parentVal;\n    // invoke the element factory if this is instance merge\n    return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n  };\n\n  /**\n   * Hooks and param attributes are merged as arrays.\n   */\n\n  strats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n    return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n  };\n\n  /**\n   * Assets\n   *\n   * When a vm is present (instance creation), we need to do\n   * a three-way merge between constructor options, instance\n   * options and parent options.\n   */\n\n  function mergeAssets(parentVal, childVal) {\n    var res = Object.create(parentVal || null);\n    return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n  }\n\n  config._assetTypes.forEach(function (type) {\n    strats[type + 's'] = mergeAssets;\n  });\n\n  /**\n   * Events & Watchers.\n   *\n   * Events & watchers hashes should not overwrite one\n   * another, so we merge them as arrays.\n   */\n\n  strats.watch = strats.events = function (parentVal, childVal) {\n    if (!childVal) return parentVal;\n    if (!parentVal) return childVal;\n    var ret = {};\n    extend(ret, parentVal);\n    for (var key in childVal) {\n      var parent = ret[key];\n      var child = childVal[key];\n      if (parent && !isArray(parent)) {\n        parent = [parent];\n      }\n      ret[key] = parent ? parent.concat(child) : [child];\n    }\n    return ret;\n  };\n\n  /**\n   * Other object hashes.\n   */\n\n  strats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n    if (!childVal) return parentVal;\n    if (!parentVal) return childVal;\n    var ret = Object.create(null);\n    extend(ret, parentVal);\n    extend(ret, childVal);\n    return ret;\n  };\n\n  /**\n   * Default strategy.\n   */\n\n  var defaultStrat = function defaultStrat(parentVal, childVal) {\n    return childVal === undefined ? parentVal : childVal;\n  };\n\n  /**\n   * Make sure component options get converted to actual\n   * constructors.\n   *\n   * @param {Object} options\n   */\n\n  function guardComponents(options) {\n    if (options.components) {\n      var components = options.components = guardArrayAssets(options.components);\n      var ids = Object.keys(components);\n      var def;\n      if ('development' !== 'production') {\n        var map = options._componentNameMap = {};\n      }\n      for (var i = 0, l = ids.length; i < l; i++) {\n        var key = ids[i];\n        if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n          'development' !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n          continue;\n        }\n        // record a all lowercase <-> kebab-case mapping for\n        // possible custom element case error warning\n        if ('development' !== 'production') {\n          map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n        }\n        def = components[key];\n        if (isPlainObject(def)) {\n          components[key] = Vue.extend(def);\n        }\n      }\n    }\n  }\n\n  /**\n   * Ensure all props option syntax are normalized into the\n   * Object-based format.\n   *\n   * @param {Object} options\n   */\n\n  function guardProps(options) {\n    var props = options.props;\n    var i, val;\n    if (isArray(props)) {\n      options.props = {};\n      i = props.length;\n      while (i--) {\n        val = props[i];\n        if (typeof val === 'string') {\n          options.props[val] = null;\n        } else if (val.name) {\n          options.props[val.name] = val;\n        }\n      }\n    } else if (isPlainObject(props)) {\n      var keys = Object.keys(props);\n      i = keys.length;\n      while (i--) {\n        val = props[keys[i]];\n        if (typeof val === 'function') {\n          props[keys[i]] = { type: val };\n        }\n      }\n    }\n  }\n\n  /**\n   * Guard an Array-format assets option and converted it\n   * into the key-value Object format.\n   *\n   * @param {Object|Array} assets\n   * @return {Object}\n   */\n\n  function guardArrayAssets(assets) {\n    if (isArray(assets)) {\n      var res = {};\n      var i = assets.length;\n      var asset;\n      while (i--) {\n        asset = assets[i];\n        var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n        if (!id) {\n          'development' !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n        } else {\n          res[id] = asset;\n        }\n      }\n      return res;\n    }\n    return assets;\n  }\n\n  /**\n   * Merge two option objects into a new one.\n   * Core utility used in both instantiation and inheritance.\n   *\n   * @param {Object} parent\n   * @param {Object} child\n   * @param {Vue} [vm] - if vm is present, indicates this is\n   *                     an instantiation merge.\n   */\n\n  function mergeOptions(parent, child, vm) {\n    guardComponents(child);\n    guardProps(child);\n    if ('development' !== 'production') {\n      if (child.propsData && !vm) {\n        warn('propsData can only be used as an instantiation option.');\n      }\n    }\n    var options = {};\n    var key;\n    if (child['extends']) {\n      parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n    }\n    if (child.mixins) {\n      for (var i = 0, l = child.mixins.length; i < l; i++) {\n        var mixin = child.mixins[i];\n        var mixinOptions = mixin.prototype instanceof Vue ? mixin.options : mixin;\n        parent = mergeOptions(parent, mixinOptions, vm);\n      }\n    }\n    for (key in parent) {\n      mergeField(key);\n    }\n    for (key in child) {\n      if (!hasOwn(parent, key)) {\n        mergeField(key);\n      }\n    }\n    function mergeField(key) {\n      var strat = strats[key] || defaultStrat;\n      options[key] = strat(parent[key], child[key], vm, key);\n    }\n    return options;\n  }\n\n  /**\n   * Resolve an asset.\n   * This function is used because child instances need access\n   * to assets defined in its ancestor chain.\n   *\n   * @param {Object} options\n   * @param {String} type\n   * @param {String} id\n   * @param {Boolean} warnMissing\n   * @return {Object|Function}\n   */\n\n  function resolveAsset(options, type, id, warnMissing) {\n    /* istanbul ignore if */\n    if (typeof id !== 'string') {\n      return;\n    }\n    var assets = options[type];\n    var camelizedId;\n    var res = assets[id] ||\n    // camelCase ID\n    assets[camelizedId = camelize(id)] ||\n    // Pascal Case ID\n    assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n    if ('development' !== 'production' && warnMissing && !res) {\n      warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n    }\n    return res;\n  }\n\n  var uid$1 = 0;\n\n  /**\n   * A dep is an observable that can have multiple\n   * directives subscribing to it.\n   *\n   * @constructor\n   */\n  function Dep() {\n    this.id = uid$1++;\n    this.subs = [];\n  }\n\n  // the current target watcher being evaluated.\n  // this is globally unique because there could be only one\n  // watcher being evaluated at any time.\n  Dep.target = null;\n\n  /**\n   * Add a directive subscriber.\n   *\n   * @param {Directive} sub\n   */\n\n  Dep.prototype.addSub = function (sub) {\n    this.subs.push(sub);\n  };\n\n  /**\n   * Remove a directive subscriber.\n   *\n   * @param {Directive} sub\n   */\n\n  Dep.prototype.removeSub = function (sub) {\n    this.subs.$remove(sub);\n  };\n\n  /**\n   * Add self as a dependency to the target watcher.\n   */\n\n  Dep.prototype.depend = function () {\n    Dep.target.addDep(this);\n  };\n\n  /**\n   * Notify all subscribers of a new value.\n   */\n\n  Dep.prototype.notify = function () {\n    // stablize the subscriber list first\n    var subs = toArray(this.subs);\n    for (var i = 0, l = subs.length; i < l; i++) {\n      subs[i].update();\n    }\n  };\n\n  var arrayProto = Array.prototype;\n  var arrayMethods = Object.create(arrayProto)\n\n  /**\n   * Intercept mutating methods and emit events\n   */\n\n  ;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n    // cache original method\n    var original = arrayProto[method];\n    def(arrayMethods, method, function mutator() {\n      // avoid leaking arguments:\n      // http://jsperf.com/closure-with-arguments\n      var i = arguments.length;\n      var args = new Array(i);\n      while (i--) {\n        args[i] = arguments[i];\n      }\n      var result = original.apply(this, args);\n      var ob = this.__ob__;\n      var inserted;\n      switch (method) {\n        case 'push':\n          inserted = args;\n          break;\n        case 'unshift':\n          inserted = args;\n          break;\n        case 'splice':\n          inserted = args.slice(2);\n          break;\n      }\n      if (inserted) ob.observeArray(inserted);\n      // notify change\n      ob.dep.notify();\n      return result;\n    });\n  });\n\n  /**\n   * Swap the element at the given index with a new value\n   * and emits corresponding event.\n   *\n   * @param {Number} index\n   * @param {*} val\n   * @return {*} - replaced element\n   */\n\n  def(arrayProto, '$set', function $set(index, val) {\n    if (index >= this.length) {\n      this.length = Number(index) + 1;\n    }\n    return this.splice(index, 1, val)[0];\n  });\n\n  /**\n   * Convenience method to remove the element at given index or target element reference.\n   *\n   * @param {*} item\n   */\n\n  def(arrayProto, '$remove', function $remove(item) {\n    /* istanbul ignore if */\n    if (!this.length) return;\n    var index = indexOf(this, item);\n    if (index > -1) {\n      return this.splice(index, 1);\n    }\n  });\n\n  var arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n  /**\n   * By default, when a reactive property is set, the new value is\n   * also converted to become reactive. However in certain cases, e.g.\n   * v-for scope alias and props, we don't want to force conversion\n   * because the value may be a nested value under a frozen data structure.\n   *\n   * So whenever we want to set a reactive property without forcing\n   * conversion on the new value, we wrap that call inside this function.\n   */\n\n  var shouldConvert = true;\n\n  function withoutConversion(fn) {\n    shouldConvert = false;\n    fn();\n    shouldConvert = true;\n  }\n\n  /**\n   * Observer class that are attached to each observed\n   * object. Once attached, the observer converts target\n   * object's property keys into getter/setters that\n   * collect dependencies and dispatches updates.\n   *\n   * @param {Array|Object} value\n   * @constructor\n   */\n\n  function Observer(value) {\n    this.value = value;\n    this.dep = new Dep();\n    def(value, '__ob__', this);\n    if (isArray(value)) {\n      var augment = hasProto ? protoAugment : copyAugment;\n      augment(value, arrayMethods, arrayKeys);\n      this.observeArray(value);\n    } else {\n      this.walk(value);\n    }\n  }\n\n  // Instance methods\n\n  /**\n   * Walk through each property and convert them into\n   * getter/setters. This method should only be called when\n   * value type is Object.\n   *\n   * @param {Object} obj\n   */\n\n  Observer.prototype.walk = function (obj) {\n    var keys = Object.keys(obj);\n    for (var i = 0, l = keys.length; i < l; i++) {\n      this.convert(keys[i], obj[keys[i]]);\n    }\n  };\n\n  /**\n   * Observe a list of Array items.\n   *\n   * @param {Array} items\n   */\n\n  Observer.prototype.observeArray = function (items) {\n    for (var i = 0, l = items.length; i < l; i++) {\n      observe(items[i]);\n    }\n  };\n\n  /**\n   * Convert a property into getter/setter so we can emit\n   * the events when the property is accessed/changed.\n   *\n   * @param {String} key\n   * @param {*} val\n   */\n\n  Observer.prototype.convert = function (key, val) {\n    defineReactive(this.value, key, val);\n  };\n\n  /**\n   * Add an owner vm, so that when $set/$delete mutations\n   * happen we can notify owner vms to proxy the keys and\n   * digest the watchers. This is only called when the object\n   * is observed as an instance's root $data.\n   *\n   * @param {Vue} vm\n   */\n\n  Observer.prototype.addVm = function (vm) {\n    (this.vms || (this.vms = [])).push(vm);\n  };\n\n  /**\n   * Remove an owner vm. This is called when the object is\n   * swapped out as an instance's $data object.\n   *\n   * @param {Vue} vm\n   */\n\n  Observer.prototype.removeVm = function (vm) {\n    this.vms.$remove(vm);\n  };\n\n  // helpers\n\n  /**\n   * Augment an target Object or Array by intercepting\n   * the prototype chain using __proto__\n   *\n   * @param {Object|Array} target\n   * @param {Object} src\n   */\n\n  function protoAugment(target, src) {\n    /* eslint-disable no-proto */\n    target.__proto__ = src;\n    /* eslint-enable no-proto */\n  }\n\n  /**\n   * Augment an target Object or Array by defining\n   * hidden properties.\n   *\n   * @param {Object|Array} target\n   * @param {Object} proto\n   */\n\n  function copyAugment(target, src, keys) {\n    for (var i = 0, l = keys.length; i < l; i++) {\n      var key = keys[i];\n      def(target, key, src[key]);\n    }\n  }\n\n  /**\n   * Attempt to create an observer instance for a value,\n   * returns the new observer if successfully observed,\n   * or the existing observer if the value already has one.\n   *\n   * @param {*} value\n   * @param {Vue} [vm]\n   * @return {Observer|undefined}\n   * @static\n   */\n\n  function observe(value, vm) {\n    if (!value || typeof value !== 'object') {\n      return;\n    }\n    var ob;\n    if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n      ob = value.__ob__;\n    } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n      ob = new Observer(value);\n    }\n    if (ob && vm) {\n      ob.addVm(vm);\n    }\n    return ob;\n  }\n\n  /**\n   * Define a reactive property on an Object.\n   *\n   * @param {Object} obj\n   * @param {String} key\n   * @param {*} val\n   */\n\n  function defineReactive(obj, key, val) {\n    var dep = new Dep();\n\n    var property = Object.getOwnPropertyDescriptor(obj, key);\n    if (property && property.configurable === false) {\n      return;\n    }\n\n    // cater for pre-defined getter/setters\n    var getter = property && property.get;\n    var setter = property && property.set;\n\n    var childOb = observe(val);\n    Object.defineProperty(obj, key, {\n      enumerable: true,\n      configurable: true,\n      get: function reactiveGetter() {\n        var value = getter ? getter.call(obj) : val;\n        if (Dep.target) {\n          dep.depend();\n          if (childOb) {\n            childOb.dep.depend();\n          }\n          if (isArray(value)) {\n            for (var e, i = 0, l = value.length; i < l; i++) {\n              e = value[i];\n              e && e.__ob__ && e.__ob__.dep.depend();\n            }\n          }\n        }\n        return value;\n      },\n      set: function reactiveSetter(newVal) {\n        var value = getter ? getter.call(obj) : val;\n        if (newVal === value) {\n          return;\n        }\n        if (setter) {\n          setter.call(obj, newVal);\n        } else {\n          val = newVal;\n        }\n        childOb = observe(newVal);\n        dep.notify();\n      }\n    });\n  }\n\n\n\n  var util = Object.freeze({\n  \tdefineReactive: defineReactive,\n  \tset: set,\n  \tdel: del,\n  \thasOwn: hasOwn,\n  \tisLiteral: isLiteral,\n  \tisReserved: isReserved,\n  \t_toString: _toString,\n  \ttoNumber: toNumber,\n  \ttoBoolean: toBoolean,\n  \tstripQuotes: stripQuotes,\n  \tcamelize: camelize,\n  \thyphenate: hyphenate,\n  \tclassify: classify,\n  \tbind: bind,\n  \ttoArray: toArray,\n  \textend: extend,\n  \tisObject: isObject,\n  \tisPlainObject: isPlainObject,\n  \tdef: def,\n  \tdebounce: _debounce,\n  \tindexOf: indexOf,\n  \tcancellable: cancellable,\n  \tlooseEqual: looseEqual,\n  \tisArray: isArray,\n  \thasProto: hasProto,\n  \tinBrowser: inBrowser,\n  \tdevtools: devtools,\n  \tisIE: isIE,\n  \tisIE9: isIE9,\n  \tisAndroid: isAndroid,\n  \tisIos: isIos,\n  \tiosVersionMatch: iosVersionMatch,\n  \tiosVersion: iosVersion,\n  \thasMutationObserverBug: hasMutationObserverBug,\n  \tget transitionProp () { return transitionProp; },\n  \tget transitionEndEvent () { return transitionEndEvent; },\n  \tget animationProp () { return animationProp; },\n  \tget animationEndEvent () { return animationEndEvent; },\n  \tnextTick: nextTick,\n  \tget _Set () { return _Set; },\n  \tquery: query,\n  \tinDoc: inDoc,\n  \tgetAttr: getAttr,\n  \tgetBindAttr: getBindAttr,\n  \thasBindAttr: hasBindAttr,\n  \tbefore: before,\n  \tafter: after,\n  \tremove: remove,\n  \tprepend: prepend,\n  \treplace: replace,\n  \ton: on,\n  \toff: off,\n  \tsetClass: setClass,\n  \taddClass: addClass,\n  \tremoveClass: removeClass,\n  \textractContent: extractContent,\n  \ttrimNode: trimNode,\n  \tisTemplate: isTemplate,\n  \tcreateAnchor: createAnchor,\n  \tfindRef: findRef,\n  \tmapNodeRange: mapNodeRange,\n  \tremoveNodeRange: removeNodeRange,\n  \tisFragment: isFragment,\n  \tgetOuterHTML: getOuterHTML,\n  \tmergeOptions: mergeOptions,\n  \tresolveAsset: resolveAsset,\n  \tcheckComponentAttr: checkComponentAttr,\n  \tcommonTagRE: commonTagRE,\n  \treservedTagRE: reservedTagRE,\n  \tget warn () { return warn; }\n  });\n\n  var uid = 0;\n\n  function initMixin (Vue) {\n    /**\n     * The main init sequence. This is called for every\n     * instance, including ones that are created from extended\n     * constructors.\n     *\n     * @param {Object} options - this options object should be\n     *                           the result of merging class\n     *                           options and the options passed\n     *                           in to the constructor.\n     */\n\n    Vue.prototype._init = function (options) {\n      options = options || {};\n\n      this.$el = null;\n      this.$parent = options.parent;\n      this.$root = this.$parent ? this.$parent.$root : this;\n      this.$children = [];\n      this.$refs = {}; // child vm references\n      this.$els = {}; // element references\n      this._watchers = []; // all watchers as an array\n      this._directives = []; // all directives\n\n      // a uid\n      this._uid = uid++;\n\n      // a flag to avoid this being observed\n      this._isVue = true;\n\n      // events bookkeeping\n      this._events = {}; // registered callbacks\n      this._eventsCount = {}; // for $broadcast optimization\n\n      // fragment instance properties\n      this._isFragment = false;\n      this._fragment = // @type {DocumentFragment}\n      this._fragmentStart = // @type {Text|Comment}\n      this._fragmentEnd = null; // @type {Text|Comment}\n\n      // lifecycle state\n      this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n      this._unlinkFn = null;\n\n      // context:\n      // if this is a transcluded component, context\n      // will be the common parent vm of this instance\n      // and its host.\n      this._context = options._context || this.$parent;\n\n      // scope:\n      // if this is inside an inline v-for, the scope\n      // will be the intermediate scope created for this\n      // repeat fragment. this is used for linking props\n      // and container directives.\n      this._scope = options._scope;\n\n      // fragment:\n      // if this instance is compiled inside a Fragment, it\n      // needs to reigster itself as a child of that fragment\n      // for attach/detach to work properly.\n      this._frag = options._frag;\n      if (this._frag) {\n        this._frag.children.push(this);\n      }\n\n      // push self into parent / transclusion host\n      if (this.$parent) {\n        this.$parent.$children.push(this);\n      }\n\n      // merge options.\n      options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n      // set ref\n      this._updateRef();\n\n      // initialize data as empty object.\n      // it will be filled up in _initData().\n      this._data = {};\n\n      // call init hook\n      this._callHook('init');\n\n      // initialize data observation and scope inheritance.\n      this._initState();\n\n      // setup event system and option events.\n      this._initEvents();\n\n      // call created hook\n      this._callHook('created');\n\n      // if `el` option is passed, start compilation.\n      if (options.el) {\n        this.$mount(options.el);\n      }\n    };\n  }\n\n  var pathCache = new Cache(1000);\n\n  // actions\n  var APPEND = 0;\n  var PUSH = 1;\n  var INC_SUB_PATH_DEPTH = 2;\n  var PUSH_SUB_PATH = 3;\n\n  // states\n  var BEFORE_PATH = 0;\n  var IN_PATH = 1;\n  var BEFORE_IDENT = 2;\n  var IN_IDENT = 3;\n  var IN_SUB_PATH = 4;\n  var IN_SINGLE_QUOTE = 5;\n  var IN_DOUBLE_QUOTE = 6;\n  var AFTER_PATH = 7;\n  var ERROR = 8;\n\n  var pathStateMachine = [];\n\n  pathStateMachine[BEFORE_PATH] = {\n    'ws': [BEFORE_PATH],\n    'ident': [IN_IDENT, APPEND],\n    '[': [IN_SUB_PATH],\n    'eof': [AFTER_PATH]\n  };\n\n  pathStateMachine[IN_PATH] = {\n    'ws': [IN_PATH],\n    '.': [BEFORE_IDENT],\n    '[': [IN_SUB_PATH],\n    'eof': [AFTER_PATH]\n  };\n\n  pathStateMachine[BEFORE_IDENT] = {\n    'ws': [BEFORE_IDENT],\n    'ident': [IN_IDENT, APPEND]\n  };\n\n  pathStateMachine[IN_IDENT] = {\n    'ident': [IN_IDENT, APPEND],\n    '0': [IN_IDENT, APPEND],\n    'number': [IN_IDENT, APPEND],\n    'ws': [IN_PATH, PUSH],\n    '.': [BEFORE_IDENT, PUSH],\n    '[': [IN_SUB_PATH, PUSH],\n    'eof': [AFTER_PATH, PUSH]\n  };\n\n  pathStateMachine[IN_SUB_PATH] = {\n    \"'\": [IN_SINGLE_QUOTE, APPEND],\n    '\"': [IN_DOUBLE_QUOTE, APPEND],\n    '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n    ']': [IN_PATH, PUSH_SUB_PATH],\n    'eof': ERROR,\n    'else': [IN_SUB_PATH, APPEND]\n  };\n\n  pathStateMachine[IN_SINGLE_QUOTE] = {\n    \"'\": [IN_SUB_PATH, APPEND],\n    'eof': ERROR,\n    'else': [IN_SINGLE_QUOTE, APPEND]\n  };\n\n  pathStateMachine[IN_DOUBLE_QUOTE] = {\n    '\"': [IN_SUB_PATH, APPEND],\n    'eof': ERROR,\n    'else': [IN_DOUBLE_QUOTE, APPEND]\n  };\n\n  /**\n   * Determine the type of a character in a keypath.\n   *\n   * @param {Char} ch\n   * @return {String} type\n   */\n\n  function getPathCharType(ch) {\n    if (ch === undefined) {\n      return 'eof';\n    }\n\n    var code = ch.charCodeAt(0);\n\n    switch (code) {\n      case 0x5B: // [\n      case 0x5D: // ]\n      case 0x2E: // .\n      case 0x22: // \"\n      case 0x27: // '\n      case 0x30:\n        // 0\n        return ch;\n\n      case 0x5F: // _\n      case 0x24:\n        // $\n        return 'ident';\n\n      case 0x20: // Space\n      case 0x09: // Tab\n      case 0x0A: // Newline\n      case 0x0D: // Return\n      case 0xA0: // No-break space\n      case 0xFEFF: // Byte Order Mark\n      case 0x2028: // Line Separator\n      case 0x2029:\n        // Paragraph Separator\n        return 'ws';\n    }\n\n    // a-z, A-Z\n    if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n      return 'ident';\n    }\n\n    // 1-9\n    if (code >= 0x31 && code <= 0x39) {\n      return 'number';\n    }\n\n    return 'else';\n  }\n\n  /**\n   * Format a subPath, return its plain form if it is\n   * a literal string or number. Otherwise prepend the\n   * dynamic indicator (*).\n   *\n   * @param {String} path\n   * @return {String}\n   */\n\n  function formatSubPath(path) {\n    var trimmed = path.trim();\n    // invalid leading 0\n    if (path.charAt(0) === '0' && isNaN(path)) {\n      return false;\n    }\n    return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n  }\n\n  /**\n   * Parse a string path into an array of segments\n   *\n   * @param {String} path\n   * @return {Array|undefined}\n   */\n\n  function parse(path) {\n    var keys = [];\n    var index = -1;\n    var mode = BEFORE_PATH;\n    var subPathDepth = 0;\n    var c, newChar, key, type, transition, action, typeMap;\n\n    var actions = [];\n\n    actions[PUSH] = function () {\n      if (key !== undefined) {\n        keys.push(key);\n        key = undefined;\n      }\n    };\n\n    actions[APPEND] = function () {\n      if (key === undefined) {\n        key = newChar;\n      } else {\n        key += newChar;\n      }\n    };\n\n    actions[INC_SUB_PATH_DEPTH] = function () {\n      actions[APPEND]();\n      subPathDepth++;\n    };\n\n    actions[PUSH_SUB_PATH] = function () {\n      if (subPathDepth > 0) {\n        subPathDepth--;\n        mode = IN_SUB_PATH;\n        actions[APPEND]();\n      } else {\n        subPathDepth = 0;\n        key = formatSubPath(key);\n        if (key === false) {\n          return false;\n        } else {\n          actions[PUSH]();\n        }\n      }\n    };\n\n    function maybeUnescapeQuote() {\n      var nextChar = path[index + 1];\n      if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n        index++;\n        newChar = '\\\\' + nextChar;\n        actions[APPEND]();\n        return true;\n      }\n    }\n\n    while (mode != null) {\n      index++;\n      c = path[index];\n\n      if (c === '\\\\' && maybeUnescapeQuote()) {\n        continue;\n      }\n\n      type = getPathCharType(c);\n      typeMap = pathStateMachine[mode];\n      transition = typeMap[type] || typeMap['else'] || ERROR;\n\n      if (transition === ERROR) {\n        return; // parse error\n      }\n\n      mode = transition[0];\n      action = actions[transition[1]];\n      if (action) {\n        newChar = transition[2];\n        newChar = newChar === undefined ? c : newChar;\n        if (action() === false) {\n          return;\n        }\n      }\n\n      if (mode === AFTER_PATH) {\n        keys.raw = path;\n        return keys;\n      }\n    }\n  }\n\n  /**\n   * External parse that check for a cache hit first\n   *\n   * @param {String} path\n   * @return {Array|undefined}\n   */\n\n  function parsePath(path) {\n    var hit = pathCache.get(path);\n    if (!hit) {\n      hit = parse(path);\n      if (hit) {\n        pathCache.put(path, hit);\n      }\n    }\n    return hit;\n  }\n\n  /**\n   * Get from an object from a path string\n   *\n   * @param {Object} obj\n   * @param {String} path\n   */\n\n  function getPath(obj, path) {\n    return parseExpression(path).get(obj);\n  }\n\n  /**\n   * Warn against setting non-existent root path on a vm.\n   */\n\n  var warnNonExistent;\n  if ('development' !== 'production') {\n    warnNonExistent = function (path, vm) {\n      warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n    };\n  }\n\n  /**\n   * Set on an object from a path\n   *\n   * @param {Object} obj\n   * @param {String | Array} path\n   * @param {*} val\n   */\n\n  function setPath(obj, path, val) {\n    var original = obj;\n    if (typeof path === 'string') {\n      path = parse(path);\n    }\n    if (!path || !isObject(obj)) {\n      return false;\n    }\n    var last, key;\n    for (var i = 0, l = path.length; i < l; i++) {\n      last = obj;\n      key = path[i];\n      if (key.charAt(0) === '*') {\n        key = parseExpression(key.slice(1)).get.call(original, original);\n      }\n      if (i < l - 1) {\n        obj = obj[key];\n        if (!isObject(obj)) {\n          obj = {};\n          if ('development' !== 'production' && last._isVue) {\n            warnNonExistent(path, last);\n          }\n          set(last, key, obj);\n        }\n      } else {\n        if (isArray(obj)) {\n          obj.$set(key, val);\n        } else if (key in obj) {\n          obj[key] = val;\n        } else {\n          if ('development' !== 'production' && obj._isVue) {\n            warnNonExistent(path, obj);\n          }\n          set(obj, key, val);\n        }\n      }\n    }\n    return true;\n  }\n\nvar path = Object.freeze({\n    parsePath: parsePath,\n    getPath: getPath,\n    setPath: setPath\n  });\n\n  var expressionCache = new Cache(1000);\n\n  var allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\n  var allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n  // keywords that don't make sense inside expressions\n  var improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\n  var improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n  var wsRE = /\\s/g;\n  var newlineRE = /\\n/g;\n  var saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\n  var restoreRE = /\"(\\d+)\"/g;\n  var pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n  var identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\n  var literalValueRE$1 = /^(?:true|false|null|undefined|Infinity|NaN)$/;\n\n  function noop() {}\n\n  /**\n   * Save / Rewrite / Restore\n   *\n   * When rewriting paths found in an expression, it is\n   * possible for the same letter sequences to be found in\n   * strings and Object literal property keys. Therefore we\n   * remove and store these parts in a temporary array, and\n   * restore them after the path rewrite.\n   */\n\n  var saved = [];\n\n  /**\n   * Save replacer\n   *\n   * The save regex can match two possible cases:\n   * 1. An opening object literal\n   * 2. A string\n   * If matched as a plain string, we need to escape its\n   * newlines, since the string needs to be preserved when\n   * generating the function body.\n   *\n   * @param {String} str\n   * @param {String} isString - str if matched as a string\n   * @return {String} - placeholder with index\n   */\n\n  function save(str, isString) {\n    var i = saved.length;\n    saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n    return '\"' + i + '\"';\n  }\n\n  /**\n   * Path rewrite replacer\n   *\n   * @param {String} raw\n   * @return {String}\n   */\n\n  function rewrite(raw) {\n    var c = raw.charAt(0);\n    var path = raw.slice(1);\n    if (allowedKeywordsRE.test(path)) {\n      return raw;\n    } else {\n      path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n      return c + 'scope.' + path;\n    }\n  }\n\n  /**\n   * Restore replacer\n   *\n   * @param {String} str\n   * @param {String} i - matched save index\n   * @return {String}\n   */\n\n  function restore(str, i) {\n    return saved[i];\n  }\n\n  /**\n   * Rewrite an expression, prefixing all path accessors with\n   * `scope.` and generate getter/setter functions.\n   *\n   * @param {String} exp\n   * @return {Function}\n   */\n\n  function compileGetter(exp) {\n    if (improperKeywordsRE.test(exp)) {\n      'development' !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n    }\n    // reset state\n    saved.length = 0;\n    // save strings and object literal keys\n    var body = exp.replace(saveRE, save).replace(wsRE, '');\n    // rewrite all paths\n    // pad 1 space here because the regex matches 1 extra char\n    body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n    return makeGetterFn(body);\n  }\n\n  /**\n   * Build a getter function. Requires eval.\n   *\n   * We isolate the try/catch so it doesn't affect the\n   * optimization of the parse function when it is not called.\n   *\n   * @param {String} body\n   * @return {Function|undefined}\n   */\n\n  function makeGetterFn(body) {\n    try {\n      /* eslint-disable no-new-func */\n      return new Function('scope', 'return ' + body + ';');\n      /* eslint-enable no-new-func */\n    } catch (e) {\n      if ('development' !== 'production') {\n        /* istanbul ignore if */\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn('It seems you are using the default build of Vue.js in an environment ' + 'with Content Security Policy that prohibits unsafe-eval. ' + 'Use the CSP-compliant build instead: ' + 'http://vuejs.org/guide/installation.html#CSP-compliant-build');\n        } else {\n          warn('Invalid expression. ' + 'Generated function body: ' + body);\n        }\n      }\n      return noop;\n    }\n  }\n\n  /**\n   * Compile a setter function for the expression.\n   *\n   * @param {String} exp\n   * @return {Function|undefined}\n   */\n\n  function compileSetter(exp) {\n    var path = parsePath(exp);\n    if (path) {\n      return function (scope, val) {\n        setPath(scope, path, val);\n      };\n    } else {\n      'development' !== 'production' && warn('Invalid setter expression: ' + exp);\n    }\n  }\n\n  /**\n   * Parse an expression into re-written getter/setters.\n   *\n   * @param {String} exp\n   * @param {Boolean} needSet\n   * @return {Function}\n   */\n\n  function parseExpression(exp, needSet) {\n    exp = exp.trim();\n    // try cache\n    var hit = expressionCache.get(exp);\n    if (hit) {\n      if (needSet && !hit.set) {\n        hit.set = compileSetter(hit.exp);\n      }\n      return hit;\n    }\n    var res = { exp: exp };\n    res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n    // optimized super simple getter\n    ? makeGetterFn('scope.' + exp)\n    // dynamic getter\n    : compileGetter(exp);\n    if (needSet) {\n      res.set = compileSetter(exp);\n    }\n    expressionCache.put(exp, res);\n    return res;\n  }\n\n  /**\n   * Check if an expression is a simple path.\n   *\n   * @param {String} exp\n   * @return {Boolean}\n   */\n\n  function isSimplePath(exp) {\n    return pathTestRE.test(exp) &&\n    // don't treat literal values as paths\n    !literalValueRE$1.test(exp) &&\n    // Math constants e.g. Math.PI, Math.E etc.\n    exp.slice(0, 5) !== 'Math.';\n  }\n\nvar expression = Object.freeze({\n    parseExpression: parseExpression,\n    isSimplePath: isSimplePath\n  });\n\n  // we have two separate queues: one for directive updates\n  // and one for user watcher registered via $watch().\n  // we want to guarantee directive updates to be called\n  // before user watchers so that when user watchers are\n  // triggered, the DOM would have already been in updated\n  // state.\n\n  var queue = [];\n  var userQueue = [];\n  var has = {};\n  var circular = {};\n  var waiting = false;\n\n  /**\n   * Reset the batcher's state.\n   */\n\n  function resetBatcherState() {\n    queue.length = 0;\n    userQueue.length = 0;\n    has = {};\n    circular = {};\n    waiting = false;\n  }\n\n  /**\n   * Flush both queues and run the watchers.\n   */\n\n  function flushBatcherQueue() {\n    var _again = true;\n\n    _function: while (_again) {\n      _again = false;\n\n      runBatcherQueue(queue);\n      runBatcherQueue(userQueue);\n      // user watchers triggered more watchers,\n      // keep flushing until it depletes\n      if (queue.length) {\n        _again = true;\n        continue _function;\n      }\n      // dev tool hook\n      /* istanbul ignore if */\n      if (devtools && config.devtools) {\n        devtools.emit('flush');\n      }\n      resetBatcherState();\n    }\n  }\n\n  /**\n   * Run the watchers in a single queue.\n   *\n   * @param {Array} queue\n   */\n\n  function runBatcherQueue(queue) {\n    // do not cache length because more watchers might be pushed\n    // as we run existing watchers\n    for (var i = 0; i < queue.length; i++) {\n      var watcher = queue[i];\n      var id = watcher.id;\n      has[id] = null;\n      watcher.run();\n      // in dev build, check and stop circular updates.\n      if ('development' !== 'production' && has[id] != null) {\n        circular[id] = (circular[id] || 0) + 1;\n        if (circular[id] > config._maxUpdateCount) {\n          warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n          break;\n        }\n      }\n    }\n    queue.length = 0;\n  }\n\n  /**\n   * Push a watcher into the watcher queue.\n   * Jobs with duplicate IDs will be skipped unless it's\n   * pushed when the queue is being flushed.\n   *\n   * @param {Watcher} watcher\n   *   properties:\n   *   - {Number} id\n   *   - {Function} run\n   */\n\n  function pushWatcher(watcher) {\n    var id = watcher.id;\n    if (has[id] == null) {\n      // push watcher into appropriate queue\n      var q = watcher.user ? userQueue : queue;\n      has[id] = q.length;\n      q.push(watcher);\n      // queue the flush\n      if (!waiting) {\n        waiting = true;\n        nextTick(flushBatcherQueue);\n      }\n    }\n  }\n\n  var uid$2 = 0;\n\n  /**\n   * A watcher parses an expression, collects dependencies,\n   * and fires callback when the expression value changes.\n   * This is used for both the $watch() api and directives.\n   *\n   * @param {Vue} vm\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} options\n   *                 - {Array} filters\n   *                 - {Boolean} twoWay\n   *                 - {Boolean} deep\n   *                 - {Boolean} user\n   *                 - {Boolean} sync\n   *                 - {Boolean} lazy\n   *                 - {Function} [preProcess]\n   *                 - {Function} [postProcess]\n   * @constructor\n   */\n  function Watcher(vm, expOrFn, cb, options) {\n    // mix in options\n    if (options) {\n      extend(this, options);\n    }\n    var isFn = typeof expOrFn === 'function';\n    this.vm = vm;\n    vm._watchers.push(this);\n    this.expression = expOrFn;\n    this.cb = cb;\n    this.id = ++uid$2; // uid for batching\n    this.active = true;\n    this.dirty = this.lazy; // for lazy watchers\n    this.deps = [];\n    this.newDeps = [];\n    this.depIds = new _Set();\n    this.newDepIds = new _Set();\n    this.prevError = null; // for async error stacks\n    // parse expression for getter/setter\n    if (isFn) {\n      this.getter = expOrFn;\n      this.setter = undefined;\n    } else {\n      var res = parseExpression(expOrFn, this.twoWay);\n      this.getter = res.get;\n      this.setter = res.set;\n    }\n    this.value = this.lazy ? undefined : this.get();\n    // state for avoiding false triggers for deep and Array\n    // watchers during vm._digest()\n    this.queued = this.shallow = false;\n  }\n\n  /**\n   * Evaluate the getter, and re-collect dependencies.\n   */\n\n  Watcher.prototype.get = function () {\n    this.beforeGet();\n    var scope = this.scope || this.vm;\n    var value;\n    try {\n      value = this.getter.call(scope, scope);\n    } catch (e) {\n      if ('development' !== 'production' && config.warnExpressionErrors) {\n        warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n      }\n    }\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    if (this.preProcess) {\n      value = this.preProcess(value);\n    }\n    if (this.filters) {\n      value = scope._applyFilters(value, null, this.filters, false);\n    }\n    if (this.postProcess) {\n      value = this.postProcess(value);\n    }\n    this.afterGet();\n    return value;\n  };\n\n  /**\n   * Set the corresponding value with the setter.\n   *\n   * @param {*} value\n   */\n\n  Watcher.prototype.set = function (value) {\n    var scope = this.scope || this.vm;\n    if (this.filters) {\n      value = scope._applyFilters(value, this.value, this.filters, true);\n    }\n    try {\n      this.setter.call(scope, scope, value);\n    } catch (e) {\n      if ('development' !== 'production' && config.warnExpressionErrors) {\n        warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n      }\n    }\n    // two-way sync for v-for alias\n    var forContext = scope.$forContext;\n    if (forContext && forContext.alias === this.expression) {\n      if (forContext.filters) {\n        'development' !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n        return;\n      }\n      forContext._withLock(function () {\n        if (scope.$key) {\n          // original is an object\n          forContext.rawValue[scope.$key] = value;\n        } else {\n          forContext.rawValue.$set(scope.$index, value);\n        }\n      });\n    }\n  };\n\n  /**\n   * Prepare for dependency collection.\n   */\n\n  Watcher.prototype.beforeGet = function () {\n    Dep.target = this;\n  };\n\n  /**\n   * Add a dependency to this directive.\n   *\n   * @param {Dep} dep\n   */\n\n  Watcher.prototype.addDep = function (dep) {\n    var id = dep.id;\n    if (!this.newDepIds.has(id)) {\n      this.newDepIds.add(id);\n      this.newDeps.push(dep);\n      if (!this.depIds.has(id)) {\n        dep.addSub(this);\n      }\n    }\n  };\n\n  /**\n   * Clean up for dependency collection.\n   */\n\n  Watcher.prototype.afterGet = function () {\n    Dep.target = null;\n    var i = this.deps.length;\n    while (i--) {\n      var dep = this.deps[i];\n      if (!this.newDepIds.has(dep.id)) {\n        dep.removeSub(this);\n      }\n    }\n    var tmp = this.depIds;\n    this.depIds = this.newDepIds;\n    this.newDepIds = tmp;\n    this.newDepIds.clear();\n    tmp = this.deps;\n    this.deps = this.newDeps;\n    this.newDeps = tmp;\n    this.newDeps.length = 0;\n  };\n\n  /**\n   * Subscriber interface.\n   * Will be called when a dependency changes.\n   *\n   * @param {Boolean} shallow\n   */\n\n  Watcher.prototype.update = function (shallow) {\n    if (this.lazy) {\n      this.dirty = true;\n    } else if (this.sync || !config.async) {\n      this.run();\n    } else {\n      // if queued, only overwrite shallow with non-shallow,\n      // but not the other way around.\n      this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n      this.queued = true;\n      // record before-push error stack in debug mode\n      /* istanbul ignore if */\n      if ('development' !== 'production' && config.debug) {\n        this.prevError = new Error('[vue] async stack trace');\n      }\n      pushWatcher(this);\n    }\n  };\n\n  /**\n   * Batcher job interface.\n   * Will be called by the batcher.\n   */\n\n  Watcher.prototype.run = function () {\n    if (this.active) {\n      var value = this.get();\n      if (value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated; but only do so if this is a\n      // non-shallow update (caused by a vm digest).\n      (isObject(value) || this.deep) && !this.shallow) {\n        // set new value\n        var oldValue = this.value;\n        this.value = value;\n        // in debug + async mode, when a watcher callbacks\n        // throws, we also throw the saved before-push error\n        // so the full cross-tick stack trace is available.\n        var prevError = this.prevError;\n        /* istanbul ignore if */\n        if ('development' !== 'production' && config.debug && prevError) {\n          this.prevError = null;\n          try {\n            this.cb.call(this.vm, value, oldValue);\n          } catch (e) {\n            nextTick(function () {\n              throw prevError;\n            }, 0);\n            throw e;\n          }\n        } else {\n          this.cb.call(this.vm, value, oldValue);\n        }\n      }\n      this.queued = this.shallow = false;\n    }\n  };\n\n  /**\n   * Evaluate the value of the watcher.\n   * This only gets called for lazy watchers.\n   */\n\n  Watcher.prototype.evaluate = function () {\n    // avoid overwriting another watcher that is being\n    // collected.\n    var current = Dep.target;\n    this.value = this.get();\n    this.dirty = false;\n    Dep.target = current;\n  };\n\n  /**\n   * Depend on all deps collected by this watcher.\n   */\n\n  Watcher.prototype.depend = function () {\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].depend();\n    }\n  };\n\n  /**\n   * Remove self from all dependencies' subcriber list.\n   */\n\n  Watcher.prototype.teardown = function () {\n    if (this.active) {\n      // remove self from vm's watcher list\n      // this is a somewhat expensive operation so we skip it\n      // if the vm is being destroyed or is performing a v-for\n      // re-render (the watcher list is then filtered by v-for).\n      if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n        this.vm._watchers.$remove(this);\n      }\n      var i = this.deps.length;\n      while (i--) {\n        this.deps[i].removeSub(this);\n      }\n      this.active = false;\n      this.vm = this.cb = this.value = null;\n    }\n  };\n\n  /**\n   * Recrusively traverse an object to evoke all converted\n   * getters, so that every nested property inside the object\n   * is collected as a \"deep\" dependency.\n   *\n   * @param {*} val\n   */\n\n  var seenObjects = new _Set();\n  function traverse(val, seen) {\n    var i = undefined,\n        keys = undefined;\n    if (!seen) {\n      seen = seenObjects;\n      seen.clear();\n    }\n    var isA = isArray(val);\n    var isO = isObject(val);\n    if ((isA || isO) && Object.isExtensible(val)) {\n      if (val.__ob__) {\n        var depId = val.__ob__.dep.id;\n        if (seen.has(depId)) {\n          return;\n        } else {\n          seen.add(depId);\n        }\n      }\n      if (isA) {\n        i = val.length;\n        while (i--) traverse(val[i], seen);\n      } else if (isO) {\n        keys = Object.keys(val);\n        i = keys.length;\n        while (i--) traverse(val[keys[i]], seen);\n      }\n    }\n  }\n\n  var text$1 = {\n\n    bind: function bind() {\n      this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n    },\n\n    update: function update(value) {\n      this.el[this.attr] = _toString(value);\n    }\n  };\n\n  var templateCache = new Cache(1000);\n  var idSelectorCache = new Cache(1000);\n\n  var map = {\n    efault: [0, '', ''],\n    legend: [1, '<fieldset>', '</fieldset>'],\n    tr: [2, '<table><tbody>', '</tbody></table>'],\n    col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n  };\n\n  map.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\n  map.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\n  map.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\n  map.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n  /**\n   * Check if a node is a supported template node with a\n   * DocumentFragment content.\n   *\n   * @param {Node} node\n   * @return {Boolean}\n   */\n\n  function isRealTemplate(node) {\n    return isTemplate(node) && isFragment(node.content);\n  }\n\n  var tagRE$1 = /<([\\w:-]+)/;\n  var entityRE = /&#?\\w+?;/;\n  var commentRE = /<!--/;\n\n  /**\n   * Convert a string template to a DocumentFragment.\n   * Determines correct wrapping by tag types. Wrapping\n   * strategy found in jQuery & component/domify.\n   *\n   * @param {String} templateString\n   * @param {Boolean} raw\n   * @return {DocumentFragment}\n   */\n\n  function stringToFragment(templateString, raw) {\n    // try a cache hit first\n    var cacheKey = raw ? templateString : templateString.trim();\n    var hit = templateCache.get(cacheKey);\n    if (hit) {\n      return hit;\n    }\n\n    var frag = document.createDocumentFragment();\n    var tagMatch = templateString.match(tagRE$1);\n    var entityMatch = entityRE.test(templateString);\n    var commentMatch = commentRE.test(templateString);\n\n    if (!tagMatch && !entityMatch && !commentMatch) {\n      // text only, return a single text node.\n      frag.appendChild(document.createTextNode(templateString));\n    } else {\n      var tag = tagMatch && tagMatch[1];\n      var wrap = map[tag] || map.efault;\n      var depth = wrap[0];\n      var prefix = wrap[1];\n      var suffix = wrap[2];\n      var node = document.createElement('div');\n\n      node.innerHTML = prefix + templateString + suffix;\n      while (depth--) {\n        node = node.lastChild;\n      }\n\n      var child;\n      /* eslint-disable no-cond-assign */\n      while (child = node.firstChild) {\n        /* eslint-enable no-cond-assign */\n        frag.appendChild(child);\n      }\n    }\n    if (!raw) {\n      trimNode(frag);\n    }\n    templateCache.put(cacheKey, frag);\n    return frag;\n  }\n\n  /**\n   * Convert a template node to a DocumentFragment.\n   *\n   * @param {Node} node\n   * @return {DocumentFragment}\n   */\n\n  function nodeToFragment(node) {\n    // if its a template tag and the browser supports it,\n    // its content is already a document fragment. However, iOS Safari has\n    // bug when using directly cloned template content with touch\n    // events and can cause crashes when the nodes are removed from DOM, so we\n    // have to treat template elements as string templates. (#2805)\n    /* istanbul ignore if */\n    if (isRealTemplate(node)) {\n      return stringToFragment(node.innerHTML);\n    }\n    // script template\n    if (node.tagName === 'SCRIPT') {\n      return stringToFragment(node.textContent);\n    }\n    // normal node, clone it to avoid mutating the original\n    var clonedNode = cloneNode(node);\n    var frag = document.createDocumentFragment();\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = clonedNode.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n    trimNode(frag);\n    return frag;\n  }\n\n  // Test for the presence of the Safari template cloning bug\n  // https://bugs.webkit.org/showug.cgi?id=137755\n  var hasBrokenTemplate = (function () {\n    /* istanbul ignore else */\n    if (inBrowser) {\n      var a = document.createElement('div');\n      a.innerHTML = '<template>1</template>';\n      return !a.cloneNode(true).firstChild.innerHTML;\n    } else {\n      return false;\n    }\n  })();\n\n  // Test for IE10/11 textarea placeholder clone bug\n  var hasTextareaCloneBug = (function () {\n    /* istanbul ignore else */\n    if (inBrowser) {\n      var t = document.createElement('textarea');\n      t.placeholder = 't';\n      return t.cloneNode(true).value === 't';\n    } else {\n      return false;\n    }\n  })();\n\n  /**\n   * 1. Deal with Safari cloning nested <template> bug by\n   *    manually cloning all template instances.\n   * 2. Deal with IE10/11 textarea placeholder bug by setting\n   *    the correct value after cloning.\n   *\n   * @param {Element|DocumentFragment} node\n   * @return {Element|DocumentFragment}\n   */\n\n  function cloneNode(node) {\n    /* istanbul ignore if */\n    if (!node.querySelectorAll) {\n      return node.cloneNode();\n    }\n    var res = node.cloneNode(true);\n    var i, original, cloned;\n    /* istanbul ignore if */\n    if (hasBrokenTemplate) {\n      var tempClone = res;\n      if (isRealTemplate(node)) {\n        node = node.content;\n        tempClone = res.content;\n      }\n      original = node.querySelectorAll('template');\n      if (original.length) {\n        cloned = tempClone.querySelectorAll('template');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n        }\n      }\n    }\n    /* istanbul ignore if */\n    if (hasTextareaCloneBug) {\n      if (node.tagName === 'TEXTAREA') {\n        res.value = node.value;\n      } else {\n        original = node.querySelectorAll('textarea');\n        if (original.length) {\n          cloned = res.querySelectorAll('textarea');\n          i = cloned.length;\n          while (i--) {\n            cloned[i].value = original[i].value;\n          }\n        }\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Process the template option and normalizes it into a\n   * a DocumentFragment that can be used as a partial or a\n   * instance template.\n   *\n   * @param {*} template\n   *        Possible values include:\n   *        - DocumentFragment object\n   *        - Node object of type Template\n   *        - id selector: '#some-template-id'\n   *        - template string: '<div><span>{{msg}}</span></div>'\n   * @param {Boolean} shouldClone\n   * @param {Boolean} raw\n   *        inline HTML interpolation. Do not check for id\n   *        selector and keep whitespace in the string.\n   * @return {DocumentFragment|undefined}\n   */\n\n  function parseTemplate(template, shouldClone, raw) {\n    var node, frag;\n\n    // if the template is already a document fragment,\n    // do nothing\n    if (isFragment(template)) {\n      trimNode(template);\n      return shouldClone ? cloneNode(template) : template;\n    }\n\n    if (typeof template === 'string') {\n      // id selector\n      if (!raw && template.charAt(0) === '#') {\n        // id selector can be cached too\n        frag = idSelectorCache.get(template);\n        if (!frag) {\n          node = document.getElementById(template.slice(1));\n          if (node) {\n            frag = nodeToFragment(node);\n            // save selector to cache\n            idSelectorCache.put(template, frag);\n          }\n        }\n      } else {\n        // normal string template\n        frag = stringToFragment(template, raw);\n      }\n    } else if (template.nodeType) {\n      // a direct node\n      frag = nodeToFragment(template);\n    }\n\n    return frag && shouldClone ? cloneNode(frag) : frag;\n  }\n\nvar template = Object.freeze({\n    cloneNode: cloneNode,\n    parseTemplate: parseTemplate\n  });\n\n  var html = {\n\n    bind: function bind() {\n      // a comment node means this is a binding for\n      // {{{ inline unescaped html }}}\n      if (this.el.nodeType === 8) {\n        // hold nodes\n        this.nodes = [];\n        // replace the placeholder with proper anchor\n        this.anchor = createAnchor('v-html');\n        replace(this.el, this.anchor);\n      }\n    },\n\n    update: function update(value) {\n      value = _toString(value);\n      if (this.nodes) {\n        this.swap(value);\n      } else {\n        this.el.innerHTML = value;\n      }\n    },\n\n    swap: function swap(value) {\n      // remove old nodes\n      var i = this.nodes.length;\n      while (i--) {\n        remove(this.nodes[i]);\n      }\n      // convert new value to a fragment\n      // do not attempt to retrieve from id selector\n      var frag = parseTemplate(value, true, true);\n      // save a reference to these nodes so we can remove later\n      this.nodes = toArray(frag.childNodes);\n      before(frag, this.anchor);\n    }\n  };\n\n  /**\n   * Abstraction for a partially-compiled fragment.\n   * Can optionally compile content with a child scope.\n   *\n   * @param {Function} linker\n   * @param {Vue} vm\n   * @param {DocumentFragment} frag\n   * @param {Vue} [host]\n   * @param {Object} [scope]\n   * @param {Fragment} [parentFrag]\n   */\n  function Fragment(linker, vm, frag, host, scope, parentFrag) {\n    this.children = [];\n    this.childFrags = [];\n    this.vm = vm;\n    this.scope = scope;\n    this.inserted = false;\n    this.parentFrag = parentFrag;\n    if (parentFrag) {\n      parentFrag.childFrags.push(this);\n    }\n    this.unlink = linker(vm, frag, host, scope, this);\n    var single = this.single = frag.childNodes.length === 1 &&\n    // do not go single mode if the only node is an anchor\n    !frag.childNodes[0].__v_anchor;\n    if (single) {\n      this.node = frag.childNodes[0];\n      this.before = singleBefore;\n      this.remove = singleRemove;\n    } else {\n      this.node = createAnchor('fragment-start');\n      this.end = createAnchor('fragment-end');\n      this.frag = frag;\n      prepend(this.node, frag);\n      frag.appendChild(this.end);\n      this.before = multiBefore;\n      this.remove = multiRemove;\n    }\n    this.node.__v_frag = this;\n  }\n\n  /**\n   * Call attach/detach for all components contained within\n   * this fragment. Also do so recursively for all child\n   * fragments.\n   *\n   * @param {Function} hook\n   */\n\n  Fragment.prototype.callHook = function (hook) {\n    var i, l;\n    for (i = 0, l = this.childFrags.length; i < l; i++) {\n      this.childFrags[i].callHook(hook);\n    }\n    for (i = 0, l = this.children.length; i < l; i++) {\n      hook(this.children[i]);\n    }\n  };\n\n  /**\n   * Insert fragment before target, single node version\n   *\n   * @param {Node} target\n   * @param {Boolean} withTransition\n   */\n\n  function singleBefore(target, withTransition) {\n    this.inserted = true;\n    var method = withTransition !== false ? beforeWithTransition : before;\n    method(this.node, target, this.vm);\n    if (inDoc(this.node)) {\n      this.callHook(attach);\n    }\n  }\n\n  /**\n   * Remove fragment, single node version\n   */\n\n  function singleRemove() {\n    this.inserted = false;\n    var shouldCallRemove = inDoc(this.node);\n    var self = this;\n    this.beforeRemove();\n    removeWithTransition(this.node, this.vm, function () {\n      if (shouldCallRemove) {\n        self.callHook(detach);\n      }\n      self.destroy();\n    });\n  }\n\n  /**\n   * Insert fragment before target, multi-nodes version\n   *\n   * @param {Node} target\n   * @param {Boolean} withTransition\n   */\n\n  function multiBefore(target, withTransition) {\n    this.inserted = true;\n    var vm = this.vm;\n    var method = withTransition !== false ? beforeWithTransition : before;\n    mapNodeRange(this.node, this.end, function (node) {\n      method(node, target, vm);\n    });\n    if (inDoc(this.node)) {\n      this.callHook(attach);\n    }\n  }\n\n  /**\n   * Remove fragment, multi-nodes version\n   */\n\n  function multiRemove() {\n    this.inserted = false;\n    var self = this;\n    var shouldCallRemove = inDoc(this.node);\n    this.beforeRemove();\n    removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n      if (shouldCallRemove) {\n        self.callHook(detach);\n      }\n      self.destroy();\n    });\n  }\n\n  /**\n   * Prepare the fragment for removal.\n   */\n\n  Fragment.prototype.beforeRemove = function () {\n    var i, l;\n    for (i = 0, l = this.childFrags.length; i < l; i++) {\n      // call the same method recursively on child\n      // fragments, depth-first\n      this.childFrags[i].beforeRemove(false);\n    }\n    for (i = 0, l = this.children.length; i < l; i++) {\n      // Call destroy for all contained instances,\n      // with remove:false and defer:true.\n      // Defer is necessary because we need to\n      // keep the children to call detach hooks\n      // on them.\n      this.children[i].$destroy(false, true);\n    }\n    var dirs = this.unlink.dirs;\n    for (i = 0, l = dirs.length; i < l; i++) {\n      // disable the watchers on all the directives\n      // so that the rendered content stays the same\n      // during removal.\n      dirs[i]._watcher && dirs[i]._watcher.teardown();\n    }\n  };\n\n  /**\n   * Destroy the fragment.\n   */\n\n  Fragment.prototype.destroy = function () {\n    if (this.parentFrag) {\n      this.parentFrag.childFrags.$remove(this);\n    }\n    this.node.__v_frag = null;\n    this.unlink();\n  };\n\n  /**\n   * Call attach hook for a Vue instance.\n   *\n   * @param {Vue} child\n   */\n\n  function attach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Call detach hook for a Vue instance.\n   *\n   * @param {Vue} child\n   */\n\n  function detach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  var linkerCache = new Cache(5000);\n\n  /**\n   * A factory that can be used to create instances of a\n   * fragment. Caches the compiled linker if possible.\n   *\n   * @param {Vue} vm\n   * @param {Element|String} el\n   */\n  function FragmentFactory(vm, el) {\n    this.vm = vm;\n    var template;\n    var isString = typeof el === 'string';\n    if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n      template = parseTemplate(el, true);\n    } else {\n      template = document.createDocumentFragment();\n      template.appendChild(el);\n    }\n    this.template = template;\n    // linker can be cached, but only for components\n    var linker;\n    var cid = vm.constructor.cid;\n    if (cid > 0) {\n      var cacheId = cid + (isString ? el : getOuterHTML(el));\n      linker = linkerCache.get(cacheId);\n      if (!linker) {\n        linker = compile(template, vm.$options, true);\n        linkerCache.put(cacheId, linker);\n      }\n    } else {\n      linker = compile(template, vm.$options, true);\n    }\n    this.linker = linker;\n  }\n\n  /**\n   * Create a fragment instance with given host and scope.\n   *\n   * @param {Vue} host\n   * @param {Object} scope\n   * @param {Fragment} parentFrag\n   */\n\n  FragmentFactory.prototype.create = function (host, scope, parentFrag) {\n    var frag = cloneNode(this.template);\n    return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n  };\n\n  var ON = 700;\n  var MODEL = 800;\n  var BIND = 850;\n  var TRANSITION = 1100;\n  var EL = 1500;\n  var COMPONENT = 1500;\n  var PARTIAL = 1750;\n  var IF = 2100;\n  var FOR = 2200;\n  var SLOT = 2300;\n\n  var uid$3 = 0;\n\n  var vFor = {\n\n    priority: FOR,\n    terminal: true,\n\n    params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n    bind: function bind() {\n      // support \"item in/of items\" syntax\n      var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n      if (inMatch) {\n        var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n        if (itMatch) {\n          this.iterator = itMatch[1].trim();\n          this.alias = itMatch[2].trim();\n        } else {\n          this.alias = inMatch[1].trim();\n        }\n        this.expression = inMatch[2];\n      }\n\n      if (!this.alias) {\n        'development' !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n        return;\n      }\n\n      // uid as a cache identifier\n      this.id = '__v-for__' + ++uid$3;\n\n      // check if this is an option list,\n      // so that we know if we need to update the <select>'s\n      // v-model when the option list has changed.\n      // because v-model has a lower priority than v-for,\n      // the v-model is not bound here yet, so we have to\n      // retrive it in the actual updateModel() function.\n      var tag = this.el.tagName;\n      this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n      // setup anchor nodes\n      this.start = createAnchor('v-for-start');\n      this.end = createAnchor('v-for-end');\n      replace(this.el, this.end);\n      before(this.start, this.end);\n\n      // cache\n      this.cache = Object.create(null);\n\n      // fragment factory\n      this.factory = new FragmentFactory(this.vm, this.el);\n    },\n\n    update: function update(data) {\n      this.diff(data);\n      this.updateRef();\n      this.updateModel();\n    },\n\n    /**\n     * Diff, based on new data and old data, determine the\n     * minimum amount of DOM manipulations needed to make the\n     * DOM reflect the new data Array.\n     *\n     * The algorithm diffs the new data Array by storing a\n     * hidden reference to an owner vm instance on previously\n     * seen data. This allows us to achieve O(n) which is\n     * better than a levenshtein distance based algorithm,\n     * which is O(m * n).\n     *\n     * @param {Array} data\n     */\n\n    diff: function diff(data) {\n      // check if the Array was converted from an Object\n      var item = data[0];\n      var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n      var trackByKey = this.params.trackBy;\n      var oldFrags = this.frags;\n      var frags = this.frags = new Array(data.length);\n      var alias = this.alias;\n      var iterator = this.iterator;\n      var start = this.start;\n      var end = this.end;\n      var inDocument = inDoc(start);\n      var init = !oldFrags;\n      var i, l, frag, key, value, primitive;\n\n      // First pass, go through the new Array and fill up\n      // the new frags array. If a piece of data has a cached\n      // instance for it, we reuse it. Otherwise build a new\n      // instance.\n      for (i = 0, l = data.length; i < l; i++) {\n        item = data[i];\n        key = convertedFromObject ? item.$key : null;\n        value = convertedFromObject ? item.$value : item;\n        primitive = !isObject(value);\n        frag = !init && this.getCachedFrag(value, i, key);\n        if (frag) {\n          // reusable fragment\n          frag.reused = true;\n          // update $index\n          frag.scope.$index = i;\n          // update $key\n          if (key) {\n            frag.scope.$key = key;\n          }\n          // update iterator\n          if (iterator) {\n            frag.scope[iterator] = key !== null ? key : i;\n          }\n          // update data for track-by, object repeat &\n          // primitive values.\n          if (trackByKey || convertedFromObject || primitive) {\n            withoutConversion(function () {\n              frag.scope[alias] = value;\n            });\n          }\n        } else {\n          // new isntance\n          frag = this.create(value, alias, i, key);\n          frag.fresh = !init;\n        }\n        frags[i] = frag;\n        if (init) {\n          frag.before(end);\n        }\n      }\n\n      // we're done for the initial render.\n      if (init) {\n        return;\n      }\n\n      // Second pass, go through the old fragments and\n      // destroy those who are not reused (and remove them\n      // from cache)\n      var removalIndex = 0;\n      var totalRemoved = oldFrags.length - frags.length;\n      // when removing a large number of fragments, watcher removal\n      // turns out to be a perf bottleneck, so we batch the watcher\n      // removals into a single filter call!\n      this.vm._vForRemoving = true;\n      for (i = 0, l = oldFrags.length; i < l; i++) {\n        frag = oldFrags[i];\n        if (!frag.reused) {\n          this.deleteCachedFrag(frag);\n          this.remove(frag, removalIndex++, totalRemoved, inDocument);\n        }\n      }\n      this.vm._vForRemoving = false;\n      if (removalIndex) {\n        this.vm._watchers = this.vm._watchers.filter(function (w) {\n          return w.active;\n        });\n      }\n\n      // Final pass, move/insert new fragments into the\n      // right place.\n      var targetPrev, prevEl, currentPrev;\n      var insertionIndex = 0;\n      for (i = 0, l = frags.length; i < l; i++) {\n        frag = frags[i];\n        // this is the frag that we should be after\n        targetPrev = frags[i - 1];\n        prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n        if (frag.reused && !frag.staggerCb) {\n          currentPrev = findPrevFrag(frag, start, this.id);\n          if (currentPrev !== targetPrev && (!currentPrev ||\n          // optimization for moving a single item.\n          // thanks to suggestions by @livoras in #1807\n          findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n            this.move(frag, prevEl);\n          }\n        } else {\n          // new instance, or still in stagger.\n          // insert with updated stagger index.\n          this.insert(frag, insertionIndex++, prevEl, inDocument);\n        }\n        frag.reused = frag.fresh = false;\n      }\n    },\n\n    /**\n     * Create a new fragment instance.\n     *\n     * @param {*} value\n     * @param {String} alias\n     * @param {Number} index\n     * @param {String} [key]\n     * @return {Fragment}\n     */\n\n    create: function create(value, alias, index, key) {\n      var host = this._host;\n      // create iteration scope\n      var parentScope = this._scope || this.vm;\n      var scope = Object.create(parentScope);\n      // ref holder for the scope\n      scope.$refs = Object.create(parentScope.$refs);\n      scope.$els = Object.create(parentScope.$els);\n      // make sure point $parent to parent scope\n      scope.$parent = parentScope;\n      // for two-way binding on alias\n      scope.$forContext = this;\n      // define scope properties\n      // important: define the scope alias without forced conversion\n      // so that frozen data structures remain non-reactive.\n      withoutConversion(function () {\n        defineReactive(scope, alias, value);\n      });\n      defineReactive(scope, '$index', index);\n      if (key) {\n        defineReactive(scope, '$key', key);\n      } else if (scope.$key) {\n        // avoid accidental fallback\n        def(scope, '$key', null);\n      }\n      if (this.iterator) {\n        defineReactive(scope, this.iterator, key !== null ? key : index);\n      }\n      var frag = this.factory.create(host, scope, this._frag);\n      frag.forId = this.id;\n      this.cacheFrag(value, frag, index, key);\n      return frag;\n    },\n\n    /**\n     * Update the v-ref on owner vm.\n     */\n\n    updateRef: function updateRef() {\n      var ref = this.descriptor.ref;\n      if (!ref) return;\n      var hash = (this._scope || this.vm).$refs;\n      var refs;\n      if (!this.fromObject) {\n        refs = this.frags.map(findVmFromFrag);\n      } else {\n        refs = {};\n        this.frags.forEach(function (frag) {\n          refs[frag.scope.$key] = findVmFromFrag(frag);\n        });\n      }\n      hash[ref] = refs;\n    },\n\n    /**\n     * For option lists, update the containing v-model on\n     * parent <select>.\n     */\n\n    updateModel: function updateModel() {\n      if (this.isOption) {\n        var parent = this.start.parentNode;\n        var model = parent && parent.__v_model;\n        if (model) {\n          model.forceUpdate();\n        }\n      }\n    },\n\n    /**\n     * Insert a fragment. Handles staggering.\n     *\n     * @param {Fragment} frag\n     * @param {Number} index\n     * @param {Node} prevEl\n     * @param {Boolean} inDocument\n     */\n\n    insert: function insert(frag, index, prevEl, inDocument) {\n      if (frag.staggerCb) {\n        frag.staggerCb.cancel();\n        frag.staggerCb = null;\n      }\n      var staggerAmount = this.getStagger(frag, index, null, 'enter');\n      if (inDocument && staggerAmount) {\n        // create an anchor and insert it synchronously,\n        // so that we can resolve the correct order without\n        // worrying about some elements not inserted yet\n        var anchor = frag.staggerAnchor;\n        if (!anchor) {\n          anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n          anchor.__v_frag = frag;\n        }\n        after(anchor, prevEl);\n        var op = frag.staggerCb = cancellable(function () {\n          frag.staggerCb = null;\n          frag.before(anchor);\n          remove(anchor);\n        });\n        setTimeout(op, staggerAmount);\n      } else {\n        var target = prevEl.nextSibling;\n        /* istanbul ignore if */\n        if (!target) {\n          // reset end anchor position in case the position was messed up\n          // by an external drag-n-drop library.\n          after(this.end, prevEl);\n          target = this.end;\n        }\n        frag.before(target);\n      }\n    },\n\n    /**\n     * Remove a fragment. Handles staggering.\n     *\n     * @param {Fragment} frag\n     * @param {Number} index\n     * @param {Number} total\n     * @param {Boolean} inDocument\n     */\n\n    remove: function remove(frag, index, total, inDocument) {\n      if (frag.staggerCb) {\n        frag.staggerCb.cancel();\n        frag.staggerCb = null;\n        // it's not possible for the same frag to be removed\n        // twice, so if we have a pending stagger callback,\n        // it means this frag is queued for enter but removed\n        // before its transition started. Since it is already\n        // destroyed, we can just leave it in detached state.\n        return;\n      }\n      var staggerAmount = this.getStagger(frag, index, total, 'leave');\n      if (inDocument && staggerAmount) {\n        var op = frag.staggerCb = cancellable(function () {\n          frag.staggerCb = null;\n          frag.remove();\n        });\n        setTimeout(op, staggerAmount);\n      } else {\n        frag.remove();\n      }\n    },\n\n    /**\n     * Move a fragment to a new position.\n     * Force no transition.\n     *\n     * @param {Fragment} frag\n     * @param {Node} prevEl\n     */\n\n    move: function move(frag, prevEl) {\n      // fix a common issue with Sortable:\n      // if prevEl doesn't have nextSibling, this means it's\n      // been dragged after the end anchor. Just re-position\n      // the end anchor to the end of the container.\n      /* istanbul ignore if */\n      if (!prevEl.nextSibling) {\n        this.end.parentNode.appendChild(this.end);\n      }\n      frag.before(prevEl.nextSibling, false);\n    },\n\n    /**\n     * Cache a fragment using track-by or the object key.\n     *\n     * @param {*} value\n     * @param {Fragment} frag\n     * @param {Number} index\n     * @param {String} [key]\n     */\n\n    cacheFrag: function cacheFrag(value, frag, index, key) {\n      var trackByKey = this.params.trackBy;\n      var cache = this.cache;\n      var primitive = !isObject(value);\n      var id;\n      if (key || trackByKey || primitive) {\n        id = getTrackByKey(index, key, value, trackByKey);\n        if (!cache[id]) {\n          cache[id] = frag;\n        } else if (trackByKey !== '$index') {\n          'development' !== 'production' && this.warnDuplicate(value);\n        }\n      } else {\n        id = this.id;\n        if (hasOwn(value, id)) {\n          if (value[id] === null) {\n            value[id] = frag;\n          } else {\n            'development' !== 'production' && this.warnDuplicate(value);\n          }\n        } else if (Object.isExtensible(value)) {\n          def(value, id, frag);\n        } else if ('development' !== 'production') {\n          warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n        }\n      }\n      frag.raw = value;\n    },\n\n    /**\n     * Get a cached fragment from the value/index/key\n     *\n     * @param {*} value\n     * @param {Number} index\n     * @param {String} key\n     * @return {Fragment}\n     */\n\n    getCachedFrag: function getCachedFrag(value, index, key) {\n      var trackByKey = this.params.trackBy;\n      var primitive = !isObject(value);\n      var frag;\n      if (key || trackByKey || primitive) {\n        var id = getTrackByKey(index, key, value, trackByKey);\n        frag = this.cache[id];\n      } else {\n        frag = value[this.id];\n      }\n      if (frag && (frag.reused || frag.fresh)) {\n        'development' !== 'production' && this.warnDuplicate(value);\n      }\n      return frag;\n    },\n\n    /**\n     * Delete a fragment from cache.\n     *\n     * @param {Fragment} frag\n     */\n\n    deleteCachedFrag: function deleteCachedFrag(frag) {\n      var value = frag.raw;\n      var trackByKey = this.params.trackBy;\n      var scope = frag.scope;\n      var index = scope.$index;\n      // fix #948: avoid accidentally fall through to\n      // a parent repeater which happens to have $key.\n      var key = hasOwn(scope, '$key') && scope.$key;\n      var primitive = !isObject(value);\n      if (trackByKey || key || primitive) {\n        var id = getTrackByKey(index, key, value, trackByKey);\n        this.cache[id] = null;\n      } else {\n        value[this.id] = null;\n        frag.raw = null;\n      }\n    },\n\n    /**\n     * Get the stagger amount for an insertion/removal.\n     *\n     * @param {Fragment} frag\n     * @param {Number} index\n     * @param {Number} total\n     * @param {String} type\n     */\n\n    getStagger: function getStagger(frag, index, total, type) {\n      type = type + 'Stagger';\n      var trans = frag.node.__v_trans;\n      var hooks = trans && trans.hooks;\n      var hook = hooks && (hooks[type] || hooks.stagger);\n      return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n    },\n\n    /**\n     * Pre-process the value before piping it through the\n     * filters. This is passed to and called by the watcher.\n     */\n\n    _preProcess: function _preProcess(value) {\n      // regardless of type, store the un-filtered raw value.\n      this.rawValue = value;\n      return value;\n    },\n\n    /**\n     * Post-process the value after it has been piped through\n     * the filters. This is passed to and called by the watcher.\n     *\n     * It is necessary for this to be called during the\n     * watcher's dependency collection phase because we want\n     * the v-for to update when the source Object is mutated.\n     */\n\n    _postProcess: function _postProcess(value) {\n      if (isArray(value)) {\n        return value;\n      } else if (isPlainObject(value)) {\n        // convert plain object to array.\n        var keys = Object.keys(value);\n        var i = keys.length;\n        var res = new Array(i);\n        var key;\n        while (i--) {\n          key = keys[i];\n          res[i] = {\n            $key: key,\n            $value: value[key]\n          };\n        }\n        return res;\n      } else {\n        if (typeof value === 'number' && !isNaN(value)) {\n          value = range(value);\n        }\n        return value || [];\n      }\n    },\n\n    unbind: function unbind() {\n      if (this.descriptor.ref) {\n        (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n      }\n      if (this.frags) {\n        var i = this.frags.length;\n        var frag;\n        while (i--) {\n          frag = this.frags[i];\n          this.deleteCachedFrag(frag);\n          frag.destroy();\n        }\n      }\n    }\n  };\n\n  /**\n   * Helper to find the previous element that is a fragment\n   * anchor. This is necessary because a destroyed frag's\n   * element could still be lingering in the DOM before its\n   * leaving transition finishes, but its inserted flag\n   * should have been set to false so we can skip them.\n   *\n   * If this is a block repeat, we want to make sure we only\n   * return frag that is bound to this v-for. (see #929)\n   *\n   * @param {Fragment} frag\n   * @param {Comment|Text} anchor\n   * @param {String} id\n   * @return {Fragment}\n   */\n\n  function findPrevFrag(frag, anchor, id) {\n    var el = frag.node.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__v_frag;\n    while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n      el = el.previousSibling;\n      /* istanbul ignore if */\n      if (!el) return;\n      frag = el.__v_frag;\n    }\n    return frag;\n  }\n\n  /**\n   * Find a vm from a fragment.\n   *\n   * @param {Fragment} frag\n   * @return {Vue|undefined}\n   */\n\n  function findVmFromFrag(frag) {\n    var node = frag.node;\n    // handle multi-node frag\n    if (frag.end) {\n      while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n        node = node.nextSibling;\n      }\n    }\n    return node.__vue__;\n  }\n\n  /**\n   * Create a range array from given number.\n   *\n   * @param {Number} n\n   * @return {Array}\n   */\n\n  function range(n) {\n    var i = -1;\n    var ret = new Array(Math.floor(n));\n    while (++i < n) {\n      ret[i] = i;\n    }\n    return ret;\n  }\n\n  /**\n   * Get the track by key for an item.\n   *\n   * @param {Number} index\n   * @param {String} key\n   * @param {*} value\n   * @param {String} [trackByKey]\n   */\n\n  function getTrackByKey(index, key, value, trackByKey) {\n    return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n  }\n\n  if ('development' !== 'production') {\n    vFor.warnDuplicate = function (value) {\n      warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n    };\n  }\n\n  var vIf = {\n\n    priority: IF,\n    terminal: true,\n\n    bind: function bind() {\n      var el = this.el;\n      if (!el.__vue__) {\n        // check else block\n        var next = el.nextElementSibling;\n        if (next && getAttr(next, 'v-else') !== null) {\n          remove(next);\n          this.elseEl = next;\n        }\n        // check main block\n        this.anchor = createAnchor('v-if');\n        replace(el, this.anchor);\n      } else {\n        'development' !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n        this.invalid = true;\n      }\n    },\n\n    update: function update(value) {\n      if (this.invalid) return;\n      if (value) {\n        if (!this.frag) {\n          this.insert();\n        }\n      } else {\n        this.remove();\n      }\n    },\n\n    insert: function insert() {\n      if (this.elseFrag) {\n        this.elseFrag.remove();\n        this.elseFrag = null;\n      }\n      // lazy init factory\n      if (!this.factory) {\n        this.factory = new FragmentFactory(this.vm, this.el);\n      }\n      this.frag = this.factory.create(this._host, this._scope, this._frag);\n      this.frag.before(this.anchor);\n    },\n\n    remove: function remove() {\n      if (this.frag) {\n        this.frag.remove();\n        this.frag = null;\n      }\n      if (this.elseEl && !this.elseFrag) {\n        if (!this.elseFactory) {\n          this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n        }\n        this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n        this.elseFrag.before(this.anchor);\n      }\n    },\n\n    unbind: function unbind() {\n      if (this.frag) {\n        this.frag.destroy();\n      }\n      if (this.elseFrag) {\n        this.elseFrag.destroy();\n      }\n    }\n  };\n\n  var show = {\n\n    bind: function bind() {\n      // check else block\n      var next = this.el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        this.elseEl = next;\n      }\n    },\n\n    update: function update(value) {\n      this.apply(this.el, value);\n      if (this.elseEl) {\n        this.apply(this.elseEl, !value);\n      }\n    },\n\n    apply: function apply(el, value) {\n      if (inDoc(el)) {\n        applyTransition(el, value ? 1 : -1, toggle, this.vm);\n      } else {\n        toggle();\n      }\n      function toggle() {\n        el.style.display = value ? '' : 'none';\n      }\n    }\n  };\n\n  var text$2 = {\n\n    bind: function bind() {\n      var self = this;\n      var el = this.el;\n      var isRange = el.type === 'range';\n      var lazy = this.params.lazy;\n      var number = this.params.number;\n      var debounce = this.params.debounce;\n\n      // handle composition events.\n      //   http://blog.evanyou.me/2014/01/03/composition-event/\n      // skip this for Android because it handles composition\n      // events quite differently. Android doesn't trigger\n      // composition events for language input methods e.g.\n      // Chinese, but instead triggers them for spelling\n      // suggestions... (see Discussion/#162)\n      var composing = false;\n      if (!isAndroid && !isRange) {\n        this.on('compositionstart', function () {\n          composing = true;\n        });\n        this.on('compositionend', function () {\n          composing = false;\n          // in IE11 the \"compositionend\" event fires AFTER\n          // the \"input\" event, so the input handler is blocked\n          // at the end... have to call it here.\n          //\n          // #1327: in lazy mode this is unecessary.\n          if (!lazy) {\n            self.listener();\n          }\n        });\n      }\n\n      // prevent messing with the input when user is typing,\n      // and force update on blur.\n      this.focused = false;\n      if (!isRange && !lazy) {\n        this.on('focus', function () {\n          self.focused = true;\n        });\n        this.on('blur', function () {\n          self.focused = false;\n          // do not sync value after fragment removal (#2017)\n          if (!self._frag || self._frag.inserted) {\n            self.rawListener();\n          }\n        });\n      }\n\n      // Now attach the main listener\n      this.listener = this.rawListener = function () {\n        if (composing || !self._bound) {\n          return;\n        }\n        var val = number || isRange ? toNumber(el.value) : el.value;\n        self.set(val);\n        // force update on next tick to avoid lock & same value\n        // also only update when user is not typing\n        nextTick(function () {\n          if (self._bound && !self.focused) {\n            self.update(self._watcher.value);\n          }\n        });\n      };\n\n      // apply debounce\n      if (debounce) {\n        this.listener = _debounce(this.listener, debounce);\n      }\n\n      // Support jQuery events, since jQuery.trigger() doesn't\n      // trigger native events in some cases and some plugins\n      // rely on $.trigger()\n      //\n      // We want to make sure if a listener is attached using\n      // jQuery, it is also removed with jQuery, that's why\n      // we do the check for each directive instance and\n      // store that check result on itself. This also allows\n      // easier test coverage control by unsetting the global\n      // jQuery variable in tests.\n      this.hasjQuery = typeof jQuery === 'function';\n      if (this.hasjQuery) {\n        var method = jQuery.fn.on ? 'on' : 'bind';\n        jQuery(el)[method]('change', this.rawListener);\n        if (!lazy) {\n          jQuery(el)[method]('input', this.listener);\n        }\n      } else {\n        this.on('change', this.rawListener);\n        if (!lazy) {\n          this.on('input', this.listener);\n        }\n      }\n\n      // IE9 doesn't fire input event on backspace/del/cut\n      if (!lazy && isIE9) {\n        this.on('cut', function () {\n          nextTick(self.listener);\n        });\n        this.on('keyup', function (e) {\n          if (e.keyCode === 46 || e.keyCode === 8) {\n            self.listener();\n          }\n        });\n      }\n\n      // set initial value if present\n      if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n        this.afterBind = this.listener;\n      }\n    },\n\n    update: function update(value) {\n      // #3029 only update when the value changes. This prevent\n      // browsers from overwriting values like selectionStart\n      value = _toString(value);\n      if (value !== this.el.value) this.el.value = value;\n    },\n\n    unbind: function unbind() {\n      var el = this.el;\n      if (this.hasjQuery) {\n        var method = jQuery.fn.off ? 'off' : 'unbind';\n        jQuery(el)[method]('change', this.listener);\n        jQuery(el)[method]('input', this.listener);\n      }\n    }\n  };\n\n  var radio = {\n\n    bind: function bind() {\n      var self = this;\n      var el = this.el;\n\n      this.getValue = function () {\n        // value overwrite via v-bind:value\n        if (el.hasOwnProperty('_value')) {\n          return el._value;\n        }\n        var val = el.value;\n        if (self.params.number) {\n          val = toNumber(val);\n        }\n        return val;\n      };\n\n      this.listener = function () {\n        self.set(self.getValue());\n      };\n      this.on('change', this.listener);\n\n      if (el.hasAttribute('checked')) {\n        this.afterBind = this.listener;\n      }\n    },\n\n    update: function update(value) {\n      this.el.checked = looseEqual(value, this.getValue());\n    }\n  };\n\n  var select = {\n\n    bind: function bind() {\n      var _this = this;\n\n      var self = this;\n      var el = this.el;\n\n      // method to force update DOM using latest value.\n      this.forceUpdate = function () {\n        if (self._watcher) {\n          self.update(self._watcher.get());\n        }\n      };\n\n      // check if this is a multiple select\n      var multiple = this.multiple = el.hasAttribute('multiple');\n\n      // attach listener\n      this.listener = function () {\n        var value = getValue(el, multiple);\n        value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n        self.set(value);\n      };\n      this.on('change', this.listener);\n\n      // if has initial value, set afterBind\n      var initValue = getValue(el, multiple, true);\n      if (multiple && initValue.length || !multiple && initValue !== null) {\n        this.afterBind = this.listener;\n      }\n\n      // All major browsers except Firefox resets\n      // selectedIndex with value -1 to 0 when the element\n      // is appended to a new parent, therefore we have to\n      // force a DOM update whenever that happens...\n      this.vm.$on('hook:attached', function () {\n        nextTick(_this.forceUpdate);\n      });\n      if (!inDoc(el)) {\n        nextTick(this.forceUpdate);\n      }\n    },\n\n    update: function update(value) {\n      var el = this.el;\n      el.selectedIndex = -1;\n      var multi = this.multiple && isArray(value);\n      var options = el.options;\n      var i = options.length;\n      var op, val;\n      while (i--) {\n        op = options[i];\n        val = op.hasOwnProperty('_value') ? op._value : op.value;\n        /* eslint-disable eqeqeq */\n        op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n        /* eslint-enable eqeqeq */\n      }\n    },\n\n    unbind: function unbind() {\n      /* istanbul ignore next */\n      this.vm.$off('hook:attached', this.forceUpdate);\n    }\n  };\n\n  /**\n   * Get select value\n   *\n   * @param {SelectElement} el\n   * @param {Boolean} multi\n   * @param {Boolean} init\n   * @return {Array|*}\n   */\n\n  function getValue(el, multi, init) {\n    var res = multi ? [] : null;\n    var op, val, selected;\n    for (var i = 0, l = el.options.length; i < l; i++) {\n      op = el.options[i];\n      selected = init ? op.hasAttribute('selected') : op.selected;\n      if (selected) {\n        val = op.hasOwnProperty('_value') ? op._value : op.value;\n        if (multi) {\n          res.push(val);\n        } else {\n          return val;\n        }\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Native Array.indexOf uses strict equal, but in this\n   * case we need to match string/numbers with custom equal.\n   *\n   * @param {Array} arr\n   * @param {*} val\n   */\n\n  function indexOf$1(arr, val) {\n    var i = arr.length;\n    while (i--) {\n      if (looseEqual(arr[i], val)) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  var checkbox = {\n\n    bind: function bind() {\n      var self = this;\n      var el = this.el;\n\n      this.getValue = function () {\n        return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n      };\n\n      function getBooleanValue() {\n        var val = el.checked;\n        if (val && el.hasOwnProperty('_trueValue')) {\n          return el._trueValue;\n        }\n        if (!val && el.hasOwnProperty('_falseValue')) {\n          return el._falseValue;\n        }\n        return val;\n      }\n\n      this.listener = function () {\n        var model = self._watcher.value;\n        if (isArray(model)) {\n          var val = self.getValue();\n          if (el.checked) {\n            if (indexOf(model, val) < 0) {\n              model.push(val);\n            }\n          } else {\n            model.$remove(val);\n          }\n        } else {\n          self.set(getBooleanValue());\n        }\n      };\n\n      this.on('change', this.listener);\n      if (el.hasAttribute('checked')) {\n        this.afterBind = this.listener;\n      }\n    },\n\n    update: function update(value) {\n      var el = this.el;\n      if (isArray(value)) {\n        el.checked = indexOf(value, this.getValue()) > -1;\n      } else {\n        if (el.hasOwnProperty('_trueValue')) {\n          el.checked = looseEqual(value, el._trueValue);\n        } else {\n          el.checked = !!value;\n        }\n      }\n    }\n  };\n\n  var handlers = {\n    text: text$2,\n    radio: radio,\n    select: select,\n    checkbox: checkbox\n  };\n\n  var model = {\n\n    priority: MODEL,\n    twoWay: true,\n    handlers: handlers,\n    params: ['lazy', 'number', 'debounce'],\n\n    /**\n     * Possible elements:\n     *   <select>\n     *   <textarea>\n     *   <input type=\"*\">\n     *     - text\n     *     - checkbox\n     *     - radio\n     *     - number\n     */\n\n    bind: function bind() {\n      // friendly warning...\n      this.checkFilters();\n      if (this.hasRead && !this.hasWrite) {\n        'development' !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n      }\n      var el = this.el;\n      var tag = el.tagName;\n      var handler;\n      if (tag === 'INPUT') {\n        handler = handlers[el.type] || handlers.text;\n      } else if (tag === 'SELECT') {\n        handler = handlers.select;\n      } else if (tag === 'TEXTAREA') {\n        handler = handlers.text;\n      } else {\n        'development' !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n        return;\n      }\n      el.__v_model = this;\n      handler.bind.call(this);\n      this.update = handler.update;\n      this._unbind = handler.unbind;\n    },\n\n    /**\n     * Check read/write filter stats.\n     */\n\n    checkFilters: function checkFilters() {\n      var filters = this.filters;\n      if (!filters) return;\n      var i = filters.length;\n      while (i--) {\n        var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n        if (typeof filter === 'function' || filter.read) {\n          this.hasRead = true;\n        }\n        if (filter.write) {\n          this.hasWrite = true;\n        }\n      }\n    },\n\n    unbind: function unbind() {\n      this.el.__v_model = null;\n      this._unbind && this._unbind();\n    }\n  };\n\n  // keyCode aliases\n  var keyCodes = {\n    esc: 27,\n    tab: 9,\n    enter: 13,\n    space: 32,\n    'delete': [8, 46],\n    up: 38,\n    left: 37,\n    right: 39,\n    down: 40\n  };\n\n  function keyFilter(handler, keys) {\n    var codes = keys.map(function (key) {\n      var charCode = key.charCodeAt(0);\n      if (charCode > 47 && charCode < 58) {\n        return parseInt(key, 10);\n      }\n      if (key.length === 1) {\n        charCode = key.toUpperCase().charCodeAt(0);\n        if (charCode > 64 && charCode < 91) {\n          return charCode;\n        }\n      }\n      return keyCodes[key];\n    });\n    codes = [].concat.apply([], codes);\n    return function keyHandler(e) {\n      if (codes.indexOf(e.keyCode) > -1) {\n        return handler.call(this, e);\n      }\n    };\n  }\n\n  function stopFilter(handler) {\n    return function stopHandler(e) {\n      e.stopPropagation();\n      return handler.call(this, e);\n    };\n  }\n\n  function preventFilter(handler) {\n    return function preventHandler(e) {\n      e.preventDefault();\n      return handler.call(this, e);\n    };\n  }\n\n  function selfFilter(handler) {\n    return function selfHandler(e) {\n      if (e.target === e.currentTarget) {\n        return handler.call(this, e);\n      }\n    };\n  }\n\n  var on$1 = {\n\n    priority: ON,\n    acceptStatement: true,\n    keyCodes: keyCodes,\n\n    bind: function bind() {\n      // deal with iframes\n      if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n        var self = this;\n        this.iframeBind = function () {\n          on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n        };\n        this.on('load', this.iframeBind);\n      }\n    },\n\n    update: function update(handler) {\n      // stub a noop for v-on with no value,\n      // e.g. @mousedown.prevent\n      if (!this.descriptor.raw) {\n        handler = function () {};\n      }\n\n      if (typeof handler !== 'function') {\n        'development' !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n        return;\n      }\n\n      // apply modifiers\n      if (this.modifiers.stop) {\n        handler = stopFilter(handler);\n      }\n      if (this.modifiers.prevent) {\n        handler = preventFilter(handler);\n      }\n      if (this.modifiers.self) {\n        handler = selfFilter(handler);\n      }\n      // key filter\n      var keys = Object.keys(this.modifiers).filter(function (key) {\n        return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n      });\n      if (keys.length) {\n        handler = keyFilter(handler, keys);\n      }\n\n      this.reset();\n      this.handler = handler;\n\n      if (this.iframeBind) {\n        this.iframeBind();\n      } else {\n        on(this.el, this.arg, this.handler, this.modifiers.capture);\n      }\n    },\n\n    reset: function reset() {\n      var el = this.iframeBind ? this.el.contentWindow : this.el;\n      if (this.handler) {\n        off(el, this.arg, this.handler);\n      }\n    },\n\n    unbind: function unbind() {\n      this.reset();\n    }\n  };\n\n  var prefixes = ['-webkit-', '-moz-', '-ms-'];\n  var camelPrefixes = ['Webkit', 'Moz', 'ms'];\n  var importantRE = /!important;?$/;\n  var propCache = Object.create(null);\n\n  var testEl = null;\n\n  var style = {\n\n    deep: true,\n\n    update: function update(value) {\n      if (typeof value === 'string') {\n        this.el.style.cssText = value;\n      } else if (isArray(value)) {\n        this.handleObject(value.reduce(extend, {}));\n      } else {\n        this.handleObject(value || {});\n      }\n    },\n\n    handleObject: function handleObject(value) {\n      // cache object styles so that only changed props\n      // are actually updated.\n      var cache = this.cache || (this.cache = {});\n      var name, val;\n      for (name in cache) {\n        if (!(name in value)) {\n          this.handleSingle(name, null);\n          delete cache[name];\n        }\n      }\n      for (name in value) {\n        val = value[name];\n        if (val !== cache[name]) {\n          cache[name] = val;\n          this.handleSingle(name, val);\n        }\n      }\n    },\n\n    handleSingle: function handleSingle(prop, value) {\n      prop = normalize(prop);\n      if (!prop) return; // unsupported prop\n      // cast possible numbers/booleans into strings\n      if (value != null) value += '';\n      if (value) {\n        var isImportant = importantRE.test(value) ? 'important' : '';\n        if (isImportant) {\n          /* istanbul ignore if */\n          if ('development' !== 'production') {\n            warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n          }\n          value = value.replace(importantRE, '').trim();\n          this.el.style.setProperty(prop.kebab, value, isImportant);\n        } else {\n          this.el.style[prop.camel] = value;\n        }\n      } else {\n        this.el.style[prop.camel] = '';\n      }\n    }\n\n  };\n\n  /**\n   * Normalize a CSS property name.\n   * - cache result\n   * - auto prefix\n   * - camelCase -> dash-case\n   *\n   * @param {String} prop\n   * @return {String}\n   */\n\n  function normalize(prop) {\n    if (propCache[prop]) {\n      return propCache[prop];\n    }\n    var res = prefix(prop);\n    propCache[prop] = propCache[res] = res;\n    return res;\n  }\n\n  /**\n   * Auto detect the appropriate prefix for a CSS property.\n   * https://gist.github.com/paulirish/523692\n   *\n   * @param {String} prop\n   * @return {String}\n   */\n\n  function prefix(prop) {\n    prop = hyphenate(prop);\n    var camel = camelize(prop);\n    var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n    if (!testEl) {\n      testEl = document.createElement('div');\n    }\n    var i = prefixes.length;\n    var prefixed;\n    if (camel !== 'filter' && camel in testEl.style) {\n      return {\n        kebab: prop,\n        camel: camel\n      };\n    }\n    while (i--) {\n      prefixed = camelPrefixes[i] + upper;\n      if (prefixed in testEl.style) {\n        return {\n          kebab: prefixes[i] + prop,\n          camel: prefixed\n        };\n      }\n    }\n  }\n\n  // xlink\n  var xlinkNS = 'http://www.w3.org/1999/xlink';\n  var xlinkRE = /^xlink:/;\n\n  // check for attributes that prohibit interpolations\n  var disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n  // these attributes should also set their corresponding properties\n  // because they only affect the initial state of the element\n  var attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n  // these attributes expect enumrated values of \"true\" or \"false\"\n  // but are not boolean attributes\n  var enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\n  // these attributes should set a hidden property for\n  // binding v-model to object values\n  var modelProps = {\n    value: '_value',\n    'true-value': '_trueValue',\n    'false-value': '_falseValue'\n  };\n\n  var bind$1 = {\n\n    priority: BIND,\n\n    bind: function bind() {\n      var attr = this.arg;\n      var tag = this.el.tagName;\n      // should be deep watch on object mode\n      if (!attr) {\n        this.deep = true;\n      }\n      // handle interpolation bindings\n      var descriptor = this.descriptor;\n      var tokens = descriptor.interp;\n      if (tokens) {\n        // handle interpolations with one-time tokens\n        if (descriptor.hasOneTime) {\n          this.expression = tokensToExp(tokens, this._scope || this.vm);\n        }\n\n        // only allow binding on native attributes\n        if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n          'development' !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n          this.el.removeAttribute(attr);\n          this.invalid = true;\n        }\n\n        /* istanbul ignore if */\n        if ('development' !== 'production') {\n          var raw = attr + '=\"' + descriptor.raw + '\": ';\n          // warn src\n          if (attr === 'src') {\n            warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n          }\n\n          // warn style\n          if (attr === 'style') {\n            warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n          }\n        }\n      }\n    },\n\n    update: function update(value) {\n      if (this.invalid) {\n        return;\n      }\n      var attr = this.arg;\n      if (this.arg) {\n        this.handleSingle(attr, value);\n      } else {\n        this.handleObject(value || {});\n      }\n    },\n\n    // share object handler with v-bind:class\n    handleObject: style.handleObject,\n\n    handleSingle: function handleSingle(attr, value) {\n      var el = this.el;\n      var interp = this.descriptor.interp;\n      if (this.modifiers.camel) {\n        attr = camelize(attr);\n      }\n      if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n        var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n        ? '' : value : value;\n\n        if (el[attr] !== attrValue) {\n          el[attr] = attrValue;\n        }\n      }\n      // set model props\n      var modelProp = modelProps[attr];\n      if (!interp && modelProp) {\n        el[modelProp] = value;\n        // update v-model if present\n        var model = el.__v_model;\n        if (model) {\n          model.listener();\n        }\n      }\n      // do not set value attribute for textarea\n      if (attr === 'value' && el.tagName === 'TEXTAREA') {\n        el.removeAttribute(attr);\n        return;\n      }\n      // update attribute\n      if (enumeratedAttrRE.test(attr)) {\n        el.setAttribute(attr, value ? 'true' : 'false');\n      } else if (value != null && value !== false) {\n        if (attr === 'class') {\n          // handle edge case #1960:\n          // class interpolation should not overwrite Vue transition class\n          if (el.__v_trans) {\n            value += ' ' + el.__v_trans.id + '-transition';\n          }\n          setClass(el, value);\n        } else if (xlinkRE.test(attr)) {\n          el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n        } else {\n          el.setAttribute(attr, value === true ? '' : value);\n        }\n      } else {\n        el.removeAttribute(attr);\n      }\n    }\n  };\n\n  var el = {\n\n    priority: EL,\n\n    bind: function bind() {\n      /* istanbul ignore if */\n      if (!this.arg) {\n        return;\n      }\n      var id = this.id = camelize(this.arg);\n      var refs = (this._scope || this.vm).$els;\n      if (hasOwn(refs, id)) {\n        refs[id] = this.el;\n      } else {\n        defineReactive(refs, id, this.el);\n      }\n    },\n\n    unbind: function unbind() {\n      var refs = (this._scope || this.vm).$els;\n      if (refs[this.id] === this.el) {\n        refs[this.id] = null;\n      }\n    }\n  };\n\n  var ref = {\n    bind: function bind() {\n      'development' !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n    }\n  };\n\n  var cloak = {\n    bind: function bind() {\n      var el = this.el;\n      this.vm.$once('pre-hook:compiled', function () {\n        el.removeAttribute('v-cloak');\n      });\n    }\n  };\n\n  // must export plain object\n  var directives = {\n    text: text$1,\n    html: html,\n    'for': vFor,\n    'if': vIf,\n    show: show,\n    model: model,\n    on: on$1,\n    bind: bind$1,\n    el: el,\n    ref: ref,\n    cloak: cloak\n  };\n\n  var vClass = {\n\n    deep: true,\n\n    update: function update(value) {\n      if (!value) {\n        this.cleanup();\n      } else if (typeof value === 'string') {\n        this.setClass(value.trim().split(/\\s+/));\n      } else {\n        this.setClass(normalize$1(value));\n      }\n    },\n\n    setClass: function setClass(value) {\n      this.cleanup(value);\n      for (var i = 0, l = value.length; i < l; i++) {\n        var val = value[i];\n        if (val) {\n          apply(this.el, val, addClass);\n        }\n      }\n      this.prevKeys = value;\n    },\n\n    cleanup: function cleanup(value) {\n      var prevKeys = this.prevKeys;\n      if (!prevKeys) return;\n      var i = prevKeys.length;\n      while (i--) {\n        var key = prevKeys[i];\n        if (!value || value.indexOf(key) < 0) {\n          apply(this.el, key, removeClass);\n        }\n      }\n    }\n  };\n\n  /**\n   * Normalize objects and arrays (potentially containing objects)\n   * into array of strings.\n   *\n   * @param {Object|Array<String|Object>} value\n   * @return {Array<String>}\n   */\n\n  function normalize$1(value) {\n    var res = [];\n    if (isArray(value)) {\n      for (var i = 0, l = value.length; i < l; i++) {\n        var _key = value[i];\n        if (_key) {\n          if (typeof _key === 'string') {\n            res.push(_key);\n          } else {\n            for (var k in _key) {\n              if (_key[k]) res.push(k);\n            }\n          }\n        }\n      }\n    } else if (isObject(value)) {\n      for (var key in value) {\n        if (value[key]) res.push(key);\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Add or remove a class/classes on an element\n   *\n   * @param {Element} el\n   * @param {String} key The class name. This may or may not\n   *                     contain a space character, in such a\n   *                     case we'll deal with multiple class\n   *                     names at once.\n   * @param {Function} fn\n   */\n\n  function apply(el, key, fn) {\n    key = key.trim();\n    if (key.indexOf(' ') === -1) {\n      fn(el, key);\n      return;\n    }\n    // The key contains one or more space characters.\n    // Since a class name doesn't accept such characters, we\n    // treat it as multiple classes.\n    var keys = key.split(/\\s+/);\n    for (var i = 0, l = keys.length; i < l; i++) {\n      fn(el, keys[i]);\n    }\n  }\n\n  var component = {\n\n    priority: COMPONENT,\n\n    params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n    /**\n     * Setup. Two possible usages:\n     *\n     * - static:\n     *   <comp> or <div v-component=\"comp\">\n     *\n     * - dynamic:\n     *   <component :is=\"view\">\n     */\n\n    bind: function bind() {\n      if (!this.el.__vue__) {\n        // keep-alive cache\n        this.keepAlive = this.params.keepAlive;\n        if (this.keepAlive) {\n          this.cache = {};\n        }\n        // check inline-template\n        if (this.params.inlineTemplate) {\n          // extract inline template as a DocumentFragment\n          this.inlineTemplate = extractContent(this.el, true);\n        }\n        // component resolution related state\n        this.pendingComponentCb = this.Component = null;\n        // transition related state\n        this.pendingRemovals = 0;\n        this.pendingRemovalCb = null;\n        // create a ref anchor\n        this.anchor = createAnchor('v-component');\n        replace(this.el, this.anchor);\n        // remove is attribute.\n        // this is removed during compilation, but because compilation is\n        // cached, when the component is used elsewhere this attribute\n        // will remain at link time.\n        this.el.removeAttribute('is');\n        this.el.removeAttribute(':is');\n        // remove ref, same as above\n        if (this.descriptor.ref) {\n          this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n        }\n        // if static, build right now.\n        if (this.literal) {\n          this.setComponent(this.expression);\n        }\n      } else {\n        'development' !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n      }\n    },\n\n    /**\n     * Public update, called by the watcher in the dynamic\n     * literal scenario, e.g. <component :is=\"view\">\n     */\n\n    update: function update(value) {\n      if (!this.literal) {\n        this.setComponent(value);\n      }\n    },\n\n    /**\n     * Switch dynamic components. May resolve the component\n     * asynchronously, and perform transition based on\n     * specified transition mode. Accepts a few additional\n     * arguments specifically for vue-router.\n     *\n     * The callback is called when the full transition is\n     * finished.\n     *\n     * @param {String} value\n     * @param {Function} [cb]\n     */\n\n    setComponent: function setComponent(value, cb) {\n      this.invalidatePending();\n      if (!value) {\n        // just remove current\n        this.unbuild(true);\n        this.remove(this.childVM, cb);\n        this.childVM = null;\n      } else {\n        var self = this;\n        this.resolveComponent(value, function () {\n          self.mountComponent(cb);\n        });\n      }\n    },\n\n    /**\n     * Resolve the component constructor to use when creating\n     * the child vm.\n     *\n     * @param {String|Function} value\n     * @param {Function} cb\n     */\n\n    resolveComponent: function resolveComponent(value, cb) {\n      var self = this;\n      this.pendingComponentCb = cancellable(function (Component) {\n        self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n        self.Component = Component;\n        cb();\n      });\n      this.vm._resolveComponent(value, this.pendingComponentCb);\n    },\n\n    /**\n     * Create a new instance using the current constructor and\n     * replace the existing instance. This method doesn't care\n     * whether the new component and the old one are actually\n     * the same.\n     *\n     * @param {Function} [cb]\n     */\n\n    mountComponent: function mountComponent(cb) {\n      // actual mount\n      this.unbuild(true);\n      var self = this;\n      var activateHooks = this.Component.options.activate;\n      var cached = this.getCached();\n      var newComponent = this.build();\n      if (activateHooks && !cached) {\n        this.waitingFor = newComponent;\n        callActivateHooks(activateHooks, newComponent, function () {\n          if (self.waitingFor !== newComponent) {\n            return;\n          }\n          self.waitingFor = null;\n          self.transition(newComponent, cb);\n        });\n      } else {\n        // update ref for kept-alive component\n        if (cached) {\n          newComponent._updateRef();\n        }\n        this.transition(newComponent, cb);\n      }\n    },\n\n    /**\n     * When the component changes or unbinds before an async\n     * constructor is resolved, we need to invalidate its\n     * pending callback.\n     */\n\n    invalidatePending: function invalidatePending() {\n      if (this.pendingComponentCb) {\n        this.pendingComponentCb.cancel();\n        this.pendingComponentCb = null;\n      }\n    },\n\n    /**\n     * Instantiate/insert a new child vm.\n     * If keep alive and has cached instance, insert that\n     * instance; otherwise build a new one and cache it.\n     *\n     * @param {Object} [extraOptions]\n     * @return {Vue} - the created instance\n     */\n\n    build: function build(extraOptions) {\n      var cached = this.getCached();\n      if (cached) {\n        return cached;\n      }\n      if (this.Component) {\n        // default options\n        var options = {\n          name: this.ComponentName,\n          el: cloneNode(this.el),\n          template: this.inlineTemplate,\n          // make sure to add the child with correct parent\n          // if this is a transcluded component, its parent\n          // should be the transclusion host.\n          parent: this._host || this.vm,\n          // if no inline-template, then the compiled\n          // linker can be cached for better performance.\n          _linkerCachable: !this.inlineTemplate,\n          _ref: this.descriptor.ref,\n          _asComponent: true,\n          _isRouterView: this._isRouterView,\n          // if this is a transcluded component, context\n          // will be the common parent vm of this instance\n          // and its host.\n          _context: this.vm,\n          // if this is inside an inline v-for, the scope\n          // will be the intermediate scope created for this\n          // repeat fragment. this is used for linking props\n          // and container directives.\n          _scope: this._scope,\n          // pass in the owner fragment of this component.\n          // this is necessary so that the fragment can keep\n          // track of its contained components in order to\n          // call attach/detach hooks for them.\n          _frag: this._frag\n        };\n        // extra options\n        // in 1.0.0 this is used by vue-router only\n        /* istanbul ignore if */\n        if (extraOptions) {\n          extend(options, extraOptions);\n        }\n        var child = new this.Component(options);\n        if (this.keepAlive) {\n          this.cache[this.Component.cid] = child;\n        }\n        /* istanbul ignore if */\n        if ('development' !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n          warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n        }\n        return child;\n      }\n    },\n\n    /**\n     * Try to get a cached instance of the current component.\n     *\n     * @return {Vue|undefined}\n     */\n\n    getCached: function getCached() {\n      return this.keepAlive && this.cache[this.Component.cid];\n    },\n\n    /**\n     * Teardown the current child, but defers cleanup so\n     * that we can separate the destroy and removal steps.\n     *\n     * @param {Boolean} defer\n     */\n\n    unbuild: function unbuild(defer) {\n      if (this.waitingFor) {\n        if (!this.keepAlive) {\n          this.waitingFor.$destroy();\n        }\n        this.waitingFor = null;\n      }\n      var child = this.childVM;\n      if (!child || this.keepAlive) {\n        if (child) {\n          // remove ref\n          child._inactive = true;\n          child._updateRef(true);\n        }\n        return;\n      }\n      // the sole purpose of `deferCleanup` is so that we can\n      // \"deactivate\" the vm right now and perform DOM removal\n      // later.\n      child.$destroy(false, defer);\n    },\n\n    /**\n     * Remove current destroyed child and manually do\n     * the cleanup after removal.\n     *\n     * @param {Function} cb\n     */\n\n    remove: function remove(child, cb) {\n      var keepAlive = this.keepAlive;\n      if (child) {\n        // we may have a component switch when a previous\n        // component is still being transitioned out.\n        // we want to trigger only one lastest insertion cb\n        // when the existing transition finishes. (#1119)\n        this.pendingRemovals++;\n        this.pendingRemovalCb = cb;\n        var self = this;\n        child.$remove(function () {\n          self.pendingRemovals--;\n          if (!keepAlive) child._cleanup();\n          if (!self.pendingRemovals && self.pendingRemovalCb) {\n            self.pendingRemovalCb();\n            self.pendingRemovalCb = null;\n          }\n        });\n      } else if (cb) {\n        cb();\n      }\n    },\n\n    /**\n     * Actually swap the components, depending on the\n     * transition mode. Defaults to simultaneous.\n     *\n     * @param {Vue} target\n     * @param {Function} [cb]\n     */\n\n    transition: function transition(target, cb) {\n      var self = this;\n      var current = this.childVM;\n      // for devtool inspection\n      if (current) current._inactive = true;\n      target._inactive = false;\n      this.childVM = target;\n      switch (self.params.transitionMode) {\n        case 'in-out':\n          target.$before(self.anchor, function () {\n            self.remove(current, cb);\n          });\n          break;\n        case 'out-in':\n          self.remove(current, function () {\n            target.$before(self.anchor, cb);\n          });\n          break;\n        default:\n          self.remove(current);\n          target.$before(self.anchor, cb);\n      }\n    },\n\n    /**\n     * Unbind.\n     */\n\n    unbind: function unbind() {\n      this.invalidatePending();\n      // Do not defer cleanup when unbinding\n      this.unbuild();\n      // destroy all keep-alive cached instances\n      if (this.cache) {\n        for (var key in this.cache) {\n          this.cache[key].$destroy();\n        }\n        this.cache = null;\n      }\n    }\n  };\n\n  /**\n   * Call activate hooks in order (asynchronous)\n   *\n   * @param {Array} hooks\n   * @param {Vue} vm\n   * @param {Function} cb\n   */\n\n  function callActivateHooks(hooks, vm, cb) {\n    var total = hooks.length;\n    var called = 0;\n    hooks[0].call(vm, next);\n    function next() {\n      if (++called >= total) {\n        cb();\n      } else {\n        hooks[called].call(vm, next);\n      }\n    }\n  }\n\n  var propBindingModes = config._propBindingModes;\n  var empty = {};\n\n  // regexes\n  var identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\n  var settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n  /**\n   * Compile props on a root element and return\n   * a props link function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Array} propOptions\n   * @param {Vue} vm\n   * @return {Function} propsLinkFn\n   */\n\n  function compileProps(el, propOptions, vm) {\n    var props = [];\n    var names = Object.keys(propOptions);\n    var i = names.length;\n    var options, name, attr, value, path, parsed, prop;\n    while (i--) {\n      name = names[i];\n      options = propOptions[name] || empty;\n\n      if ('development' !== 'production' && name === '$data') {\n        warn('Do not use $data as prop.', vm);\n        continue;\n      }\n\n      // props could contain dashes, which will be\n      // interpreted as minus calculations by the parser\n      // so we need to camelize the path here\n      path = camelize(name);\n      if (!identRE$1.test(path)) {\n        'development' !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n        continue;\n      }\n\n      prop = {\n        name: name,\n        path: path,\n        options: options,\n        mode: propBindingModes.ONE_WAY,\n        raw: null\n      };\n\n      attr = hyphenate(name);\n      // first check dynamic version\n      if ((value = getBindAttr(el, attr)) === null) {\n        if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n          prop.mode = propBindingModes.TWO_WAY;\n        } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n          prop.mode = propBindingModes.ONE_TIME;\n        }\n      }\n      if (value !== null) {\n        // has dynamic binding!\n        prop.raw = value;\n        parsed = parseDirective(value);\n        value = parsed.expression;\n        prop.filters = parsed.filters;\n        // check binding type\n        if (isLiteral(value) && !parsed.filters) {\n          // for expressions containing literal numbers and\n          // booleans, there's no need to setup a prop binding,\n          // so we can optimize them as a one-time set.\n          prop.optimizedLiteral = true;\n        } else {\n          prop.dynamic = true;\n          // check non-settable path for two-way bindings\n          if ('development' !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n            prop.mode = propBindingModes.ONE_WAY;\n            warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n          }\n        }\n        prop.parentPath = value;\n\n        // warn required two-way\n        if ('development' !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n          warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n        }\n      } else if ((value = getAttr(el, attr)) !== null) {\n        // has literal binding!\n        prop.raw = value;\n      } else if ('development' !== 'production') {\n        // check possible camelCase prop usage\n        var lowerCaseName = path.toLowerCase();\n        value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n        if (value) {\n          warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n        } else if (options.required) {\n          // warn missing required\n          warn('Missing required prop: ' + name, vm);\n        }\n      }\n      // push prop\n      props.push(prop);\n    }\n    return makePropsLinkFn(props);\n  }\n\n  /**\n   * Build a function that applies props to a vm.\n   *\n   * @param {Array} props\n   * @return {Function} propsLinkFn\n   */\n\n  function makePropsLinkFn(props) {\n    return function propsLinkFn(vm, scope) {\n      // store resolved props info\n      vm._props = {};\n      var inlineProps = vm.$options.propsData;\n      var i = props.length;\n      var prop, path, options, value, raw;\n      while (i--) {\n        prop = props[i];\n        raw = prop.raw;\n        path = prop.path;\n        options = prop.options;\n        vm._props[path] = prop;\n        if (inlineProps && hasOwn(inlineProps, path)) {\n          initProp(vm, prop, inlineProps[path]);\n        }if (raw === null) {\n          // initialize absent prop\n          initProp(vm, prop, undefined);\n        } else if (prop.dynamic) {\n          // dynamic prop\n          if (prop.mode === propBindingModes.ONE_TIME) {\n            // one time binding\n            value = (scope || vm._context || vm).$get(prop.parentPath);\n            initProp(vm, prop, value);\n          } else {\n            if (vm._context) {\n              // dynamic binding\n              vm._bindDir({\n                name: 'prop',\n                def: propDef,\n                prop: prop\n              }, null, null, scope); // el, host, scope\n            } else {\n                // root instance\n                initProp(vm, prop, vm.$get(prop.parentPath));\n              }\n          }\n        } else if (prop.optimizedLiteral) {\n          // optimized literal, cast it and just set once\n          var stripped = stripQuotes(raw);\n          value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n          initProp(vm, prop, value);\n        } else {\n          // string literal, but we need to cater for\n          // Boolean props with no value, or with same\n          // literal value (e.g. disabled=\"disabled\")\n          // see https://github.com/vuejs/vue-loader/issues/182\n          value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n          initProp(vm, prop, value);\n        }\n      }\n    };\n  }\n\n  /**\n   * Process a prop with a rawValue, applying necessary coersions,\n   * default values & assertions and call the given callback with\n   * processed value.\n   *\n   * @param {Vue} vm\n   * @param {Object} prop\n   * @param {*} rawValue\n   * @param {Function} fn\n   */\n\n  function processPropValue(vm, prop, rawValue, fn) {\n    var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n    var value = rawValue;\n    if (value === undefined) {\n      value = getPropDefaultValue(vm, prop);\n    }\n    value = coerceProp(prop, value, vm);\n    var coerced = value !== rawValue;\n    if (!assertProp(prop, value, vm)) {\n      value = undefined;\n    }\n    if (isSimple && !coerced) {\n      withoutConversion(function () {\n        fn(value);\n      });\n    } else {\n      fn(value);\n    }\n  }\n\n  /**\n   * Set a prop's initial value on a vm and its data object.\n   *\n   * @param {Vue} vm\n   * @param {Object} prop\n   * @param {*} value\n   */\n\n  function initProp(vm, prop, value) {\n    processPropValue(vm, prop, value, function (value) {\n      defineReactive(vm, prop.path, value);\n    });\n  }\n\n  /**\n   * Update a prop's value on a vm.\n   *\n   * @param {Vue} vm\n   * @param {Object} prop\n   * @param {*} value\n   */\n\n  function updateProp(vm, prop, value) {\n    processPropValue(vm, prop, value, function (value) {\n      vm[prop.path] = value;\n    });\n  }\n\n  /**\n   * Get the default value of a prop.\n   *\n   * @param {Vue} vm\n   * @param {Object} prop\n   * @return {*}\n   */\n\n  function getPropDefaultValue(vm, prop) {\n    // no default, return undefined\n    var options = prop.options;\n    if (!hasOwn(options, 'default')) {\n      // absent boolean value defaults to false\n      return options.type === Boolean ? false : undefined;\n    }\n    var def = options['default'];\n    // warn against non-factory defaults for Object & Array\n    if (isObject(def)) {\n      'development' !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n    }\n    // call factory function for non-Function types\n    return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n  }\n\n  /**\n   * Assert whether a prop is valid.\n   *\n   * @param {Object} prop\n   * @param {*} value\n   * @param {Vue} vm\n   */\n\n  function assertProp(prop, value, vm) {\n    if (!prop.options.required && ( // non-required\n    prop.raw === null || // abscent\n    value == null) // null or undefined\n    ) {\n        return true;\n      }\n    var options = prop.options;\n    var type = options.type;\n    var valid = !type;\n    var expectedTypes = [];\n    if (type) {\n      if (!isArray(type)) {\n        type = [type];\n      }\n      for (var i = 0; i < type.length && !valid; i++) {\n        var assertedType = assertType(value, type[i]);\n        expectedTypes.push(assertedType.expectedType);\n        valid = assertedType.valid;\n      }\n    }\n    if (!valid) {\n      if ('development' !== 'production') {\n        warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n      }\n      return false;\n    }\n    var validator = options.validator;\n    if (validator) {\n      if (!validator(value)) {\n        'development' !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Force parsing value with coerce option.\n   *\n   * @param {*} value\n   * @param {Object} options\n   * @return {*}\n   */\n\n  function coerceProp(prop, value, vm) {\n    var coerce = prop.options.coerce;\n    if (!coerce) {\n      return value;\n    }\n    if (typeof coerce === 'function') {\n      return coerce(value);\n    } else {\n      'development' !== 'production' && warn('Invalid coerce for prop \"' + prop.name + '\": expected function, got ' + typeof coerce + '.', vm);\n      return value;\n    }\n  }\n\n  /**\n   * Assert the type of a value\n   *\n   * @param {*} value\n   * @param {Function} type\n   * @return {Object}\n   */\n\n  function assertType(value, type) {\n    var valid;\n    var expectedType;\n    if (type === String) {\n      expectedType = 'string';\n      valid = typeof value === expectedType;\n    } else if (type === Number) {\n      expectedType = 'number';\n      valid = typeof value === expectedType;\n    } else if (type === Boolean) {\n      expectedType = 'boolean';\n      valid = typeof value === expectedType;\n    } else if (type === Function) {\n      expectedType = 'function';\n      valid = typeof value === expectedType;\n    } else if (type === Object) {\n      expectedType = 'object';\n      valid = isPlainObject(value);\n    } else if (type === Array) {\n      expectedType = 'array';\n      valid = isArray(value);\n    } else {\n      valid = value instanceof type;\n    }\n    return {\n      valid: valid,\n      expectedType: expectedType\n    };\n  }\n\n  /**\n   * Format type for output\n   *\n   * @param {String} type\n   * @return {String}\n   */\n\n  function formatType(type) {\n    return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n  }\n\n  /**\n   * Format value\n   *\n   * @param {*} value\n   * @return {String}\n   */\n\n  function formatValue(val) {\n    return Object.prototype.toString.call(val).slice(8, -1);\n  }\n\n  var bindingModes = config._propBindingModes;\n\n  var propDef = {\n\n    bind: function bind() {\n      var child = this.vm;\n      var parent = child._context;\n      // passed in from compiler directly\n      var prop = this.descriptor.prop;\n      var childKey = prop.path;\n      var parentKey = prop.parentPath;\n      var twoWay = prop.mode === bindingModes.TWO_WAY;\n\n      var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n        updateProp(child, prop, val);\n      }, {\n        twoWay: twoWay,\n        filters: prop.filters,\n        // important: props need to be observed on the\n        // v-for scope if present\n        scope: this._scope\n      });\n\n      // set the child initial value.\n      initProp(child, prop, parentWatcher.value);\n\n      // setup two-way binding\n      if (twoWay) {\n        // important: defer the child watcher creation until\n        // the created hook (after data observation)\n        var self = this;\n        child.$once('pre-hook:created', function () {\n          self.childWatcher = new Watcher(child, childKey, function (val) {\n            parentWatcher.set(val);\n          }, {\n            // ensure sync upward before parent sync down.\n            // this is necessary in cases e.g. the child\n            // mutates a prop array, then replaces it. (#1683)\n            sync: true\n          });\n        });\n      }\n    },\n\n    unbind: function unbind() {\n      this.parentWatcher.teardown();\n      if (this.childWatcher) {\n        this.childWatcher.teardown();\n      }\n    }\n  };\n\n  var queue$1 = [];\n  var queued = false;\n\n  /**\n   * Push a job into the queue.\n   *\n   * @param {Function} job\n   */\n\n  function pushJob(job) {\n    queue$1.push(job);\n    if (!queued) {\n      queued = true;\n      nextTick(flush);\n    }\n  }\n\n  /**\n   * Flush the queue, and do one forced reflow before\n   * triggering transitions.\n   */\n\n  function flush() {\n    // Force layout\n    var f = document.documentElement.offsetHeight;\n    for (var i = 0; i < queue$1.length; i++) {\n      queue$1[i]();\n    }\n    queue$1 = [];\n    queued = false;\n    // dummy return, so js linters don't complain about\n    // unused variable f\n    return f;\n  }\n\n  var TYPE_TRANSITION = 'transition';\n  var TYPE_ANIMATION = 'animation';\n  var transDurationProp = transitionProp + 'Duration';\n  var animDurationProp = animationProp + 'Duration';\n\n  /**\n   * If a just-entered element is applied the\n   * leave class while its enter transition hasn't started yet,\n   * and the transitioned property has the same value for both\n   * enter/leave, then the leave transition will be skipped and\n   * the transitionend event never fires. This function ensures\n   * its callback to be called after a transition has started\n   * by waiting for double raf.\n   *\n   * It falls back to setTimeout on devices that support CSS\n   * transitions but not raf (e.g. Android 4.2 browser) - since\n   * these environments are usually slow, we are giving it a\n   * relatively large timeout.\n   */\n\n  var raf = inBrowser && window.requestAnimationFrame;\n  var waitForTransitionStart = raf\n  /* istanbul ignore next */\n  ? function (fn) {\n    raf(function () {\n      raf(fn);\n    });\n  } : function (fn) {\n    setTimeout(fn, 50);\n  };\n\n  /**\n   * A Transition object that encapsulates the state and logic\n   * of the transition.\n   *\n   * @param {Element} el\n   * @param {String} id\n   * @param {Object} hooks\n   * @param {Vue} vm\n   */\n  function Transition(el, id, hooks, vm) {\n    this.id = id;\n    this.el = el;\n    this.enterClass = hooks && hooks.enterClass || id + '-enter';\n    this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n    this.hooks = hooks;\n    this.vm = vm;\n    // async state\n    this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n    this.justEntered = false;\n    this.entered = this.left = false;\n    this.typeCache = {};\n    // check css transition type\n    this.type = hooks && hooks.type;\n    /* istanbul ignore if */\n    if ('development' !== 'production') {\n      if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n        warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n      }\n    }\n    // bind\n    var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n      self[m] = bind(self[m], self);\n    });\n  }\n\n  var p$1 = Transition.prototype;\n\n  /**\n   * Start an entering transition.\n   *\n   * 1. enter transition triggered\n   * 2. call beforeEnter hook\n   * 3. add enter class\n   * 4. insert/show element\n   * 5. call enter hook (with possible explicit js callback)\n   * 6. reflow\n   * 7. based on transition type:\n   *    - transition:\n   *        remove class now, wait for transitionend,\n   *        then done if there's no explicit js callback.\n   *    - animation:\n   *        wait for animationend, remove class,\n   *        then done if there's no explicit js callback.\n   *    - no css transition:\n   *        done now if there's no explicit js callback.\n   * 8. wait for either done or js callback, then call\n   *    afterEnter hook.\n   *\n   * @param {Function} op - insert/show the element\n   * @param {Function} [cb]\n   */\n\n  p$1.enter = function (op, cb) {\n    this.cancelPending();\n    this.callHook('beforeEnter');\n    this.cb = cb;\n    addClass(this.el, this.enterClass);\n    op();\n    this.entered = false;\n    this.callHookWithCb('enter');\n    if (this.entered) {\n      return; // user called done synchronously.\n    }\n    this.cancel = this.hooks && this.hooks.enterCancelled;\n    pushJob(this.enterNextTick);\n  };\n\n  /**\n   * The \"nextTick\" phase of an entering transition, which is\n   * to be pushed into a queue and executed after a reflow so\n   * that removing the class can trigger a CSS transition.\n   */\n\n  p$1.enterNextTick = function () {\n    var _this = this;\n\n    // prevent transition skipping\n    this.justEntered = true;\n    waitForTransitionStart(function () {\n      _this.justEntered = false;\n    });\n    var enterDone = this.enterDone;\n    var type = this.getCssTransitionType(this.enterClass);\n    if (!this.pendingJsCb) {\n      if (type === TYPE_TRANSITION) {\n        // trigger transition by removing enter class now\n        removeClass(this.el, this.enterClass);\n        this.setupCssCb(transitionEndEvent, enterDone);\n      } else if (type === TYPE_ANIMATION) {\n        this.setupCssCb(animationEndEvent, enterDone);\n      } else {\n        enterDone();\n      }\n    } else if (type === TYPE_TRANSITION) {\n      removeClass(this.el, this.enterClass);\n    }\n  };\n\n  /**\n   * The \"cleanup\" phase of an entering transition.\n   */\n\n  p$1.enterDone = function () {\n    this.entered = true;\n    this.cancel = this.pendingJsCb = null;\n    removeClass(this.el, this.enterClass);\n    this.callHook('afterEnter');\n    if (this.cb) this.cb();\n  };\n\n  /**\n   * Start a leaving transition.\n   *\n   * 1. leave transition triggered.\n   * 2. call beforeLeave hook\n   * 3. add leave class (trigger css transition)\n   * 4. call leave hook (with possible explicit js callback)\n   * 5. reflow if no explicit js callback is provided\n   * 6. based on transition type:\n   *    - transition or animation:\n   *        wait for end event, remove class, then done if\n   *        there's no explicit js callback.\n   *    - no css transition:\n   *        done if there's no explicit js callback.\n   * 7. wait for either done or js callback, then call\n   *    afterLeave hook.\n   *\n   * @param {Function} op - remove/hide the element\n   * @param {Function} [cb]\n   */\n\n  p$1.leave = function (op, cb) {\n    this.cancelPending();\n    this.callHook('beforeLeave');\n    this.op = op;\n    this.cb = cb;\n    addClass(this.el, this.leaveClass);\n    this.left = false;\n    this.callHookWithCb('leave');\n    if (this.left) {\n      return; // user called done synchronously.\n    }\n    this.cancel = this.hooks && this.hooks.leaveCancelled;\n    // only need to handle leaveDone if\n    // 1. the transition is already done (synchronously called\n    //    by the user, which causes this.op set to null)\n    // 2. there's no explicit js callback\n    if (this.op && !this.pendingJsCb) {\n      // if a CSS transition leaves immediately after enter,\n      // the transitionend event never fires. therefore we\n      // detect such cases and end the leave immediately.\n      if (this.justEntered) {\n        this.leaveDone();\n      } else {\n        pushJob(this.leaveNextTick);\n      }\n    }\n  };\n\n  /**\n   * The \"nextTick\" phase of a leaving transition.\n   */\n\n  p$1.leaveNextTick = function () {\n    var type = this.getCssTransitionType(this.leaveClass);\n    if (type) {\n      var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n      this.setupCssCb(event, this.leaveDone);\n    } else {\n      this.leaveDone();\n    }\n  };\n\n  /**\n   * The \"cleanup\" phase of a leaving transition.\n   */\n\n  p$1.leaveDone = function () {\n    this.left = true;\n    this.cancel = this.pendingJsCb = null;\n    this.op();\n    removeClass(this.el, this.leaveClass);\n    this.callHook('afterLeave');\n    if (this.cb) this.cb();\n    this.op = null;\n  };\n\n  /**\n   * Cancel any pending callbacks from a previously running\n   * but not finished transition.\n   */\n\n  p$1.cancelPending = function () {\n    this.op = this.cb = null;\n    var hasPending = false;\n    if (this.pendingCssCb) {\n      hasPending = true;\n      off(this.el, this.pendingCssEvent, this.pendingCssCb);\n      this.pendingCssEvent = this.pendingCssCb = null;\n    }\n    if (this.pendingJsCb) {\n      hasPending = true;\n      this.pendingJsCb.cancel();\n      this.pendingJsCb = null;\n    }\n    if (hasPending) {\n      removeClass(this.el, this.enterClass);\n      removeClass(this.el, this.leaveClass);\n    }\n    if (this.cancel) {\n      this.cancel.call(this.vm, this.el);\n      this.cancel = null;\n    }\n  };\n\n  /**\n   * Call a user-provided synchronous hook function.\n   *\n   * @param {String} type\n   */\n\n  p$1.callHook = function (type) {\n    if (this.hooks && this.hooks[type]) {\n      this.hooks[type].call(this.vm, this.el);\n    }\n  };\n\n  /**\n   * Call a user-provided, potentially-async hook function.\n   * We check for the length of arguments to see if the hook\n   * expects a `done` callback. If true, the transition's end\n   * will be determined by when the user calls that callback;\n   * otherwise, the end is determined by the CSS transition or\n   * animation.\n   *\n   * @param {String} type\n   */\n\n  p$1.callHookWithCb = function (type) {\n    var hook = this.hooks && this.hooks[type];\n    if (hook) {\n      if (hook.length > 1) {\n        this.pendingJsCb = cancellable(this[type + 'Done']);\n      }\n      hook.call(this.vm, this.el, this.pendingJsCb);\n    }\n  };\n\n  /**\n   * Get an element's transition type based on the\n   * calculated styles.\n   *\n   * @param {String} className\n   * @return {Number}\n   */\n\n  p$1.getCssTransitionType = function (className) {\n    /* istanbul ignore if */\n    if (!transitionEndEvent ||\n    // skip CSS transitions if page is not visible -\n    // this solves the issue of transitionend events not\n    // firing until the page is visible again.\n    // pageVisibility API is supported in IE10+, same as\n    // CSS transitions.\n    document.hidden ||\n    // explicit js-only transition\n    this.hooks && this.hooks.css === false ||\n    // element is hidden\n    isHidden(this.el)) {\n      return;\n    }\n    var type = this.type || this.typeCache[className];\n    if (type) return type;\n    var inlineStyles = this.el.style;\n    var computedStyles = window.getComputedStyle(this.el);\n    var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n    if (transDuration && transDuration !== '0s') {\n      type = TYPE_TRANSITION;\n    } else {\n      var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n      if (animDuration && animDuration !== '0s') {\n        type = TYPE_ANIMATION;\n      }\n    }\n    if (type) {\n      this.typeCache[className] = type;\n    }\n    return type;\n  };\n\n  /**\n   * Setup a CSS transitionend/animationend callback.\n   *\n   * @param {String} event\n   * @param {Function} cb\n   */\n\n  p$1.setupCssCb = function (event, cb) {\n    this.pendingCssEvent = event;\n    var self = this;\n    var el = this.el;\n    var onEnd = this.pendingCssCb = function (e) {\n      if (e.target === el) {\n        off(el, event, onEnd);\n        self.pendingCssEvent = self.pendingCssCb = null;\n        if (!self.pendingJsCb && cb) {\n          cb();\n        }\n      }\n    };\n    on(el, event, onEnd);\n  };\n\n  /**\n   * Check if an element is hidden - in that case we can just\n   * skip the transition alltogether.\n   *\n   * @param {Element} el\n   * @return {Boolean}\n   */\n\n  function isHidden(el) {\n    if (/svg$/.test(el.namespaceURI)) {\n      // SVG elements do not have offset(Width|Height)\n      // so we need to check the client rect\n      var rect = el.getBoundingClientRect();\n      return !(rect.width || rect.height);\n    } else {\n      return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n    }\n  }\n\n  var transition$1 = {\n\n    priority: TRANSITION,\n\n    update: function update(id, oldId) {\n      var el = this.el;\n      // resolve on owner vm\n      var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n      id = id || 'v';\n      oldId = oldId || 'v';\n      el.__v_trans = new Transition(el, id, hooks, this.vm);\n      removeClass(el, oldId + '-transition');\n      addClass(el, id + '-transition');\n    }\n  };\n\n  var internalDirectives = {\n    style: style,\n    'class': vClass,\n    component: component,\n    prop: propDef,\n    transition: transition$1\n  };\n\n  // special binding prefixes\n  var bindRE = /^v-bind:|^:/;\n  var onRE = /^v-on:|^@/;\n  var dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\n  var modifierRE = /\\.[^\\.]+/g;\n  var transitionRE = /^(v-bind:|:)?transition$/;\n\n  // default directive priority\n  var DEFAULT_PRIORITY = 1000;\n  var DEFAULT_TERMINAL_PRIORITY = 2000;\n\n  /**\n   * Compile a template and return a reusable composite link\n   * function, which recursively contains more link functions\n   * inside. This top level compile function would normally\n   * be called on instance root nodes, but can also be used\n   * for partial compilation if the partial argument is true.\n   *\n   * The returned composite link function, when called, will\n   * return an unlink function that tearsdown all directives\n   * created during the linking phase.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Object} options\n   * @param {Boolean} partial\n   * @return {Function}\n   */\n\n  function compile(el, options, partial) {\n    // link function for the node itself.\n    var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n    // link function for the childNodes\n    var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n    /**\n     * A composite linker function to be called on a already\n     * compiled piece of DOM, which instantiates all directive\n     * instances.\n     *\n     * @param {Vue} vm\n     * @param {Element|DocumentFragment} el\n     * @param {Vue} [host] - host vm of transcluded content\n     * @param {Object} [scope] - v-for scope\n     * @param {Fragment} [frag] - link context fragment\n     * @return {Function|undefined}\n     */\n\n    return function compositeLinkFn(vm, el, host, scope, frag) {\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(el.childNodes);\n      // link\n      var dirs = linkAndCapture(function compositeLinkCapturer() {\n        if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n        if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n      }, vm);\n      return makeUnlinkFn(vm, dirs);\n    };\n  }\n\n  /**\n   * Apply a linker to a vm/element pair and capture the\n   * directives created during the process.\n   *\n   * @param {Function} linker\n   * @param {Vue} vm\n   */\n\n  function linkAndCapture(linker, vm) {\n    /* istanbul ignore if */\n    if ('development' === 'production') {}\n    var originalDirCount = vm._directives.length;\n    linker();\n    var dirs = vm._directives.slice(originalDirCount);\n    dirs.sort(directiveComparator);\n    for (var i = 0, l = dirs.length; i < l; i++) {\n      dirs[i]._bind();\n    }\n    return dirs;\n  }\n\n  /**\n   * Directive priority sort comparator\n   *\n   * @param {Object} a\n   * @param {Object} b\n   */\n\n  function directiveComparator(a, b) {\n    a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n    b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n    return a > b ? -1 : a === b ? 0 : 1;\n  }\n\n  /**\n   * Linker functions return an unlink function that\n   * tearsdown all directives instances generated during\n   * the process.\n   *\n   * We create unlink functions with only the necessary\n   * information to avoid retaining additional closures.\n   *\n   * @param {Vue} vm\n   * @param {Array} dirs\n   * @param {Vue} [context]\n   * @param {Array} [contextDirs]\n   * @return {Function}\n   */\n\n  function makeUnlinkFn(vm, dirs, context, contextDirs) {\n    function unlink(destroying) {\n      teardownDirs(vm, dirs, destroying);\n      if (context && contextDirs) {\n        teardownDirs(context, contextDirs);\n      }\n    }\n    // expose linked directives\n    unlink.dirs = dirs;\n    return unlink;\n  }\n\n  /**\n   * Teardown partial linked directives.\n   *\n   * @param {Vue} vm\n   * @param {Array} dirs\n   * @param {Boolean} destroying\n   */\n\n  function teardownDirs(vm, dirs, destroying) {\n    var i = dirs.length;\n    while (i--) {\n      dirs[i]._teardown();\n      if ('development' !== 'production' && !destroying) {\n        vm._directives.$remove(dirs[i]);\n      }\n    }\n  }\n\n  /**\n   * Compile link props on an instance.\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   * @param {Object} props\n   * @param {Object} [scope]\n   * @return {Function}\n   */\n\n  function compileAndLinkProps(vm, el, props, scope) {\n    var propsLinkFn = compileProps(el, props, vm);\n    var propDirs = linkAndCapture(function () {\n      propsLinkFn(vm, scope);\n    }, vm);\n    return makeUnlinkFn(vm, propDirs);\n  }\n\n  /**\n   * Compile the root element of an instance.\n   *\n   * 1. attrs on context container (context scope)\n   * 2. attrs on the component template root node, if\n   *    replace:true (child scope)\n   *\n   * If this is a fragment instance, we only need to compile 1.\n   *\n   * @param {Element} el\n   * @param {Object} options\n   * @param {Object} contextOptions\n   * @return {Function}\n   */\n\n  function compileRoot(el, options, contextOptions) {\n    var containerAttrs = options._containerAttrs;\n    var replacerAttrs = options._replacerAttrs;\n    var contextLinkFn, replacerLinkFn;\n\n    // only need to compile other attributes for\n    // non-fragment instances\n    if (el.nodeType !== 11) {\n      // for components, container and replacer need to be\n      // compiled separately and linked in different scopes.\n      if (options._asComponent) {\n        // 2. container attributes\n        if (containerAttrs && contextOptions) {\n          contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n        }\n        if (replacerAttrs) {\n          // 3. replacer attributes\n          replacerLinkFn = compileDirectives(replacerAttrs, options);\n        }\n      } else {\n        // non-component, just compile as a normal element.\n        replacerLinkFn = compileDirectives(el.attributes, options);\n      }\n    } else if ('development' !== 'production' && containerAttrs) {\n      // warn container directives for fragment instances\n      var names = containerAttrs.filter(function (attr) {\n        // allow vue-loader/vueify scoped css attributes\n        return attr.name.indexOf('_v-') < 0 &&\n        // allow event listeners\n        !onRE.test(attr.name) &&\n        // allow slots\n        attr.name !== 'slot';\n      }).map(function (attr) {\n        return '\"' + attr.name + '\"';\n      });\n      if (names.length) {\n        var plural = names.length > 1;\n        warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n      }\n    }\n\n    options._containerAttrs = options._replacerAttrs = null;\n    return function rootLinkFn(vm, el, scope) {\n      // link context scope dirs\n      var context = vm._context;\n      var contextDirs;\n      if (context && contextLinkFn) {\n        contextDirs = linkAndCapture(function () {\n          contextLinkFn(context, el, null, scope);\n        }, context);\n      }\n\n      // link self\n      var selfDirs = linkAndCapture(function () {\n        if (replacerLinkFn) replacerLinkFn(vm, el);\n      }, vm);\n\n      // return the unlink function that tearsdown context\n      // container directives.\n      return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n    };\n  }\n\n  /**\n   * Compile a node and return a nodeLinkFn based on the\n   * node type.\n   *\n   * @param {Node} node\n   * @param {Object} options\n   * @return {Function|null}\n   */\n\n  function compileNode(node, options) {\n    var type = node.nodeType;\n    if (type === 1 && !isScript(node)) {\n      return compileElement(node, options);\n    } else if (type === 3 && node.data.trim()) {\n      return compileTextNode(node, options);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Compile an element and return a nodeLinkFn.\n   *\n   * @param {Element} el\n   * @param {Object} options\n   * @return {Function|null}\n   */\n\n  function compileElement(el, options) {\n    // preprocess textareas.\n    // textarea treats its text content as the initial value.\n    // just bind it as an attr directive for value.\n    if (el.tagName === 'TEXTAREA') {\n      var tokens = parseText(el.value);\n      if (tokens) {\n        el.setAttribute(':value', tokensToExp(tokens));\n        el.value = '';\n      }\n    }\n    var linkFn;\n    var hasAttrs = el.hasAttributes();\n    var attrs = hasAttrs && toArray(el.attributes);\n    // check terminal directives (for & if)\n    if (hasAttrs) {\n      linkFn = checkTerminalDirectives(el, attrs, options);\n    }\n    // check element directives\n    if (!linkFn) {\n      linkFn = checkElementDirectives(el, options);\n    }\n    // check component\n    if (!linkFn) {\n      linkFn = checkComponent(el, options);\n    }\n    // normal directives\n    if (!linkFn && hasAttrs) {\n      linkFn = compileDirectives(attrs, options);\n    }\n    return linkFn;\n  }\n\n  /**\n   * Compile a textNode and return a nodeLinkFn.\n   *\n   * @param {TextNode} node\n   * @param {Object} options\n   * @return {Function|null} textNodeLinkFn\n   */\n\n  function compileTextNode(node, options) {\n    // skip marked text nodes\n    if (node._skip) {\n      return removeText;\n    }\n\n    var tokens = parseText(node.wholeText);\n    if (!tokens) {\n      return null;\n    }\n\n    // mark adjacent text nodes as skipped,\n    // because we are using node.wholeText to compile\n    // all adjacent text nodes together. This fixes\n    // issues in IE where sometimes it splits up a single\n    // text node into multiple ones.\n    var next = node.nextSibling;\n    while (next && next.nodeType === 3) {\n      next._skip = true;\n      next = next.nextSibling;\n    }\n\n    var frag = document.createDocumentFragment();\n    var el, token;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n      frag.appendChild(el);\n    }\n    return makeTextNodeLinkFn(tokens, frag, options);\n  }\n\n  /**\n   * Linker for an skipped text node.\n   *\n   * @param {Vue} vm\n   * @param {Text} node\n   */\n\n  function removeText(vm, node) {\n    remove(node);\n  }\n\n  /**\n   * Process a single text token.\n   *\n   * @param {Object} token\n   * @param {Object} options\n   * @return {Node}\n   */\n\n  function processTextToken(token, options) {\n    var el;\n    if (token.oneTime) {\n      el = document.createTextNode(token.value);\n    } else {\n      if (token.html) {\n        el = document.createComment('v-html');\n        setTokenType('html');\n      } else {\n        // IE will clean up empty textNodes during\n        // frag.cloneNode(true), so we have to give it\n        // something here...\n        el = document.createTextNode(' ');\n        setTokenType('text');\n      }\n    }\n    function setTokenType(type) {\n      if (token.descriptor) return;\n      var parsed = parseDirective(token.value);\n      token.descriptor = {\n        name: type,\n        def: directives[type],\n        expression: parsed.expression,\n        filters: parsed.filters\n      };\n    }\n    return el;\n  }\n\n  /**\n   * Build a function that processes a textNode.\n   *\n   * @param {Array<Object>} tokens\n   * @param {DocumentFragment} frag\n   */\n\n  function makeTextNodeLinkFn(tokens, frag) {\n    return function textNodeLinkFn(vm, el, host, scope) {\n      var fragClone = frag.cloneNode(true);\n      var childNodes = toArray(fragClone.childNodes);\n      var token, value, node;\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        token = tokens[i];\n        value = token.value;\n        if (token.tag) {\n          node = childNodes[i];\n          if (token.oneTime) {\n            value = (scope || vm).$eval(value);\n            if (token.html) {\n              replace(node, parseTemplate(value, true));\n            } else {\n              node.data = _toString(value);\n            }\n          } else {\n            vm._bindDir(token.descriptor, node, host, scope);\n          }\n        }\n      }\n      replace(el, fragClone);\n    };\n  }\n\n  /**\n   * Compile a node list and return a childLinkFn.\n   *\n   * @param {NodeList} nodeList\n   * @param {Object} options\n   * @return {Function|undefined}\n   */\n\n  function compileNodeList(nodeList, options) {\n    var linkFns = [];\n    var nodeLinkFn, childLinkFn, node;\n    for (var i = 0, l = nodeList.length; i < l; i++) {\n      node = nodeList[i];\n      nodeLinkFn = compileNode(node, options);\n      childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n      linkFns.push(nodeLinkFn, childLinkFn);\n    }\n    return linkFns.length ? makeChildLinkFn(linkFns) : null;\n  }\n\n  /**\n   * Make a child link function for a node's childNodes.\n   *\n   * @param {Array<Function>} linkFns\n   * @return {Function} childLinkFn\n   */\n\n  function makeChildLinkFn(linkFns) {\n    return function childLinkFn(vm, nodes, host, scope, frag) {\n      var node, nodeLinkFn, childrenLinkFn;\n      for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n        node = nodes[n];\n        nodeLinkFn = linkFns[i++];\n        childrenLinkFn = linkFns[i++];\n        // cache childNodes before linking parent, fix #657\n        var childNodes = toArray(node.childNodes);\n        if (nodeLinkFn) {\n          nodeLinkFn(vm, node, host, scope, frag);\n        }\n        if (childrenLinkFn) {\n          childrenLinkFn(vm, childNodes, host, scope, frag);\n        }\n      }\n    };\n  }\n\n  /**\n   * Check for element directives (custom elements that should\n   * be resovled as terminal directives).\n   *\n   * @param {Element} el\n   * @param {Object} options\n   */\n\n  function checkElementDirectives(el, options) {\n    var tag = el.tagName.toLowerCase();\n    if (commonTagRE.test(tag)) {\n      return;\n    }\n    var def = resolveAsset(options, 'elementDirectives', tag);\n    if (def) {\n      return makeTerminalNodeLinkFn(el, tag, '', options, def);\n    }\n  }\n\n  /**\n   * Check if an element is a component. If yes, return\n   * a component link function.\n   *\n   * @param {Element} el\n   * @param {Object} options\n   * @return {Function|undefined}\n   */\n\n  function checkComponent(el, options) {\n    var component = checkComponentAttr(el, options);\n    if (component) {\n      var ref = findRef(el);\n      var descriptor = {\n        name: 'component',\n        ref: ref,\n        expression: component.id,\n        def: internalDirectives.component,\n        modifiers: {\n          literal: !component.dynamic\n        }\n      };\n      var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n        if (ref) {\n          defineReactive((scope || vm).$refs, ref, null);\n        }\n        vm._bindDir(descriptor, el, host, scope, frag);\n      };\n      componentLinkFn.terminal = true;\n      return componentLinkFn;\n    }\n  }\n\n  /**\n   * Check an element for terminal directives in fixed order.\n   * If it finds one, return a terminal link function.\n   *\n   * @param {Element} el\n   * @param {Array} attrs\n   * @param {Object} options\n   * @return {Function} terminalLinkFn\n   */\n\n  function checkTerminalDirectives(el, attrs, options) {\n    // skip v-pre\n    if (getAttr(el, 'v-pre') !== null) {\n      return skip;\n    }\n    // skip v-else block, but only if following v-if\n    if (el.hasAttribute('v-else')) {\n      var prev = el.previousElementSibling;\n      if (prev && prev.hasAttribute('v-if')) {\n        return skip;\n      }\n    }\n\n    var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n    for (var i = 0, j = attrs.length; i < j; i++) {\n      attr = attrs[i];\n      name = attr.name.replace(modifierRE, '');\n      if (matched = name.match(dirAttrRE)) {\n        def = resolveAsset(options, 'directives', matched[1]);\n        if (def && def.terminal) {\n          if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n            termDef = def;\n            rawName = attr.name;\n            modifiers = parseModifiers(attr.name);\n            value = attr.value;\n            dirName = matched[1];\n            arg = matched[2];\n          }\n        }\n      }\n    }\n\n    if (termDef) {\n      return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n    }\n  }\n\n  function skip() {}\n  skip.terminal = true;\n\n  /**\n   * Build a node link function for a terminal directive.\n   * A terminal link function terminates the current\n   * compilation recursion and handles compilation of the\n   * subtree in the directive.\n   *\n   * @param {Element} el\n   * @param {String} dirName\n   * @param {String} value\n   * @param {Object} options\n   * @param {Object} def\n   * @param {String} [rawName]\n   * @param {String} [arg]\n   * @param {Object} [modifiers]\n   * @return {Function} terminalLinkFn\n   */\n\n  function makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n    var parsed = parseDirective(value);\n    var descriptor = {\n      name: dirName,\n      arg: arg,\n      expression: parsed.expression,\n      filters: parsed.filters,\n      raw: value,\n      attr: rawName,\n      modifiers: modifiers,\n      def: def\n    };\n    // check ref for v-for and router-view\n    if (dirName === 'for' || dirName === 'router-view') {\n      descriptor.ref = findRef(el);\n    }\n    var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n      if (descriptor.ref) {\n        defineReactive((scope || vm).$refs, descriptor.ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    fn.terminal = true;\n    return fn;\n  }\n\n  /**\n   * Compile the directives on an element and return a linker.\n   *\n   * @param {Array|NamedNodeMap} attrs\n   * @param {Object} options\n   * @return {Function}\n   */\n\n  function compileDirectives(attrs, options) {\n    var i = attrs.length;\n    var dirs = [];\n    var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n    while (i--) {\n      attr = attrs[i];\n      name = rawName = attr.name;\n      value = rawValue = attr.value;\n      tokens = parseText(value);\n      // reset arg\n      arg = null;\n      // check modifiers\n      modifiers = parseModifiers(name);\n      name = name.replace(modifierRE, '');\n\n      // attribute interpolations\n      if (tokens) {\n        value = tokensToExp(tokens);\n        arg = name;\n        pushDir('bind', directives.bind, tokens);\n        // warn against mixing mustaches with v-bind\n        if ('development' !== 'production') {\n          if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n            return attr.name === ':class' || attr.name === 'v-bind:class';\n          })) {\n            warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n          }\n        }\n      } else\n\n        // special attribute: transition\n        if (transitionRE.test(name)) {\n          modifiers.literal = !bindRE.test(name);\n          pushDir('transition', internalDirectives.transition);\n        } else\n\n          // event handlers\n          if (onRE.test(name)) {\n            arg = name.replace(onRE, '');\n            pushDir('on', directives.on);\n          } else\n\n            // attribute bindings\n            if (bindRE.test(name)) {\n              dirName = name.replace(bindRE, '');\n              if (dirName === 'style' || dirName === 'class') {\n                pushDir(dirName, internalDirectives[dirName]);\n              } else {\n                arg = dirName;\n                pushDir('bind', directives.bind);\n              }\n            } else\n\n              // normal directives\n              if (matched = name.match(dirAttrRE)) {\n                dirName = matched[1];\n                arg = matched[2];\n\n                // skip v-else (when used with v-show)\n                if (dirName === 'else') {\n                  continue;\n                }\n\n                dirDef = resolveAsset(options, 'directives', dirName, true);\n                if (dirDef) {\n                  pushDir(dirName, dirDef);\n                }\n              }\n    }\n\n    /**\n     * Push a directive.\n     *\n     * @param {String} dirName\n     * @param {Object|Function} def\n     * @param {Array} [interpTokens]\n     */\n\n    function pushDir(dirName, def, interpTokens) {\n      var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n      var parsed = !hasOneTimeToken && parseDirective(value);\n      dirs.push({\n        name: dirName,\n        attr: rawName,\n        raw: rawValue,\n        def: def,\n        arg: arg,\n        modifiers: modifiers,\n        // conversion from interpolation strings with one-time token\n        // to expression is differed until directive bind time so that we\n        // have access to the actual vm context for one-time bindings.\n        expression: parsed && parsed.expression,\n        filters: parsed && parsed.filters,\n        interp: interpTokens,\n        hasOneTime: hasOneTimeToken\n      });\n    }\n\n    if (dirs.length) {\n      return makeNodeLinkFn(dirs);\n    }\n  }\n\n  /**\n   * Parse modifiers from directive attribute name.\n   *\n   * @param {String} name\n   * @return {Object}\n   */\n\n  function parseModifiers(name) {\n    var res = Object.create(null);\n    var match = name.match(modifierRE);\n    if (match) {\n      var i = match.length;\n      while (i--) {\n        res[match[i].slice(1)] = true;\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Build a link function for all directives on a single node.\n   *\n   * @param {Array} directives\n   * @return {Function} directivesLinkFn\n   */\n\n  function makeNodeLinkFn(directives) {\n    return function nodeLinkFn(vm, el, host, scope, frag) {\n      // reverse apply because it's sorted low to high\n      var i = directives.length;\n      while (i--) {\n        vm._bindDir(directives[i], el, host, scope, frag);\n      }\n    };\n  }\n\n  /**\n   * Check if an interpolation string contains one-time tokens.\n   *\n   * @param {Array} tokens\n   * @return {Boolean}\n   */\n\n  function hasOneTime(tokens) {\n    var i = tokens.length;\n    while (i--) {\n      if (tokens[i].oneTime) return true;\n    }\n  }\n\n  function isScript(el) {\n    return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n  }\n\n  var specialCharRE = /[^\\w\\-:\\.]/;\n\n  /**\n   * Process an element or a DocumentFragment based on a\n   * instance option object. This allows us to transclude\n   * a template node/fragment before the instance is created,\n   * so the processed fragment can then be cloned and reused\n   * in v-for.\n   *\n   * @param {Element} el\n   * @param {Object} options\n   * @return {Element|DocumentFragment}\n   */\n\n  function transclude(el, options) {\n    // extract container attributes to pass them down\n    // to compiler, because they need to be compiled in\n    // parent scope. we are mutating the options object here\n    // assuming the same object will be used for compile\n    // right after this.\n    if (options) {\n      options._containerAttrs = extractAttrs(el);\n    }\n    // for template tags, what we want is its content as\n    // a documentFragment (for fragment instances)\n    if (isTemplate(el)) {\n      el = parseTemplate(el);\n    }\n    if (options) {\n      if (options._asComponent && !options.template) {\n        options.template = '<slot></slot>';\n      }\n      if (options.template) {\n        options._content = extractContent(el);\n        el = transcludeTemplate(el, options);\n      }\n    }\n    if (isFragment(el)) {\n      // anchors for fragment instance\n      // passing in `persist: true` to avoid them being\n      // discarded by IE during template cloning\n      prepend(createAnchor('v-start', true), el);\n      el.appendChild(createAnchor('v-end', true));\n    }\n    return el;\n  }\n\n  /**\n   * Process the template option.\n   * If the replace option is true this will swap the $el.\n   *\n   * @param {Element} el\n   * @param {Object} options\n   * @return {Element|DocumentFragment}\n   */\n\n  function transcludeTemplate(el, options) {\n    var template = options.template;\n    var frag = parseTemplate(template, true);\n    if (frag) {\n      var replacer = frag.firstChild;\n      var tag = replacer.tagName && replacer.tagName.toLowerCase();\n      if (options.replace) {\n        /* istanbul ignore if */\n        if (el === document.body) {\n          'development' !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n        }\n        // there are many cases where the instance must\n        // become a fragment instance: basically anything that\n        // can create more than 1 root nodes.\n        if (\n        // multi-children template\n        frag.childNodes.length > 1 ||\n        // non-element template\n        replacer.nodeType !== 1 ||\n        // single nested component\n        tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n        // element directive\n        resolveAsset(options, 'elementDirectives', tag) ||\n        // for block\n        replacer.hasAttribute('v-for') ||\n        // if block\n        replacer.hasAttribute('v-if')) {\n          return frag;\n        } else {\n          options._replacerAttrs = extractAttrs(replacer);\n          mergeAttrs(el, replacer);\n          return replacer;\n        }\n      } else {\n        el.appendChild(frag);\n        return el;\n      }\n    } else {\n      'development' !== 'production' && warn('Invalid template option: ' + template);\n    }\n  }\n\n  /**\n   * Helper to extract a component container's attributes\n   * into a plain object array.\n   *\n   * @param {Element} el\n   * @return {Array}\n   */\n\n  function extractAttrs(el) {\n    if (el.nodeType === 1 && el.hasAttributes()) {\n      return toArray(el.attributes);\n    }\n  }\n\n  /**\n   * Merge the attributes of two elements, and make sure\n   * the class names are merged properly.\n   *\n   * @param {Element} from\n   * @param {Element} to\n   */\n\n  function mergeAttrs(from, to) {\n    var attrs = from.attributes;\n    var i = attrs.length;\n    var name, value;\n    while (i--) {\n      name = attrs[i].name;\n      value = attrs[i].value;\n      if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n        to.setAttribute(name, value);\n      } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n        value.split(/\\s+/).forEach(function (cls) {\n          addClass(to, cls);\n        });\n      }\n    }\n  }\n\n  /**\n   * Scan and determine slot content distribution.\n   * We do this during transclusion instead at compile time so that\n   * the distribution is decoupled from the compilation order of\n   * the slots.\n   *\n   * @param {Element|DocumentFragment} template\n   * @param {Element} content\n   * @param {Vue} vm\n   */\n\n  function resolveSlots(vm, content) {\n    if (!content) {\n      return;\n    }\n    var contents = vm._slotContents = Object.create(null);\n    var el, name;\n    for (var i = 0, l = content.children.length; i < l; i++) {\n      el = content.children[i];\n      /* eslint-disable no-cond-assign */\n      if (name = el.getAttribute('slot')) {\n        (contents[name] || (contents[name] = [])).push(el);\n      }\n      /* eslint-enable no-cond-assign */\n      if ('development' !== 'production' && getBindAttr(el, 'slot')) {\n        warn('The \"slot\" attribute must be static.', vm.$parent);\n      }\n    }\n    for (name in contents) {\n      contents[name] = extractFragment(contents[name], content);\n    }\n    if (content.hasChildNodes()) {\n      var nodes = content.childNodes;\n      if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n        return;\n      }\n      contents['default'] = extractFragment(content.childNodes, content);\n    }\n  }\n\n  /**\n   * Extract qualified content nodes from a node list.\n   *\n   * @param {NodeList} nodes\n   * @return {DocumentFragment}\n   */\n\n  function extractFragment(nodes, parent) {\n    var frag = document.createDocumentFragment();\n    nodes = toArray(nodes);\n    for (var i = 0, l = nodes.length; i < l; i++) {\n      var node = nodes[i];\n      if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n        parent.removeChild(node);\n        node = parseTemplate(node, true);\n      }\n      frag.appendChild(node);\n    }\n    return frag;\n  }\n\n\n\n  var compiler = Object.freeze({\n  \tcompile: compile,\n  \tcompileAndLinkProps: compileAndLinkProps,\n  \tcompileRoot: compileRoot,\n  \ttransclude: transclude,\n  \tresolveSlots: resolveSlots\n  });\n\n  function stateMixin (Vue) {\n    /**\n     * Accessor for `$data` property, since setting $data\n     * requires observing the new object and updating\n     * proxied properties.\n     */\n\n    Object.defineProperty(Vue.prototype, '$data', {\n      get: function get() {\n        return this._data;\n      },\n      set: function set(newData) {\n        if (newData !== this._data) {\n          this._setData(newData);\n        }\n      }\n    });\n\n    /**\n     * Setup the scope of an instance, which contains:\n     * - observed data\n     * - computed properties\n     * - user methods\n     * - meta properties\n     */\n\n    Vue.prototype._initState = function () {\n      this._initProps();\n      this._initMeta();\n      this._initMethods();\n      this._initData();\n      this._initComputed();\n    };\n\n    /**\n     * Initialize props.\n     */\n\n    Vue.prototype._initProps = function () {\n      var options = this.$options;\n      var el = options.el;\n      var props = options.props;\n      if (props && !el) {\n        'development' !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n      }\n      // make sure to convert string selectors into element now\n      el = options.el = query(el);\n      this._propsUnlinkFn = el && el.nodeType === 1 && props\n      // props must be linked in proper scope if inside v-for\n      ? compileAndLinkProps(this, el, props, this._scope) : null;\n    };\n\n    /**\n     * Initialize the data.\n     */\n\n    Vue.prototype._initData = function () {\n      var dataFn = this.$options.data;\n      var data = this._data = dataFn ? dataFn() : {};\n      if (!isPlainObject(data)) {\n        data = {};\n        'development' !== 'production' && warn('data functions should return an object.', this);\n      }\n      var props = this._props;\n      // proxy data on instance\n      var keys = Object.keys(data);\n      var i, key;\n      i = keys.length;\n      while (i--) {\n        key = keys[i];\n        // there are two scenarios where we can proxy a data key:\n        // 1. it's not already defined as a prop\n        // 2. it's provided via a instantiation option AND there are no\n        //    template prop present\n        if (!props || !hasOwn(props, key)) {\n          this._proxy(key);\n        } else if ('development' !== 'production') {\n          warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n        }\n      }\n      // observe data\n      observe(data, this);\n    };\n\n    /**\n     * Swap the instance's $data. Called in $data's setter.\n     *\n     * @param {Object} newData\n     */\n\n    Vue.prototype._setData = function (newData) {\n      newData = newData || {};\n      var oldData = this._data;\n      this._data = newData;\n      var keys, key, i;\n      // unproxy keys not present in new data\n      keys = Object.keys(oldData);\n      i = keys.length;\n      while (i--) {\n        key = keys[i];\n        if (!(key in newData)) {\n          this._unproxy(key);\n        }\n      }\n      // proxy keys not already proxied,\n      // and trigger change for changed values\n      keys = Object.keys(newData);\n      i = keys.length;\n      while (i--) {\n        key = keys[i];\n        if (!hasOwn(this, key)) {\n          // new property\n          this._proxy(key);\n        }\n      }\n      oldData.__ob__.removeVm(this);\n      observe(newData, this);\n      this._digest();\n    };\n\n    /**\n     * Proxy a property, so that\n     * vm.prop === vm._data.prop\n     *\n     * @param {String} key\n     */\n\n    Vue.prototype._proxy = function (key) {\n      if (!isReserved(key)) {\n        // need to store ref to self here\n        // because these getter/setters might\n        // be called by child scopes via\n        // prototype inheritance.\n        var self = this;\n        Object.defineProperty(self, key, {\n          configurable: true,\n          enumerable: true,\n          get: function proxyGetter() {\n            return self._data[key];\n          },\n          set: function proxySetter(val) {\n            self._data[key] = val;\n          }\n        });\n      }\n    };\n\n    /**\n     * Unproxy a property.\n     *\n     * @param {String} key\n     */\n\n    Vue.prototype._unproxy = function (key) {\n      if (!isReserved(key)) {\n        delete this[key];\n      }\n    };\n\n    /**\n     * Force update on every watcher in scope.\n     */\n\n    Vue.prototype._digest = function () {\n      for (var i = 0, l = this._watchers.length; i < l; i++) {\n        this._watchers[i].update(true); // shallow updates\n      }\n    };\n\n    /**\n     * Setup computed properties. They are essentially\n     * special getter/setters\n     */\n\n    function noop() {}\n    Vue.prototype._initComputed = function () {\n      var computed = this.$options.computed;\n      if (computed) {\n        for (var key in computed) {\n          var userDef = computed[key];\n          var def = {\n            enumerable: true,\n            configurable: true\n          };\n          if (typeof userDef === 'function') {\n            def.get = makeComputedGetter(userDef, this);\n            def.set = noop;\n          } else {\n            def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n            def.set = userDef.set ? bind(userDef.set, this) : noop;\n          }\n          Object.defineProperty(this, key, def);\n        }\n      }\n    };\n\n    function makeComputedGetter(getter, owner) {\n      var watcher = new Watcher(owner, getter, null, {\n        lazy: true\n      });\n      return function computedGetter() {\n        if (watcher.dirty) {\n          watcher.evaluate();\n        }\n        if (Dep.target) {\n          watcher.depend();\n        }\n        return watcher.value;\n      };\n    }\n\n    /**\n     * Setup instance methods. Methods must be bound to the\n     * instance since they might be passed down as a prop to\n     * child components.\n     */\n\n    Vue.prototype._initMethods = function () {\n      var methods = this.$options.methods;\n      if (methods) {\n        for (var key in methods) {\n          this[key] = bind(methods[key], this);\n        }\n      }\n    };\n\n    /**\n     * Initialize meta information like $index, $key & $value.\n     */\n\n    Vue.prototype._initMeta = function () {\n      var metas = this.$options._meta;\n      if (metas) {\n        for (var key in metas) {\n          defineReactive(this, key, metas[key]);\n        }\n      }\n    };\n  }\n\n  var eventRE = /^v-on:|^@/;\n\n  function eventsMixin (Vue) {\n    /**\n     * Setup the instance's option events & watchers.\n     * If the value is a string, we pull it from the\n     * instance's methods by name.\n     */\n\n    Vue.prototype._initEvents = function () {\n      var options = this.$options;\n      if (options._asComponent) {\n        registerComponentEvents(this, options.el);\n      }\n      registerCallbacks(this, '$on', options.events);\n      registerCallbacks(this, '$watch', options.watch);\n    };\n\n    /**\n     * Register v-on events on a child component\n     *\n     * @param {Vue} vm\n     * @param {Element} el\n     */\n\n    function registerComponentEvents(vm, el) {\n      var attrs = el.attributes;\n      var name, value, handler;\n      for (var i = 0, l = attrs.length; i < l; i++) {\n        name = attrs[i].name;\n        if (eventRE.test(name)) {\n          name = name.replace(eventRE, '');\n          // force the expression into a statement so that\n          // it always dynamically resolves the method to call (#2670)\n          // kinda ugly hack, but does the job.\n          value = attrs[i].value;\n          if (isSimplePath(value)) {\n            value += '.apply(this, $arguments)';\n          }\n          handler = (vm._scope || vm._context).$eval(value, true);\n          handler._fromParent = true;\n          vm.$on(name.replace(eventRE), handler);\n        }\n      }\n    }\n\n    /**\n     * Register callbacks for option events and watchers.\n     *\n     * @param {Vue} vm\n     * @param {String} action\n     * @param {Object} hash\n     */\n\n    function registerCallbacks(vm, action, hash) {\n      if (!hash) return;\n      var handlers, key, i, j;\n      for (key in hash) {\n        handlers = hash[key];\n        if (isArray(handlers)) {\n          for (i = 0, j = handlers.length; i < j; i++) {\n            register(vm, action, key, handlers[i]);\n          }\n        } else {\n          register(vm, action, key, handlers);\n        }\n      }\n    }\n\n    /**\n     * Helper to register an event/watch callback.\n     *\n     * @param {Vue} vm\n     * @param {String} action\n     * @param {String} key\n     * @param {Function|String|Object} handler\n     * @param {Object} [options]\n     */\n\n    function register(vm, action, key, handler, options) {\n      var type = typeof handler;\n      if (type === 'function') {\n        vm[action](key, handler, options);\n      } else if (type === 'string') {\n        var methods = vm.$options.methods;\n        var method = methods && methods[handler];\n        if (method) {\n          vm[action](key, method, options);\n        } else {\n          'development' !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n        }\n      } else if (handler && type === 'object') {\n        register(vm, action, key, handler.handler, handler);\n      }\n    }\n\n    /**\n     * Setup recursive attached/detached calls\n     */\n\n    Vue.prototype._initDOMHooks = function () {\n      this.$on('hook:attached', onAttached);\n      this.$on('hook:detached', onDetached);\n    };\n\n    /**\n     * Callback to recursively call attached hook on children\n     */\n\n    function onAttached() {\n      if (!this._isAttached) {\n        this._isAttached = true;\n        this.$children.forEach(callAttach);\n      }\n    }\n\n    /**\n     * Iterator to call attached hook\n     *\n     * @param {Vue} child\n     */\n\n    function callAttach(child) {\n      if (!child._isAttached && inDoc(child.$el)) {\n        child._callHook('attached');\n      }\n    }\n\n    /**\n     * Callback to recursively call detached hook on children\n     */\n\n    function onDetached() {\n      if (this._isAttached) {\n        this._isAttached = false;\n        this.$children.forEach(callDetach);\n      }\n    }\n\n    /**\n     * Iterator to call detached hook\n     *\n     * @param {Vue} child\n     */\n\n    function callDetach(child) {\n      if (child._isAttached && !inDoc(child.$el)) {\n        child._callHook('detached');\n      }\n    }\n\n    /**\n     * Trigger all handlers for a hook\n     *\n     * @param {String} hook\n     */\n\n    Vue.prototype._callHook = function (hook) {\n      this.$emit('pre-hook:' + hook);\n      var handlers = this.$options[hook];\n      if (handlers) {\n        for (var i = 0, j = handlers.length; i < j; i++) {\n          handlers[i].call(this);\n        }\n      }\n      this.$emit('hook:' + hook);\n    };\n  }\n\n  function noop$1() {}\n\n  /**\n   * A directive links a DOM element with a piece of data,\n   * which is the result of evaluating an expression.\n   * It registers a watcher with the expression and calls\n   * the DOM update function when a change is triggered.\n   *\n   * @param {Object} descriptor\n   *                 - {String} name\n   *                 - {Object} def\n   *                 - {String} expression\n   *                 - {Array<Object>} [filters]\n   *                 - {Object} [modifiers]\n   *                 - {Boolean} literal\n   *                 - {String} attr\n   *                 - {String} arg\n   *                 - {String} raw\n   *                 - {String} [ref]\n   *                 - {Array<Object>} [interp]\n   *                 - {Boolean} [hasOneTime]\n   * @param {Vue} vm\n   * @param {Node} el\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   * @constructor\n   */\n  function Directive(descriptor, vm, el, host, scope, frag) {\n    this.vm = vm;\n    this.el = el;\n    // copy descriptor properties\n    this.descriptor = descriptor;\n    this.name = descriptor.name;\n    this.expression = descriptor.expression;\n    this.arg = descriptor.arg;\n    this.modifiers = descriptor.modifiers;\n    this.filters = descriptor.filters;\n    this.literal = this.modifiers && this.modifiers.literal;\n    // private\n    this._locked = false;\n    this._bound = false;\n    this._listeners = null;\n    // link context\n    this._host = host;\n    this._scope = scope;\n    this._frag = frag;\n    // store directives on node in dev mode\n    if ('development' !== 'production' && this.el) {\n      this.el._vue_directives = this.el._vue_directives || [];\n      this.el._vue_directives.push(this);\n    }\n  }\n\n  /**\n   * Initialize the directive, mixin definition properties,\n   * setup the watcher, call definition bind() and update()\n   * if present.\n   */\n\n  Directive.prototype._bind = function () {\n    var name = this.name;\n    var descriptor = this.descriptor;\n\n    // remove attribute\n    if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n      var attr = descriptor.attr || 'v-' + name;\n      this.el.removeAttribute(attr);\n    }\n\n    // copy def properties\n    var def = descriptor.def;\n    if (typeof def === 'function') {\n      this.update = def;\n    } else {\n      extend(this, def);\n    }\n\n    // setup directive params\n    this._setupParams();\n\n    // initial bind\n    if (this.bind) {\n      this.bind();\n    }\n    this._bound = true;\n\n    if (this.literal) {\n      this.update && this.update(descriptor.raw);\n    } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n      // wrapped updater for context\n      var dir = this;\n      if (this.update) {\n        this._update = function (val, oldVal) {\n          if (!dir._locked) {\n            dir.update(val, oldVal);\n          }\n        };\n      } else {\n        this._update = noop$1;\n      }\n      var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n      var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n      var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n      {\n        filters: this.filters,\n        twoWay: this.twoWay,\n        deep: this.deep,\n        preProcess: preProcess,\n        postProcess: postProcess,\n        scope: this._scope\n      });\n      // v-model with inital inline value need to sync back to\n      // model instead of update to DOM on init. They would\n      // set the afterBind hook to indicate that.\n      if (this.afterBind) {\n        this.afterBind();\n      } else if (this.update) {\n        this.update(watcher.value);\n      }\n    }\n  };\n\n  /**\n   * Setup all param attributes, e.g. track-by,\n   * transition-mode, etc...\n   */\n\n  Directive.prototype._setupParams = function () {\n    if (!this.params) {\n      return;\n    }\n    var params = this.params;\n    // swap the params array with a fresh object.\n    this.params = Object.create(null);\n    var i = params.length;\n    var key, val, mappedKey;\n    while (i--) {\n      key = hyphenate(params[i]);\n      mappedKey = camelize(key);\n      val = getBindAttr(this.el, key);\n      if (val != null) {\n        // dynamic\n        this._setupParamWatcher(mappedKey, val);\n      } else {\n        // static\n        val = getAttr(this.el, key);\n        if (val != null) {\n          this.params[mappedKey] = val === '' ? true : val;\n        }\n      }\n    }\n  };\n\n  /**\n   * Setup a watcher for a dynamic param.\n   *\n   * @param {String} key\n   * @param {String} expression\n   */\n\n  Directive.prototype._setupParamWatcher = function (key, expression) {\n    var self = this;\n    var called = false;\n    var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n      self.params[key] = val;\n      // since we are in immediate mode,\n      // only call the param change callbacks if this is not the first update.\n      if (called) {\n        var cb = self.paramWatchers && self.paramWatchers[key];\n        if (cb) {\n          cb.call(self, val, oldVal);\n        }\n      } else {\n        called = true;\n      }\n    }, {\n      immediate: true,\n      user: false\n    });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n  };\n\n  /**\n   * Check if the directive is a function caller\n   * and if the expression is a callable one. If both true,\n   * we wrap up the expression and use it as the event\n   * handler.\n   *\n   * e.g. on-click=\"a++\"\n   *\n   * @return {Boolean}\n   */\n\n  Directive.prototype._checkStatement = function () {\n    var expression = this.expression;\n    if (expression && this.acceptStatement && !isSimplePath(expression)) {\n      var fn = parseExpression(expression).get;\n      var scope = this._scope || this.vm;\n      var handler = function handler(e) {\n        scope.$event = e;\n        fn.call(scope, scope);\n        scope.$event = null;\n      };\n      if (this.filters) {\n        handler = scope._applyFilters(handler, null, this.filters);\n      }\n      this.update(handler);\n      return true;\n    }\n  };\n\n  /**\n   * Set the corresponding value with the setter.\n   * This should only be used in two-way directives\n   * e.g. v-model.\n   *\n   * @param {*} value\n   * @public\n   */\n\n  Directive.prototype.set = function (value) {\n    /* istanbul ignore else */\n    if (this.twoWay) {\n      this._withLock(function () {\n        this._watcher.set(value);\n      });\n    } else if ('development' !== 'production') {\n      warn('Directive.set() can only be used inside twoWay' + 'directives.');\n    }\n  };\n\n  /**\n   * Execute a function while preventing that function from\n   * triggering updates on this directive instance.\n   *\n   * @param {Function} fn\n   */\n\n  Directive.prototype._withLock = function (fn) {\n    var self = this;\n    self._locked = true;\n    fn.call(self);\n    nextTick(function () {\n      self._locked = false;\n    });\n  };\n\n  /**\n   * Convenience method that attaches a DOM event listener\n   * to the directive element and autometically tears it down\n   * during unbind.\n   *\n   * @param {String} event\n   * @param {Function} handler\n   * @param {Boolean} [useCapture]\n   */\n\n  Directive.prototype.on = function (event, handler, useCapture) {\n    on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n  };\n\n  /**\n   * Teardown the watcher and call unbind.\n   */\n\n  Directive.prototype._teardown = function () {\n    if (this._bound) {\n      this._bound = false;\n      if (this.unbind) {\n        this.unbind();\n      }\n      if (this._watcher) {\n        this._watcher.teardown();\n      }\n      var listeners = this._listeners;\n      var i;\n      if (listeners) {\n        i = listeners.length;\n        while (i--) {\n          off(this.el, listeners[i][0], listeners[i][1]);\n        }\n      }\n      var unwatchFns = this._paramUnwatchFns;\n      if (unwatchFns) {\n        i = unwatchFns.length;\n        while (i--) {\n          unwatchFns[i]();\n        }\n      }\n      if ('development' !== 'production' && this.el) {\n        this.el._vue_directives.$remove(this);\n      }\n      this.vm = this.el = this._watcher = this._listeners = null;\n    }\n  };\n\n  function lifecycleMixin (Vue) {\n    /**\n     * Update v-ref for component.\n     *\n     * @param {Boolean} remove\n     */\n\n    Vue.prototype._updateRef = function (remove) {\n      var ref = this.$options._ref;\n      if (ref) {\n        var refs = (this._scope || this._context).$refs;\n        if (remove) {\n          if (refs[ref] === this) {\n            refs[ref] = null;\n          }\n        } else {\n          refs[ref] = this;\n        }\n      }\n    };\n\n    /**\n     * Transclude, compile and link element.\n     *\n     * If a pre-compiled linker is available, that means the\n     * passed in element will be pre-transcluded and compiled\n     * as well - all we need to do is to call the linker.\n     *\n     * Otherwise we need to call transclude/compile/link here.\n     *\n     * @param {Element} el\n     */\n\n    Vue.prototype._compile = function (el) {\n      var options = this.$options;\n\n      // transclude and init element\n      // transclude can potentially replace original\n      // so we need to keep reference; this step also injects\n      // the template and caches the original attributes\n      // on the container node and replacer node.\n      var original = el;\n      el = transclude(el, options);\n      this._initElement(el);\n\n      // handle v-pre on root node (#2026)\n      if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n        return;\n      }\n\n      // root is always compiled per-instance, because\n      // container attrs and props can be different every time.\n      var contextOptions = this._context && this._context.$options;\n      var rootLinker = compileRoot(el, options, contextOptions);\n\n      // resolve slot distribution\n      resolveSlots(this, options._content);\n\n      // compile and link the rest\n      var contentLinkFn;\n      var ctor = this.constructor;\n      // component compilation can be cached\n      // as long as it's not using inline-template\n      if (options._linkerCachable) {\n        contentLinkFn = ctor.linker;\n        if (!contentLinkFn) {\n          contentLinkFn = ctor.linker = compile(el, options);\n        }\n      }\n\n      // link phase\n      // make sure to link root with prop scope!\n      var rootUnlinkFn = rootLinker(this, el, this._scope);\n      var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n      // register composite unlink function\n      // to be called during instance destruction\n      this._unlinkFn = function () {\n        rootUnlinkFn();\n        // passing destroying: true to avoid searching and\n        // splicing the directives\n        contentUnlinkFn(true);\n      };\n\n      // finally replace original\n      if (options.replace) {\n        replace(original, el);\n      }\n\n      this._isCompiled = true;\n      this._callHook('compiled');\n    };\n\n    /**\n     * Initialize instance element. Called in the public\n     * $mount() method.\n     *\n     * @param {Element} el\n     */\n\n    Vue.prototype._initElement = function (el) {\n      if (isFragment(el)) {\n        this._isFragment = true;\n        this.$el = this._fragmentStart = el.firstChild;\n        this._fragmentEnd = el.lastChild;\n        // set persisted text anchors to empty\n        if (this._fragmentStart.nodeType === 3) {\n          this._fragmentStart.data = this._fragmentEnd.data = '';\n        }\n        this._fragment = el;\n      } else {\n        this.$el = el;\n      }\n      this.$el.__vue__ = this;\n      this._callHook('beforeCompile');\n    };\n\n    /**\n     * Create and bind a directive to an element.\n     *\n     * @param {Object} descriptor - parsed directive descriptor\n     * @param {Node} node   - target node\n     * @param {Vue} [host] - transclusion host component\n     * @param {Object} [scope] - v-for scope\n     * @param {Fragment} [frag] - owner fragment\n     */\n\n    Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n      this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n    };\n\n    /**\n     * Teardown an instance, unobserves the data, unbind all the\n     * directives, turn off all the event listeners, etc.\n     *\n     * @param {Boolean} remove - whether to remove the DOM node.\n     * @param {Boolean} deferCleanup - if true, defer cleanup to\n     *                                 be called later\n     */\n\n    Vue.prototype._destroy = function (remove, deferCleanup) {\n      if (this._isBeingDestroyed) {\n        if (!deferCleanup) {\n          this._cleanup();\n        }\n        return;\n      }\n\n      var destroyReady;\n      var pendingRemoval;\n\n      var self = this;\n      // Cleanup should be called either synchronously or asynchronoysly as\n      // callback of this.$remove(), or if remove and deferCleanup are false.\n      // In any case it should be called after all other removing, unbinding and\n      // turning of is done\n      var cleanupIfPossible = function cleanupIfPossible() {\n        if (destroyReady && !pendingRemoval && !deferCleanup) {\n          self._cleanup();\n        }\n      };\n\n      // remove DOM element\n      if (remove && this.$el) {\n        pendingRemoval = true;\n        this.$remove(function () {\n          pendingRemoval = false;\n          cleanupIfPossible();\n        });\n      }\n\n      this._callHook('beforeDestroy');\n      this._isBeingDestroyed = true;\n      var i;\n      // remove self from parent. only necessary\n      // if parent is not being destroyed as well.\n      var parent = this.$parent;\n      if (parent && !parent._isBeingDestroyed) {\n        parent.$children.$remove(this);\n        // unregister ref (remove: true)\n        this._updateRef(true);\n      }\n      // destroy all children.\n      i = this.$children.length;\n      while (i--) {\n        this.$children[i].$destroy();\n      }\n      // teardown props\n      if (this._propsUnlinkFn) {\n        this._propsUnlinkFn();\n      }\n      // teardown all directives. this also tearsdown all\n      // directive-owned watchers.\n      if (this._unlinkFn) {\n        this._unlinkFn();\n      }\n      i = this._watchers.length;\n      while (i--) {\n        this._watchers[i].teardown();\n      }\n      // remove reference to self on $el\n      if (this.$el) {\n        this.$el.__vue__ = null;\n      }\n\n      destroyReady = true;\n      cleanupIfPossible();\n    };\n\n    /**\n     * Clean up to ensure garbage collection.\n     * This is called after the leave transition if there\n     * is any.\n     */\n\n    Vue.prototype._cleanup = function () {\n      if (this._isDestroyed) {\n        return;\n      }\n      // remove self from owner fragment\n      // do it in cleanup so that we can call $destroy with\n      // defer right when a fragment is about to be removed.\n      if (this._frag) {\n        this._frag.children.$remove(this);\n      }\n      // remove reference from data ob\n      // frozen object may not have observer.\n      if (this._data && this._data.__ob__) {\n        this._data.__ob__.removeVm(this);\n      }\n      // Clean up references to private properties and other\n      // instances. preserve reference to _data so that proxy\n      // accessors still work. The only potential side effect\n      // here is that mutating the instance after it's destroyed\n      // may affect the state of other components that are still\n      // observing the same object, but that seems to be a\n      // reasonable responsibility for the user rather than\n      // always throwing an error on them.\n      this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n      // call the last hook...\n      this._isDestroyed = true;\n      this._callHook('destroyed');\n      // turn off all instance listeners.\n      this.$off();\n    };\n  }\n\n  function miscMixin (Vue) {\n    /**\n     * Apply a list of filter (descriptors) to a value.\n     * Using plain for loops here because this will be called in\n     * the getter of any watcher with filters so it is very\n     * performance sensitive.\n     *\n     * @param {*} value\n     * @param {*} [oldValue]\n     * @param {Array} filters\n     * @param {Boolean} write\n     * @return {*}\n     */\n\n    Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n      var filter, fn, args, arg, offset, i, l, j, k;\n      for (i = 0, l = filters.length; i < l; i++) {\n        filter = filters[write ? l - i - 1 : i];\n        fn = resolveAsset(this.$options, 'filters', filter.name, true);\n        if (!fn) continue;\n        fn = write ? fn.write : fn.read || fn;\n        if (typeof fn !== 'function') continue;\n        args = write ? [value, oldValue] : [value];\n        offset = write ? 2 : 1;\n        if (filter.args) {\n          for (j = 0, k = filter.args.length; j < k; j++) {\n            arg = filter.args[j];\n            args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n          }\n        }\n        value = fn.apply(this, args);\n      }\n      return value;\n    };\n\n    /**\n     * Resolve a component, depending on whether the component\n     * is defined normally or using an async factory function.\n     * Resolves synchronously if already resolved, otherwise\n     * resolves asynchronously and caches the resolved\n     * constructor on the factory.\n     *\n     * @param {String|Function} value\n     * @param {Function} cb\n     */\n\n    Vue.prototype._resolveComponent = function (value, cb) {\n      var factory;\n      if (typeof value === 'function') {\n        factory = value;\n      } else {\n        factory = resolveAsset(this.$options, 'components', value, true);\n      }\n      /* istanbul ignore if */\n      if (!factory) {\n        return;\n      }\n      // async component factory\n      if (!factory.options) {\n        if (factory.resolved) {\n          // cached\n          cb(factory.resolved);\n        } else if (factory.requested) {\n          // pool callbacks\n          factory.pendingCallbacks.push(cb);\n        } else {\n          factory.requested = true;\n          var cbs = factory.pendingCallbacks = [cb];\n          factory.call(this, function resolve(res) {\n            if (isPlainObject(res)) {\n              res = Vue.extend(res);\n            }\n            // cache resolved\n            factory.resolved = res;\n            // invoke callbacks\n            for (var i = 0, l = cbs.length; i < l; i++) {\n              cbs[i](res);\n            }\n          }, function reject(reason) {\n            'development' !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n          });\n        }\n      } else {\n        // normal component\n        cb(factory);\n      }\n    };\n  }\n\n  var filterRE$1 = /[^|]\\|[^|]/;\n\n  function dataAPI (Vue) {\n    /**\n     * Get the value from an expression on this vm.\n     *\n     * @param {String} exp\n     * @param {Boolean} [asStatement]\n     * @return {*}\n     */\n\n    Vue.prototype.$get = function (exp, asStatement) {\n      var res = parseExpression(exp);\n      if (res) {\n        if (asStatement) {\n          var self = this;\n          return function statementHandler() {\n            self.$arguments = toArray(arguments);\n            var result = res.get.call(self, self);\n            self.$arguments = null;\n            return result;\n          };\n        } else {\n          try {\n            return res.get.call(this, this);\n          } catch (e) {}\n        }\n      }\n    };\n\n    /**\n     * Set the value from an expression on this vm.\n     * The expression must be a valid left-hand\n     * expression in an assignment.\n     *\n     * @param {String} exp\n     * @param {*} val\n     */\n\n    Vue.prototype.$set = function (exp, val) {\n      var res = parseExpression(exp, true);\n      if (res && res.set) {\n        res.set.call(this, this, val);\n      }\n    };\n\n    /**\n     * Delete a property on the VM\n     *\n     * @param {String} key\n     */\n\n    Vue.prototype.$delete = function (key) {\n      del(this._data, key);\n    };\n\n    /**\n     * Watch an expression, trigger callback when its\n     * value changes.\n     *\n     * @param {String|Function} expOrFn\n     * @param {Function} cb\n     * @param {Object} [options]\n     *                 - {Boolean} deep\n     *                 - {Boolean} immediate\n     * @return {Function} - unwatchFn\n     */\n\n    Vue.prototype.$watch = function (expOrFn, cb, options) {\n      var vm = this;\n      var parsed;\n      if (typeof expOrFn === 'string') {\n        parsed = parseDirective(expOrFn);\n        expOrFn = parsed.expression;\n      }\n      var watcher = new Watcher(vm, expOrFn, cb, {\n        deep: options && options.deep,\n        sync: options && options.sync,\n        filters: parsed && parsed.filters,\n        user: !options || options.user !== false\n      });\n      if (options && options.immediate) {\n        cb.call(vm, watcher.value);\n      }\n      return function unwatchFn() {\n        watcher.teardown();\n      };\n    };\n\n    /**\n     * Evaluate a text directive, including filters.\n     *\n     * @param {String} text\n     * @param {Boolean} [asStatement]\n     * @return {String}\n     */\n\n    Vue.prototype.$eval = function (text, asStatement) {\n      // check for filters.\n      if (filterRE$1.test(text)) {\n        var dir = parseDirective(text);\n        // the filter regex check might give false positive\n        // for pipes inside strings, so it's possible that\n        // we don't get any filters here\n        var val = this.$get(dir.expression, asStatement);\n        return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n      } else {\n        // no filter\n        return this.$get(text, asStatement);\n      }\n    };\n\n    /**\n     * Interpolate a piece of template text.\n     *\n     * @param {String} text\n     * @return {String}\n     */\n\n    Vue.prototype.$interpolate = function (text) {\n      var tokens = parseText(text);\n      var vm = this;\n      if (tokens) {\n        if (tokens.length === 1) {\n          return vm.$eval(tokens[0].value) + '';\n        } else {\n          return tokens.map(function (token) {\n            return token.tag ? vm.$eval(token.value) : token.value;\n          }).join('');\n        }\n      } else {\n        return text;\n      }\n    };\n\n    /**\n     * Log instance data as a plain JS object\n     * so that it is easier to inspect in console.\n     * This method assumes console is available.\n     *\n     * @param {String} [path]\n     */\n\n    Vue.prototype.$log = function (path) {\n      var data = path ? getPath(this._data, path) : this._data;\n      if (data) {\n        data = clean(data);\n      }\n      // include computed fields\n      if (!path) {\n        var key;\n        for (key in this.$options.computed) {\n          data[key] = clean(this[key]);\n        }\n        if (this._props) {\n          for (key in this._props) {\n            data[key] = clean(this[key]);\n          }\n        }\n      }\n      console.log(data);\n    };\n\n    /**\n     * \"clean\" a getter/setter converted object into a plain\n     * object copy.\n     *\n     * @param {Object} - obj\n     * @return {Object}\n     */\n\n    function clean(obj) {\n      return JSON.parse(JSON.stringify(obj));\n    }\n  }\n\n  function domAPI (Vue) {\n    /**\n     * Convenience on-instance nextTick. The callback is\n     * auto-bound to the instance, and this avoids component\n     * modules having to rely on the global Vue.\n     *\n     * @param {Function} fn\n     */\n\n    Vue.prototype.$nextTick = function (fn) {\n      nextTick(fn, this);\n    };\n\n    /**\n     * Append instance to target\n     *\n     * @param {Node} target\n     * @param {Function} [cb]\n     * @param {Boolean} [withTransition] - defaults to true\n     */\n\n    Vue.prototype.$appendTo = function (target, cb, withTransition) {\n      return insert(this, target, cb, withTransition, append, appendWithTransition);\n    };\n\n    /**\n     * Prepend instance to target\n     *\n     * @param {Node} target\n     * @param {Function} [cb]\n     * @param {Boolean} [withTransition] - defaults to true\n     */\n\n    Vue.prototype.$prependTo = function (target, cb, withTransition) {\n      target = query(target);\n      if (target.hasChildNodes()) {\n        this.$before(target.firstChild, cb, withTransition);\n      } else {\n        this.$appendTo(target, cb, withTransition);\n      }\n      return this;\n    };\n\n    /**\n     * Insert instance before target\n     *\n     * @param {Node} target\n     * @param {Function} [cb]\n     * @param {Boolean} [withTransition] - defaults to true\n     */\n\n    Vue.prototype.$before = function (target, cb, withTransition) {\n      return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n    };\n\n    /**\n     * Insert instance after target\n     *\n     * @param {Node} target\n     * @param {Function} [cb]\n     * @param {Boolean} [withTransition] - defaults to true\n     */\n\n    Vue.prototype.$after = function (target, cb, withTransition) {\n      target = query(target);\n      if (target.nextSibling) {\n        this.$before(target.nextSibling, cb, withTransition);\n      } else {\n        this.$appendTo(target.parentNode, cb, withTransition);\n      }\n      return this;\n    };\n\n    /**\n     * Remove instance from DOM\n     *\n     * @param {Function} [cb]\n     * @param {Boolean} [withTransition] - defaults to true\n     */\n\n    Vue.prototype.$remove = function (cb, withTransition) {\n      if (!this.$el.parentNode) {\n        return cb && cb();\n      }\n      var inDocument = this._isAttached && inDoc(this.$el);\n      // if we are not in document, no need to check\n      // for transitions\n      if (!inDocument) withTransition = false;\n      var self = this;\n      var realCb = function realCb() {\n        if (inDocument) self._callHook('detached');\n        if (cb) cb();\n      };\n      if (this._isFragment) {\n        removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n      } else {\n        var op = withTransition === false ? removeWithCb : removeWithTransition;\n        op(this.$el, this, realCb);\n      }\n      return this;\n    };\n\n    /**\n     * Shared DOM insertion function.\n     *\n     * @param {Vue} vm\n     * @param {Element} target\n     * @param {Function} [cb]\n     * @param {Boolean} [withTransition]\n     * @param {Function} op1 - op for non-transition insert\n     * @param {Function} op2 - op for transition insert\n     * @return vm\n     */\n\n    function insert(vm, target, cb, withTransition, op1, op2) {\n      target = query(target);\n      var targetIsDetached = !inDoc(target);\n      var op = withTransition === false || targetIsDetached ? op1 : op2;\n      var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n      if (vm._isFragment) {\n        mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n          op(node, target, vm);\n        });\n        cb && cb();\n      } else {\n        op(vm.$el, target, vm, cb);\n      }\n      if (shouldCallHook) {\n        vm._callHook('attached');\n      }\n      return vm;\n    }\n\n    /**\n     * Check for selectors\n     *\n     * @param {String|Element} el\n     */\n\n    function query(el) {\n      return typeof el === 'string' ? document.querySelector(el) : el;\n    }\n\n    /**\n     * Append operation that takes a callback.\n     *\n     * @param {Node} el\n     * @param {Node} target\n     * @param {Vue} vm - unused\n     * @param {Function} [cb]\n     */\n\n    function append(el, target, vm, cb) {\n      target.appendChild(el);\n      if (cb) cb();\n    }\n\n    /**\n     * InsertBefore operation that takes a callback.\n     *\n     * @param {Node} el\n     * @param {Node} target\n     * @param {Vue} vm - unused\n     * @param {Function} [cb]\n     */\n\n    function beforeWithCb(el, target, vm, cb) {\n      before(el, target);\n      if (cb) cb();\n    }\n\n    /**\n     * Remove operation that takes a callback.\n     *\n     * @param {Node} el\n     * @param {Vue} vm - unused\n     * @param {Function} [cb]\n     */\n\n    function removeWithCb(el, vm, cb) {\n      remove(el);\n      if (cb) cb();\n    }\n  }\n\n  function eventsAPI (Vue) {\n    /**\n     * Listen on the given `event` with `fn`.\n     *\n     * @param {String} event\n     * @param {Function} fn\n     */\n\n    Vue.prototype.$on = function (event, fn) {\n      (this._events[event] || (this._events[event] = [])).push(fn);\n      modifyListenerCount(this, event, 1);\n      return this;\n    };\n\n    /**\n     * Adds an `event` listener that will be invoked a single\n     * time then automatically removed.\n     *\n     * @param {String} event\n     * @param {Function} fn\n     */\n\n    Vue.prototype.$once = function (event, fn) {\n      var self = this;\n      function on() {\n        self.$off(event, on);\n        fn.apply(this, arguments);\n      }\n      on.fn = fn;\n      this.$on(event, on);\n      return this;\n    };\n\n    /**\n     * Remove the given callback for `event` or all\n     * registered callbacks.\n     *\n     * @param {String} event\n     * @param {Function} fn\n     */\n\n    Vue.prototype.$off = function (event, fn) {\n      var cbs;\n      // all\n      if (!arguments.length) {\n        if (this.$parent) {\n          for (event in this._events) {\n            cbs = this._events[event];\n            if (cbs) {\n              modifyListenerCount(this, event, -cbs.length);\n            }\n          }\n        }\n        this._events = {};\n        return this;\n      }\n      // specific event\n      cbs = this._events[event];\n      if (!cbs) {\n        return this;\n      }\n      if (arguments.length === 1) {\n        modifyListenerCount(this, event, -cbs.length);\n        this._events[event] = null;\n        return this;\n      }\n      // specific handler\n      var cb;\n      var i = cbs.length;\n      while (i--) {\n        cb = cbs[i];\n        if (cb === fn || cb.fn === fn) {\n          modifyListenerCount(this, event, -1);\n          cbs.splice(i, 1);\n          break;\n        }\n      }\n      return this;\n    };\n\n    /**\n     * Trigger an event on self.\n     *\n     * @param {String|Object} event\n     * @return {Boolean} shouldPropagate\n     */\n\n    Vue.prototype.$emit = function (event) {\n      var isSource = typeof event === 'string';\n      event = isSource ? event : event.name;\n      var cbs = this._events[event];\n      var shouldPropagate = isSource || !cbs;\n      if (cbs) {\n        cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n        // this is a somewhat hacky solution to the question raised\n        // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n        // the propagation handling is somewhat broken. Therefore we\n        // need to treat these inline callbacks differently.\n        var hasParentCbs = isSource && cbs.some(function (cb) {\n          return cb._fromParent;\n        });\n        if (hasParentCbs) {\n          shouldPropagate = false;\n        }\n        var args = toArray(arguments, 1);\n        for (var i = 0, l = cbs.length; i < l; i++) {\n          var cb = cbs[i];\n          var res = cb.apply(this, args);\n          if (res === true && (!hasParentCbs || cb._fromParent)) {\n            shouldPropagate = true;\n          }\n        }\n      }\n      return shouldPropagate;\n    };\n\n    /**\n     * Recursively broadcast an event to all children instances.\n     *\n     * @param {String|Object} event\n     * @param {...*} additional arguments\n     */\n\n    Vue.prototype.$broadcast = function (event) {\n      var isSource = typeof event === 'string';\n      event = isSource ? event : event.name;\n      // if no child has registered for this event,\n      // then there's no need to broadcast.\n      if (!this._eventsCount[event]) return;\n      var children = this.$children;\n      var args = toArray(arguments);\n      if (isSource) {\n        // use object event to indicate non-source emit\n        // on children\n        args[0] = { name: event, source: this };\n      }\n      for (var i = 0, l = children.length; i < l; i++) {\n        var child = children[i];\n        var shouldPropagate = child.$emit.apply(child, args);\n        if (shouldPropagate) {\n          child.$broadcast.apply(child, args);\n        }\n      }\n      return this;\n    };\n\n    /**\n     * Recursively propagate an event up the parent chain.\n     *\n     * @param {String} event\n     * @param {...*} additional arguments\n     */\n\n    Vue.prototype.$dispatch = function (event) {\n      var shouldPropagate = this.$emit.apply(this, arguments);\n      if (!shouldPropagate) return;\n      var parent = this.$parent;\n      var args = toArray(arguments);\n      // use object event to indicate non-source emit\n      // on parents\n      args[0] = { name: event, source: this };\n      while (parent) {\n        shouldPropagate = parent.$emit.apply(parent, args);\n        parent = shouldPropagate ? parent.$parent : null;\n      }\n      return this;\n    };\n\n    /**\n     * Modify the listener counts on all parents.\n     * This bookkeeping allows $broadcast to return early when\n     * no child has listened to a certain event.\n     *\n     * @param {Vue} vm\n     * @param {String} event\n     * @param {Number} count\n     */\n\n    var hookRE = /^hook:/;\n    function modifyListenerCount(vm, event, count) {\n      var parent = vm.$parent;\n      // hooks do not get broadcasted so no need\n      // to do bookkeeping for them\n      if (!parent || !count || hookRE.test(event)) return;\n      while (parent) {\n        parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n        parent = parent.$parent;\n      }\n    }\n  }\n\n  function lifecycleAPI (Vue) {\n    /**\n     * Set instance target element and kick off the compilation\n     * process. The passed in `el` can be a selector string, an\n     * existing Element, or a DocumentFragment (for block\n     * instances).\n     *\n     * @param {Element|DocumentFragment|string} el\n     * @public\n     */\n\n    Vue.prototype.$mount = function (el) {\n      if (this._isCompiled) {\n        'development' !== 'production' && warn('$mount() should be called only once.', this);\n        return;\n      }\n      el = query(el);\n      if (!el) {\n        el = document.createElement('div');\n      }\n      this._compile(el);\n      this._initDOMHooks();\n      if (inDoc(this.$el)) {\n        this._callHook('attached');\n        ready.call(this);\n      } else {\n        this.$once('hook:attached', ready);\n      }\n      return this;\n    };\n\n    /**\n     * Mark an instance as ready.\n     */\n\n    function ready() {\n      this._isAttached = true;\n      this._isReady = true;\n      this._callHook('ready');\n    }\n\n    /**\n     * Teardown the instance, simply delegate to the internal\n     * _destroy.\n     *\n     * @param {Boolean} remove\n     * @param {Boolean} deferCleanup\n     */\n\n    Vue.prototype.$destroy = function (remove, deferCleanup) {\n      this._destroy(remove, deferCleanup);\n    };\n\n    /**\n     * Partially compile a piece of DOM and return a\n     * decompile function.\n     *\n     * @param {Element|DocumentFragment} el\n     * @param {Vue} [host]\n     * @param {Object} [scope]\n     * @param {Fragment} [frag]\n     * @return {Function}\n     */\n\n    Vue.prototype.$compile = function (el, host, scope, frag) {\n      return compile(el, this.$options, true)(this, el, host, scope, frag);\n    };\n  }\n\n  /**\n   * The exposed Vue constructor.\n   *\n   * API conventions:\n   * - public API methods/properties are prefixed with `$`\n   * - internal methods/properties are prefixed with `_`\n   * - non-prefixed properties are assumed to be proxied user\n   *   data.\n   *\n   * @constructor\n   * @param {Object} [options]\n   * @public\n   */\n\n  function Vue(options) {\n    this._init(options);\n  }\n\n  // install internals\n  initMixin(Vue);\n  stateMixin(Vue);\n  eventsMixin(Vue);\n  lifecycleMixin(Vue);\n  miscMixin(Vue);\n\n  // install instance APIs\n  dataAPI(Vue);\n  domAPI(Vue);\n  eventsAPI(Vue);\n  lifecycleAPI(Vue);\n\n  var slot = {\n\n    priority: SLOT,\n    params: ['name'],\n\n    bind: function bind() {\n      // this was resolved during component transclusion\n      var name = this.params.name || 'default';\n      var content = this.vm._slotContents && this.vm._slotContents[name];\n      if (!content || !content.hasChildNodes()) {\n        this.fallback();\n      } else {\n        this.compile(content.cloneNode(true), this.vm._context, this.vm);\n      }\n    },\n\n    compile: function compile(content, context, host) {\n      if (content && context) {\n        if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n          // if the inserted slot has v-if\n          // inject fallback content as the v-else\n          var elseBlock = document.createElement('template');\n          elseBlock.setAttribute('v-else', '');\n          elseBlock.innerHTML = this.el.innerHTML;\n          // the else block should be compiled in child scope\n          elseBlock._context = this.vm;\n          content.appendChild(elseBlock);\n        }\n        var scope = host ? host._scope : this._scope;\n        this.unlink = context.$compile(content, host, scope, this._frag);\n      }\n      if (content) {\n        replace(this.el, content);\n      } else {\n        remove(this.el);\n      }\n    },\n\n    fallback: function fallback() {\n      this.compile(extractContent(this.el, true), this.vm);\n    },\n\n    unbind: function unbind() {\n      if (this.unlink) {\n        this.unlink();\n      }\n    }\n  };\n\n  var partial = {\n\n    priority: PARTIAL,\n\n    params: ['name'],\n\n    // watch changes to name for dynamic partials\n    paramWatchers: {\n      name: function name(value) {\n        vIf.remove.call(this);\n        if (value) {\n          this.insert(value);\n        }\n      }\n    },\n\n    bind: function bind() {\n      this.anchor = createAnchor('v-partial');\n      replace(this.el, this.anchor);\n      this.insert(this.params.name);\n    },\n\n    insert: function insert(id) {\n      var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n      if (partial) {\n        this.factory = new FragmentFactory(this.vm, partial);\n        vIf.insert.call(this);\n      }\n    },\n\n    unbind: function unbind() {\n      if (this.frag) {\n        this.frag.destroy();\n      }\n    }\n  };\n\n  var elementDirectives = {\n    slot: slot,\n    partial: partial\n  };\n\n  var convertArray = vFor._postProcess;\n\n  /**\n   * Limit filter for arrays\n   *\n   * @param {Number} n\n   * @param {Number} offset (Decimal expected)\n   */\n\n  function limitBy(arr, n, offset) {\n    offset = offset ? parseInt(offset, 10) : 0;\n    n = toNumber(n);\n    return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n  }\n\n  /**\n   * Filter filter for arrays\n   *\n   * @param {String} search\n   * @param {String} [delimiter]\n   * @param {String} ...dataKeys\n   */\n\n  function filterBy(arr, search, delimiter) {\n    arr = convertArray(arr);\n    if (search == null) {\n      return arr;\n    }\n    if (typeof search === 'function') {\n      return arr.filter(search);\n    }\n    // cast to lowercase string\n    search = ('' + search).toLowerCase();\n    // allow optional `in` delimiter\n    // because why not\n    var n = delimiter === 'in' ? 3 : 2;\n    // extract and flatten keys\n    var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n    var res = [];\n    var item, key, val, j;\n    for (var i = 0, l = arr.length; i < l; i++) {\n      item = arr[i];\n      val = item && item.$value || item;\n      j = keys.length;\n      if (j) {\n        while (j--) {\n          key = keys[j];\n          if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n            res.push(item);\n            break;\n          }\n        }\n      } else if (contains(item, search)) {\n        res.push(item);\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Filter filter for arrays\n   *\n   * @param {String|Array<String>|Function} ...sortKeys\n   * @param {Number} [order]\n   */\n\n  function orderBy(arr) {\n    var comparator = null;\n    var sortKeys = undefined;\n    arr = convertArray(arr);\n\n    // determine order (last argument)\n    var args = toArray(arguments, 1);\n    var order = args[args.length - 1];\n    if (typeof order === 'number') {\n      order = order < 0 ? -1 : 1;\n      args = args.length > 1 ? args.slice(0, -1) : args;\n    } else {\n      order = 1;\n    }\n\n    // determine sortKeys & comparator\n    var firstArg = args[0];\n    if (!firstArg) {\n      return arr;\n    } else if (typeof firstArg === 'function') {\n      // custom comparator\n      comparator = function (a, b) {\n        return firstArg(a, b) * order;\n      };\n    } else {\n      // string keys. flatten first\n      sortKeys = Array.prototype.concat.apply([], args);\n      comparator = function (a, b, i) {\n        i = i || 0;\n        return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n      };\n    }\n\n    function baseCompare(a, b, sortKeyIndex) {\n      var sortKey = sortKeys[sortKeyIndex];\n      if (sortKey) {\n        if (sortKey !== '$key') {\n          if (isObject(a) && '$value' in a) a = a.$value;\n          if (isObject(b) && '$value' in b) b = b.$value;\n        }\n        a = isObject(a) ? getPath(a, sortKey) : a;\n        b = isObject(b) ? getPath(b, sortKey) : b;\n      }\n      return a === b ? 0 : a > b ? order : -order;\n    }\n\n    // sort on a copy to avoid mutating original array\n    return arr.slice().sort(comparator);\n  }\n\n  /**\n   * String contain helper\n   *\n   * @param {*} val\n   * @param {String} search\n   */\n\n  function contains(val, search) {\n    var i;\n    if (isPlainObject(val)) {\n      var keys = Object.keys(val);\n      i = keys.length;\n      while (i--) {\n        if (contains(val[keys[i]], search)) {\n          return true;\n        }\n      }\n    } else if (isArray(val)) {\n      i = val.length;\n      while (i--) {\n        if (contains(val[i], search)) {\n          return true;\n        }\n      }\n    } else if (val != null) {\n      return val.toString().toLowerCase().indexOf(search) > -1;\n    }\n  }\n\n  var digitsRE = /(\\d{3})(?=\\d)/g;\n\n  // asset collections must be a plain object.\n  var filters = {\n\n    orderBy: orderBy,\n    filterBy: filterBy,\n    limitBy: limitBy,\n\n    /**\n     * Stringify value.\n     *\n     * @param {Number} indent\n     */\n\n    json: {\n      read: function read(value, indent) {\n        return typeof value === 'string' ? value : JSON.stringify(value, null, arguments.length > 1 ? indent : 2);\n      },\n      write: function write(value) {\n        try {\n          return JSON.parse(value);\n        } catch (e) {\n          return value;\n        }\n      }\n    },\n\n    /**\n     * 'abc' => 'Abc'\n     */\n\n    capitalize: function capitalize(value) {\n      if (!value && value !== 0) return '';\n      value = value.toString();\n      return value.charAt(0).toUpperCase() + value.slice(1);\n    },\n\n    /**\n     * 'abc' => 'ABC'\n     */\n\n    uppercase: function uppercase(value) {\n      return value || value === 0 ? value.toString().toUpperCase() : '';\n    },\n\n    /**\n     * 'AbC' => 'abc'\n     */\n\n    lowercase: function lowercase(value) {\n      return value || value === 0 ? value.toString().toLowerCase() : '';\n    },\n\n    /**\n     * 12345 => $12,345.00\n     *\n     * @param {String} sign\n     * @param {Number} decimals Decimal places\n     */\n\n    currency: function currency(value, _currency, decimals) {\n      value = parseFloat(value);\n      if (!isFinite(value) || !value && value !== 0) return '';\n      _currency = _currency != null ? _currency : '$';\n      decimals = decimals != null ? decimals : 2;\n      var stringified = Math.abs(value).toFixed(decimals);\n      var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n      var i = _int.length % 3;\n      var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n      var _float = decimals ? stringified.slice(-1 - decimals) : '';\n      var sign = value < 0 ? '-' : '';\n      return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n    },\n\n    /**\n     * 'item' => 'items'\n     *\n     * @params\n     *  an array of strings corresponding to\n     *  the single, double, triple ... forms of the word to\n     *  be pluralized. When the number to be pluralized\n     *  exceeds the length of the args, it will use the last\n     *  entry in the array.\n     *\n     *  e.g. ['single', 'double', 'triple', 'multiple']\n     */\n\n    pluralize: function pluralize(value) {\n      var args = toArray(arguments, 1);\n      var length = args.length;\n      if (length > 1) {\n        var index = value % 10 - 1;\n        return index in args ? args[index] : args[length - 1];\n      } else {\n        return args[0] + (value === 1 ? '' : 's');\n      }\n    },\n\n    /**\n     * Debounce a handler function.\n     *\n     * @param {Function} handler\n     * @param {Number} delay = 300\n     * @return {Function}\n     */\n\n    debounce: function debounce(handler, delay) {\n      if (!handler) return;\n      if (!delay) {\n        delay = 300;\n      }\n      return _debounce(handler, delay);\n    }\n  };\n\n  function installGlobalAPI (Vue) {\n    /**\n     * Vue and every constructor that extends Vue has an\n     * associated options object, which can be accessed during\n     * compilation steps as `this.constructor.options`.\n     *\n     * These can be seen as the default options of every\n     * Vue instance.\n     */\n\n    Vue.options = {\n      directives: directives,\n      elementDirectives: elementDirectives,\n      filters: filters,\n      transitions: {},\n      components: {},\n      partials: {},\n      replace: true\n    };\n\n    /**\n     * Expose useful internals\n     */\n\n    Vue.util = util;\n    Vue.config = config;\n    Vue.set = set;\n    Vue['delete'] = del;\n    Vue.nextTick = nextTick;\n\n    /**\n     * The following are exposed for advanced usage / plugins\n     */\n\n    Vue.compiler = compiler;\n    Vue.FragmentFactory = FragmentFactory;\n    Vue.internalDirectives = internalDirectives;\n    Vue.parsers = {\n      path: path,\n      text: text,\n      template: template,\n      directive: directive,\n      expression: expression\n    };\n\n    /**\n     * Each instance constructor, including Vue, has a unique\n     * cid. This enables us to create wrapped \"child\n     * constructors\" for prototypal inheritance and cache them.\n     */\n\n    Vue.cid = 0;\n    var cid = 1;\n\n    /**\n     * Class inheritance\n     *\n     * @param {Object} extendOptions\n     */\n\n    Vue.extend = function (extendOptions) {\n      extendOptions = extendOptions || {};\n      var Super = this;\n      var isFirstExtend = Super.cid === 0;\n      if (isFirstExtend && extendOptions._Ctor) {\n        return extendOptions._Ctor;\n      }\n      var name = extendOptions.name || Super.options.name;\n      if ('development' !== 'production') {\n        if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n          warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n          name = null;\n        }\n      }\n      var Sub = createClass(name || 'VueComponent');\n      Sub.prototype = Object.create(Super.prototype);\n      Sub.prototype.constructor = Sub;\n      Sub.cid = cid++;\n      Sub.options = mergeOptions(Super.options, extendOptions);\n      Sub['super'] = Super;\n      // allow further extension\n      Sub.extend = Super.extend;\n      // create asset registers, so extended classes\n      // can have their private assets too.\n      config._assetTypes.forEach(function (type) {\n        Sub[type] = Super[type];\n      });\n      // enable recursive self-lookup\n      if (name) {\n        Sub.options.components[name] = Sub;\n      }\n      // cache constructor\n      if (isFirstExtend) {\n        extendOptions._Ctor = Sub;\n      }\n      return Sub;\n    };\n\n    /**\n     * A function that returns a sub-class constructor with the\n     * given name. This gives us much nicer output when\n     * logging instances in the console.\n     *\n     * @param {String} name\n     * @return {Function}\n     */\n\n    function createClass(name) {\n      /* eslint-disable no-new-func */\n      return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n      /* eslint-enable no-new-func */\n    }\n\n    /**\n     * Plugin system\n     *\n     * @param {Object} plugin\n     */\n\n    Vue.use = function (plugin) {\n      /* istanbul ignore if */\n      if (plugin.installed) {\n        return;\n      }\n      // additional parameters\n      var args = toArray(arguments, 1);\n      args.unshift(this);\n      if (typeof plugin.install === 'function') {\n        plugin.install.apply(plugin, args);\n      } else {\n        plugin.apply(null, args);\n      }\n      plugin.installed = true;\n      return this;\n    };\n\n    /**\n     * Apply a global mixin by merging it into the default\n     * options.\n     */\n\n    Vue.mixin = function (mixin) {\n      Vue.options = mergeOptions(Vue.options, mixin);\n    };\n\n    /**\n     * Create asset registration methods with the following\n     * signature:\n     *\n     * @param {String} id\n     * @param {*} definition\n     */\n\n    config._assetTypes.forEach(function (type) {\n      Vue[type] = function (id, definition) {\n        if (!definition) {\n          return this.options[type + 's'][id];\n        } else {\n          /* istanbul ignore if */\n          if ('development' !== 'production') {\n            if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n              warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n            }\n          }\n          if (type === 'component' && isPlainObject(definition)) {\n            if (!definition.name) {\n              definition.name = id;\n            }\n            definition = Vue.extend(definition);\n          }\n          this.options[type + 's'][id] = definition;\n          return definition;\n        }\n      };\n    });\n\n    // expose internal transition API\n    extend(Vue.transition, transition);\n  }\n\n  installGlobalAPI(Vue);\n\n  Vue.version = '1.0.26';\n\n  // devtools global hook\n  /* istanbul ignore next */\n  setTimeout(function () {\n    if (config.devtools) {\n      if (devtools) {\n        devtools.emit('init', Vue);\n      } else if ('development' !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n        console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n      }\n    }\n  }, 0);\n\n  return Vue;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue/dist/vue.js\n// module id = 0\n// module chunks = 0","import * as Vue from 'vue';\nexport var vueVersion = Vue['default']['version'], vue2 = vueVersion.charAt(0) === '2';\nexport function vm(self) {\n    return self;\n}\nfunction createFnActivateV1(fnActivate) {\n    return function () {\n        return fnActivate(this);\n    };\n}\nfunction createFnDeactivateV1(fnDeactivate) {\n    return function () {\n        return fnDeactivate(this);\n    };\n}\nfunction createFnActivateV2(fnActivate) {\n    return function (route, redirect, next) {\n        return next(fnActivate);\n    };\n}\nfunction createFnDeactivateV2(fnDeactivate) {\n    return function (route, redirect, next) {\n        return fnDeactivate(this) && next();\n    };\n}\nfunction fillHookOpts(opts, cls, fnActivate, fnDeactivate) {\n    cls.component = opts;\n    if (!fnActivate && !fnDeactivate)\n        return opts;\n    var route = vue2 ? opts : (opts.route || (opts.route = {}));\n    if (fnActivate) {\n        if (vue2)\n            route.beforeRouteEnter = createFnActivateV2(fnActivate);\n        else\n            route.activate = createFnActivateV1(fnActivate);\n    }\n    if (fnDeactivate) {\n        if (vue2)\n            route.beforeRouteLeave = createFnDeactivateV2(fnDeactivate);\n        else\n            route.canDeactivate = createFnDeactivateV1(fnDeactivate);\n    }\n    return opts;\n}\nfunction fillOpts(opts, cls) {\n    var methods = opts.methods, pt = cls.prototype;\n    if (!methods)\n        opts.methods = methods = {};\n    for (var key in pt) {\n        if (key !== 'constructor')\n            methods[key] = pt[key];\n    }\n    //Object.assign(methods, pt)\n    opts.data = function () { return new cls(); };\n    opts.name = cls.name;\n    return opts;\n}\nexport function component(opts, clazz, fnActivate, fnDeactivate) {\n    if (clazz)\n        return fillHookOpts(fillOpts(opts || {}, clazz), clazz, fnActivate, fnDeactivate);\n    return function (cls) { return Vue.extend(fillOpts(opts || {}, cls)); };\n}\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vuets/lib/index.js\n// module id = 1\n// module chunks = 0","import { component } from 'vuets';\nexport var Hello = (function () {\n    function Hello() {\n        this.msg = 'Hello, world!';\n        this.activate = 0;\n        this.deactivate = 0;\n    }\n    Hello.activate = function (self) {\n        self.activate++;\n    };\n    Hello.deactivate = function (self) {\n        self.deactivate++;\n        return true;\n    };\n    Hello.prototype.append = function (suffix) {\n        this.msg += suffix;\n    };\n    return Hello;\n}());\nexport default component({\n    template: \"\\n<div>\\n  <h3 @click=\\\"append('!')\\\">{{ msg }}</h3>\\n  <div>\\n    activate count: {{ activate }}\\n  </div>\\n  <div>\\n    deactivate count: {{ deactivate }}\\n  </div>\\n</div>\\n\"\n}, Hello, Hello.activate, Hello.deactivate);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Hello.ts\n// module id = 2\n// module chunks = 0","import { component } from 'vuets';\nexport var Home = (function () {\n    function Home() {\n        this.msg = 'Home';\n        this.activate = 0;\n        this.deactivate = 0;\n    }\n    Home.activate = function (self) {\n        self.activate++;\n    };\n    Home.deactivate = function (self) {\n        self.deactivate++;\n        return true;\n    };\n    Home.prototype.append = function (suffix) {\n        this.msg += suffix;\n    };\n    return Home;\n}());\nexport default component({\n    template: \"\\n<div>\\n  <h3 @click=\\\"append('!')\\\">{{ msg }}</h3>\\n  <div>\\n    activate count: {{ activate }} | deactivate count: {{ deactivate }}\\n  </div>\\n</div>\\n\"\n}, Home, Home.activate, Home.deactivate);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/home/index.ts\n// module id = 3\n// module chunks = 0","var __vue_script__, __vue_template__\nrequire(\"!!vue-style-loader!css-loader!./../node_modules/vue-loader/lib/style-rewriter.js!less!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./App.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../node_modules/vue-loader/lib/selector.js?type=script&index=0!./App.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../node_modules/vue-loader/lib/selector.js?type=template&index=0!./App.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = 4\n// module chunks = 0","/*!\n * vue-router v0.7.13\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  global.VueRouter = factory();\n}(this, function () { 'use strict';\n\n  var babelHelpers = {};\n\n  babelHelpers.classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n  function Target(path, matcher, delegate) {\n    this.path = path;\n    this.matcher = matcher;\n    this.delegate = delegate;\n  }\n\n  Target.prototype = {\n    to: function to(target, callback) {\n      var delegate = this.delegate;\n\n      if (delegate && delegate.willAddRoute) {\n        target = delegate.willAddRoute(this.matcher.target, target);\n      }\n\n      this.matcher.add(this.path, target);\n\n      if (callback) {\n        if (callback.length === 0) {\n          throw new Error(\"You must have an argument in the function passed to `to`\");\n        }\n        this.matcher.addChild(this.path, target, callback, this.delegate);\n      }\n      return this;\n    }\n  };\n\n  function Matcher(target) {\n    this.routes = {};\n    this.children = {};\n    this.target = target;\n  }\n\n  Matcher.prototype = {\n    add: function add(path, handler) {\n      this.routes[path] = handler;\n    },\n\n    addChild: function addChild(path, target, callback, delegate) {\n      var matcher = new Matcher(target);\n      this.children[path] = matcher;\n\n      var match = generateMatch(path, matcher, delegate);\n\n      if (delegate && delegate.contextEntered) {\n        delegate.contextEntered(target, match);\n      }\n\n      callback(match);\n    }\n  };\n\n  function generateMatch(startingPath, matcher, delegate) {\n    return function (path, nestedCallback) {\n      var fullPath = startingPath + path;\n\n      if (nestedCallback) {\n        nestedCallback(generateMatch(fullPath, matcher, delegate));\n      } else {\n        return new Target(startingPath + path, matcher, delegate);\n      }\n    };\n  }\n\n  function addRoute(routeArray, path, handler) {\n    var len = 0;\n    for (var i = 0, l = routeArray.length; i < l; i++) {\n      len += routeArray[i].path.length;\n    }\n\n    path = path.substr(len);\n    var route = { path: path, handler: handler };\n    routeArray.push(route);\n  }\n\n  function eachRoute(baseRoute, matcher, callback, binding) {\n    var routes = matcher.routes;\n\n    for (var path in routes) {\n      if (routes.hasOwnProperty(path)) {\n        var routeArray = baseRoute.slice();\n        addRoute(routeArray, path, routes[path]);\n\n        if (matcher.children[path]) {\n          eachRoute(routeArray, matcher.children[path], callback, binding);\n        } else {\n          callback.call(binding, routeArray);\n        }\n      }\n    }\n  }\n\n  function map (callback, addRouteCallback) {\n    var matcher = new Matcher();\n\n    callback(generateMatch(\"\", matcher, this.delegate));\n\n    eachRoute([], matcher, function (route) {\n      if (addRouteCallback) {\n        addRouteCallback(this, route);\n      } else {\n        this.add(route);\n      }\n    }, this);\n  }\n\n  var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'];\n\n  var escapeRegex = new RegExp('(\\\\' + specials.join('|\\\\') + ')', 'g');\n\n  var noWarning = false;\n  function warn(msg) {\n    if (!noWarning && typeof console !== 'undefined') {\n      console.error('[vue-router] ' + msg);\n    }\n  }\n\n  function tryDecode(uri, asComponent) {\n    try {\n      return asComponent ? decodeURIComponent(uri) : decodeURI(uri);\n    } catch (e) {\n      warn('malformed URI' + (asComponent ? ' component: ' : ': ') + uri);\n    }\n  }\n\n  function isArray(test) {\n    return Object.prototype.toString.call(test) === \"[object Array]\";\n  }\n\n  // A Segment represents a segment in the original route description.\n  // Each Segment type provides an `eachChar` and `regex` method.\n  //\n  // The `eachChar` method invokes the callback with one or more character\n  // specifications. A character specification consumes one or more input\n  // characters.\n  //\n  // The `regex` method returns a regex fragment for the segment. If the\n  // segment is a dynamic of star segment, the regex fragment also includes\n  // a capture.\n  //\n  // A character specification contains:\n  //\n  // * `validChars`: a String with a list of all valid characters, or\n  // * `invalidChars`: a String with a list of all invalid characters\n  // * `repeat`: true if the character specification can repeat\n\n  function StaticSegment(string) {\n    this.string = string;\n  }\n  StaticSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      var string = this.string,\n          ch;\n\n      for (var i = 0, l = string.length; i < l; i++) {\n        ch = string.charAt(i);\n        callback({ validChars: ch });\n      }\n    },\n\n    regex: function regex() {\n      return this.string.replace(escapeRegex, '\\\\$1');\n    },\n\n    generate: function generate() {\n      return this.string;\n    }\n  };\n\n  function DynamicSegment(name) {\n    this.name = name;\n  }\n  DynamicSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      callback({ invalidChars: \"/\", repeat: true });\n    },\n\n    regex: function regex() {\n      return \"([^/]+)\";\n    },\n\n    generate: function generate(params) {\n      var val = params[this.name];\n      return val == null ? \":\" + this.name : val;\n    }\n  };\n\n  function StarSegment(name) {\n    this.name = name;\n  }\n  StarSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      callback({ invalidChars: \"\", repeat: true });\n    },\n\n    regex: function regex() {\n      return \"(.+)\";\n    },\n\n    generate: function generate(params) {\n      var val = params[this.name];\n      return val == null ? \":\" + this.name : val;\n    }\n  };\n\n  function EpsilonSegment() {}\n  EpsilonSegment.prototype = {\n    eachChar: function eachChar() {},\n    regex: function regex() {\n      return \"\";\n    },\n    generate: function generate() {\n      return \"\";\n    }\n  };\n\n  function parse(route, names, specificity) {\n    // normalize route as not starting with a \"/\". Recognition will\n    // also normalize.\n    if (route.charAt(0) === \"/\") {\n      route = route.substr(1);\n    }\n\n    var segments = route.split(\"/\"),\n        results = [];\n\n    // A routes has specificity determined by the order that its different segments\n    // appear in. This system mirrors how the magnitude of numbers written as strings\n    // works.\n    // Consider a number written as: \"abc\". An example would be \"200\". Any other number written\n    // \"xyz\" will be smaller than \"abc\" so long as `a > z`. For instance, \"199\" is smaller\n    // then \"200\", even though \"y\" and \"z\" (which are both 9) are larger than \"0\" (the value\n    // of (`b` and `c`). This is because the leading symbol, \"2\", is larger than the other\n    // leading symbol, \"1\".\n    // The rule is that symbols to the left carry more weight than symbols to the right\n    // when a number is written out as a string. In the above strings, the leading digit\n    // represents how many 100's are in the number, and it carries more weight than the middle\n    // number which represents how many 10's are in the number.\n    // This system of number magnitude works well for route specificity, too. A route written as\n    // `a/b/c` will be more specific than `x/y/z` as long as `a` is more specific than\n    // `x`, irrespective of the other parts.\n    // Because of this similarity, we assign each type of segment a number value written as a\n    // string. We can find the specificity of compound routes by concatenating these strings\n    // together, from left to right. After we have looped through all of the segments,\n    // we convert the string to a number.\n    specificity.val = '';\n\n    for (var i = 0, l = segments.length; i < l; i++) {\n      var segment = segments[i],\n          match;\n\n      if (match = segment.match(/^:([^\\/]+)$/)) {\n        results.push(new DynamicSegment(match[1]));\n        names.push(match[1]);\n        specificity.val += '3';\n      } else if (match = segment.match(/^\\*([^\\/]+)$/)) {\n        results.push(new StarSegment(match[1]));\n        specificity.val += '2';\n        names.push(match[1]);\n      } else if (segment === \"\") {\n        results.push(new EpsilonSegment());\n        specificity.val += '1';\n      } else {\n        results.push(new StaticSegment(segment));\n        specificity.val += '4';\n      }\n    }\n\n    specificity.val = +specificity.val;\n\n    return results;\n  }\n\n  // A State has a character specification and (`charSpec`) and a list of possible\n  // subsequent states (`nextStates`).\n  //\n  // If a State is an accepting state, it will also have several additional\n  // properties:\n  //\n  // * `regex`: A regular expression that is used to extract parameters from paths\n  //   that reached this accepting state.\n  // * `handlers`: Information on how to convert the list of captures into calls\n  //   to registered handlers with the specified parameters\n  // * `types`: How many static, dynamic or star segments in this route. Used to\n  //   decide which route to use if multiple registered routes match a path.\n  //\n  // Currently, State is implemented naively by looping over `nextStates` and\n  // comparing a character specification against a character. A more efficient\n  // implementation would use a hash of keys pointing at one or more next states.\n\n  function State(charSpec) {\n    this.charSpec = charSpec;\n    this.nextStates = [];\n  }\n\n  State.prototype = {\n    get: function get(charSpec) {\n      var nextStates = this.nextStates;\n\n      for (var i = 0, l = nextStates.length; i < l; i++) {\n        var child = nextStates[i];\n\n        var isEqual = child.charSpec.validChars === charSpec.validChars;\n        isEqual = isEqual && child.charSpec.invalidChars === charSpec.invalidChars;\n\n        if (isEqual) {\n          return child;\n        }\n      }\n    },\n\n    put: function put(charSpec) {\n      var state;\n\n      // If the character specification already exists in a child of the current\n      // state, just return that state.\n      if (state = this.get(charSpec)) {\n        return state;\n      }\n\n      // Make a new state for the character spec\n      state = new State(charSpec);\n\n      // Insert the new state as a child of the current state\n      this.nextStates.push(state);\n\n      // If this character specification repeats, insert the new state as a child\n      // of itself. Note that this will not trigger an infinite loop because each\n      // transition during recognition consumes a character.\n      if (charSpec.repeat) {\n        state.nextStates.push(state);\n      }\n\n      // Return the new state\n      return state;\n    },\n\n    // Find a list of child states matching the next character\n    match: function match(ch) {\n      // DEBUG \"Processing `\" + ch + \"`:\"\n      var nextStates = this.nextStates,\n          child,\n          charSpec,\n          chars;\n\n      // DEBUG \"  \" + debugState(this)\n      var returned = [];\n\n      for (var i = 0, l = nextStates.length; i < l; i++) {\n        child = nextStates[i];\n\n        charSpec = child.charSpec;\n\n        if (typeof (chars = charSpec.validChars) !== 'undefined') {\n          if (chars.indexOf(ch) !== -1) {\n            returned.push(child);\n          }\n        } else if (typeof (chars = charSpec.invalidChars) !== 'undefined') {\n          if (chars.indexOf(ch) === -1) {\n            returned.push(child);\n          }\n        }\n      }\n\n      return returned;\n    }\n\n    /** IF DEBUG\n    , debug: function() {\n      var charSpec = this.charSpec,\n          debug = \"[\",\n          chars = charSpec.validChars || charSpec.invalidChars;\n       if (charSpec.invalidChars) { debug += \"^\"; }\n      debug += chars;\n      debug += \"]\";\n       if (charSpec.repeat) { debug += \"+\"; }\n       return debug;\n    }\n    END IF **/\n  };\n\n  /** IF DEBUG\n  function debug(log) {\n    console.log(log);\n  }\n\n  function debugState(state) {\n    return state.nextStates.map(function(n) {\n      if (n.nextStates.length === 0) { return \"( \" + n.debug() + \" [accepting] )\"; }\n      return \"( \" + n.debug() + \" <then> \" + n.nextStates.map(function(s) { return s.debug() }).join(\" or \") + \" )\";\n    }).join(\", \")\n  }\n  END IF **/\n\n  // Sort the routes by specificity\n  function sortSolutions(states) {\n    return states.sort(function (a, b) {\n      return b.specificity.val - a.specificity.val;\n    });\n  }\n\n  function recognizeChar(states, ch) {\n    var nextStates = [];\n\n    for (var i = 0, l = states.length; i < l; i++) {\n      var state = states[i];\n\n      nextStates = nextStates.concat(state.match(ch));\n    }\n\n    return nextStates;\n  }\n\n  var oCreate = Object.create || function (proto) {\n    function F() {}\n    F.prototype = proto;\n    return new F();\n  };\n\n  function RecognizeResults(queryParams) {\n    this.queryParams = queryParams || {};\n  }\n  RecognizeResults.prototype = oCreate({\n    splice: Array.prototype.splice,\n    slice: Array.prototype.slice,\n    push: Array.prototype.push,\n    length: 0,\n    queryParams: null\n  });\n\n  function findHandler(state, path, queryParams) {\n    var handlers = state.handlers,\n        regex = state.regex;\n    var captures = path.match(regex),\n        currentCapture = 1;\n    var result = new RecognizeResults(queryParams);\n\n    for (var i = 0, l = handlers.length; i < l; i++) {\n      var handler = handlers[i],\n          names = handler.names,\n          params = {};\n\n      for (var j = 0, m = names.length; j < m; j++) {\n        params[names[j]] = captures[currentCapture++];\n      }\n\n      result.push({ handler: handler.handler, params: params, isDynamic: !!names.length });\n    }\n\n    return result;\n  }\n\n  function addSegment(currentState, segment) {\n    segment.eachChar(function (ch) {\n      var state;\n\n      currentState = currentState.put(ch);\n    });\n\n    return currentState;\n  }\n\n  function decodeQueryParamPart(part) {\n    // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\n    part = part.replace(/\\+/gm, '%20');\n    return tryDecode(part, true);\n  }\n\n  // The main interface\n\n  var RouteRecognizer = function RouteRecognizer() {\n    this.rootState = new State();\n    this.names = {};\n  };\n\n  RouteRecognizer.prototype = {\n    add: function add(routes, options) {\n      var currentState = this.rootState,\n          regex = \"^\",\n          specificity = {},\n          handlers = [],\n          allSegments = [],\n          name;\n\n      var isEmpty = true;\n\n      for (var i = 0, l = routes.length; i < l; i++) {\n        var route = routes[i],\n            names = [];\n\n        var segments = parse(route.path, names, specificity);\n\n        allSegments = allSegments.concat(segments);\n\n        for (var j = 0, m = segments.length; j < m; j++) {\n          var segment = segments[j];\n\n          if (segment instanceof EpsilonSegment) {\n            continue;\n          }\n\n          isEmpty = false;\n\n          // Add a \"/\" for the new segment\n          currentState = currentState.put({ validChars: \"/\" });\n          regex += \"/\";\n\n          // Add a representation of the segment to the NFA and regex\n          currentState = addSegment(currentState, segment);\n          regex += segment.regex();\n        }\n\n        var handler = { handler: route.handler, names: names };\n        handlers.push(handler);\n      }\n\n      if (isEmpty) {\n        currentState = currentState.put({ validChars: \"/\" });\n        regex += \"/\";\n      }\n\n      currentState.handlers = handlers;\n      currentState.regex = new RegExp(regex + \"$\");\n      currentState.specificity = specificity;\n\n      if (name = options && options.as) {\n        this.names[name] = {\n          segments: allSegments,\n          handlers: handlers\n        };\n      }\n    },\n\n    handlersFor: function handlersFor(name) {\n      var route = this.names[name],\n          result = [];\n      if (!route) {\n        throw new Error(\"There is no route named \" + name);\n      }\n\n      for (var i = 0, l = route.handlers.length; i < l; i++) {\n        result.push(route.handlers[i]);\n      }\n\n      return result;\n    },\n\n    hasRoute: function hasRoute(name) {\n      return !!this.names[name];\n    },\n\n    generate: function generate(name, params) {\n      var route = this.names[name],\n          output = \"\";\n      if (!route) {\n        throw new Error(\"There is no route named \" + name);\n      }\n\n      var segments = route.segments;\n\n      for (var i = 0, l = segments.length; i < l; i++) {\n        var segment = segments[i];\n\n        if (segment instanceof EpsilonSegment) {\n          continue;\n        }\n\n        output += \"/\";\n        output += segment.generate(params);\n      }\n\n      if (output.charAt(0) !== '/') {\n        output = '/' + output;\n      }\n\n      if (params && params.queryParams) {\n        output += this.generateQueryString(params.queryParams);\n      }\n\n      return output;\n    },\n\n    generateQueryString: function generateQueryString(params) {\n      var pairs = [];\n      var keys = [];\n      for (var key in params) {\n        if (params.hasOwnProperty(key)) {\n          keys.push(key);\n        }\n      }\n      keys.sort();\n      for (var i = 0, len = keys.length; i < len; i++) {\n        key = keys[i];\n        var value = params[key];\n        if (value == null) {\n          continue;\n        }\n        var pair = encodeURIComponent(key);\n        if (isArray(value)) {\n          for (var j = 0, l = value.length; j < l; j++) {\n            var arrayPair = key + '[]' + '=' + encodeURIComponent(value[j]);\n            pairs.push(arrayPair);\n          }\n        } else {\n          pair += \"=\" + encodeURIComponent(value);\n          pairs.push(pair);\n        }\n      }\n\n      if (pairs.length === 0) {\n        return '';\n      }\n\n      return \"?\" + pairs.join(\"&\");\n    },\n\n    parseQueryString: function parseQueryString(queryString) {\n      var pairs = queryString.split(\"&\"),\n          queryParams = {};\n      for (var i = 0; i < pairs.length; i++) {\n        var pair = pairs[i].split('='),\n            key = decodeQueryParamPart(pair[0]),\n            keyLength = key.length,\n            isArray = false,\n            value;\n        if (pair.length === 1) {\n          value = 'true';\n        } else {\n          //Handle arrays\n          if (keyLength > 2 && key.slice(keyLength - 2) === '[]') {\n            isArray = true;\n            key = key.slice(0, keyLength - 2);\n            if (!queryParams[key]) {\n              queryParams[key] = [];\n            }\n          }\n          value = pair[1] ? decodeQueryParamPart(pair[1]) : '';\n        }\n        if (isArray) {\n          queryParams[key].push(value);\n        } else {\n          queryParams[key] = value;\n        }\n      }\n      return queryParams;\n    },\n\n    recognize: function recognize(path, silent) {\n      noWarning = silent;\n      var states = [this.rootState],\n          pathLen,\n          i,\n          l,\n          queryStart,\n          queryParams = {},\n          isSlashDropped = false;\n\n      queryStart = path.indexOf('?');\n      if (queryStart !== -1) {\n        var queryString = path.substr(queryStart + 1, path.length);\n        path = path.substr(0, queryStart);\n        if (queryString) {\n          queryParams = this.parseQueryString(queryString);\n        }\n      }\n\n      path = tryDecode(path);\n      if (!path) return;\n\n      // DEBUG GROUP path\n\n      if (path.charAt(0) !== \"/\") {\n        path = \"/\" + path;\n      }\n\n      pathLen = path.length;\n      if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\n        path = path.substr(0, pathLen - 1);\n        isSlashDropped = true;\n      }\n\n      for (i = 0, l = path.length; i < l; i++) {\n        states = recognizeChar(states, path.charAt(i));\n        if (!states.length) {\n          break;\n        }\n      }\n\n      // END DEBUG GROUP\n\n      var solutions = [];\n      for (i = 0, l = states.length; i < l; i++) {\n        if (states[i].handlers) {\n          solutions.push(states[i]);\n        }\n      }\n\n      states = sortSolutions(solutions);\n\n      var state = solutions[0];\n\n      if (state && state.handlers) {\n        // if a trailing slash was dropped and a star segment is the last segment\n        // specified, put the trailing slash back\n        if (isSlashDropped && state.regex.source.slice(-5) === \"(.+)$\") {\n          path = path + \"/\";\n        }\n        return findHandler(state, path, queryParams);\n      }\n    }\n  };\n\n  RouteRecognizer.prototype.map = map;\n\n  var genQuery = RouteRecognizer.prototype.generateQueryString;\n\n  // export default for holding the Vue reference\n  var exports$1 = {};\n  /**\n   * Warn stuff.\n   *\n   * @param {String} msg\n   */\n\n  function warn$1(msg) {\n    /* istanbul ignore next */\n    if (typeof console !== 'undefined') {\n      console.error('[vue-router] ' + msg);\n    }\n  }\n\n  /**\n   * Resolve a relative path.\n   *\n   * @param {String} base\n   * @param {String} relative\n   * @param {Boolean} append\n   * @return {String}\n   */\n\n  function resolvePath(base, relative, append) {\n    var query = base.match(/(\\?.*)$/);\n    if (query) {\n      query = query[1];\n      base = base.slice(0, -query.length);\n    }\n    // a query!\n    if (relative.charAt(0) === '?') {\n      return base + relative;\n    }\n    var stack = base.split('/');\n    // remove trailing segment if:\n    // - not appending\n    // - appending to trailing slash (last segment is empty)\n    if (!append || !stack[stack.length - 1]) {\n      stack.pop();\n    }\n    // resolve relative path\n    var segments = relative.replace(/^\\//, '').split('/');\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n      if (segment === '.') {\n        continue;\n      } else if (segment === '..') {\n        stack.pop();\n      } else {\n        stack.push(segment);\n      }\n    }\n    // ensure leading slash\n    if (stack[0] !== '') {\n      stack.unshift('');\n    }\n    return stack.join('/');\n  }\n\n  /**\n   * Forgiving check for a promise\n   *\n   * @param {Object} p\n   * @return {Boolean}\n   */\n\n  function isPromise(p) {\n    return p && typeof p.then === 'function';\n  }\n\n  /**\n   * Retrive a route config field from a component instance\n   * OR a component contructor.\n   *\n   * @param {Function|Vue} component\n   * @param {String} name\n   * @return {*}\n   */\n\n  function getRouteConfig(component, name) {\n    var options = component && (component.$options || component.options);\n    return options && options.route && options.route[name];\n  }\n\n  /**\n   * Resolve an async component factory. Have to do a dirty\n   * mock here because of Vue core's internal API depends on\n   * an ID check.\n   *\n   * @param {Object} handler\n   * @param {Function} cb\n   */\n\n  var resolver = undefined;\n\n  function resolveAsyncComponent(handler, cb) {\n    if (!resolver) {\n      resolver = {\n        resolve: exports$1.Vue.prototype._resolveComponent,\n        $options: {\n          components: {\n            _: handler.component\n          }\n        }\n      };\n    } else {\n      resolver.$options.components._ = handler.component;\n    }\n    resolver.resolve('_', function (Component) {\n      handler.component = Component;\n      cb(Component);\n    });\n  }\n\n  /**\n   * Map the dynamic segments in a path to params.\n   *\n   * @param {String} path\n   * @param {Object} params\n   * @param {Object} query\n   */\n\n  function mapParams(path, params, query) {\n    if (params === undefined) params = {};\n\n    path = path.replace(/:([^\\/]+)/g, function (_, key) {\n      var val = params[key];\n      /* istanbul ignore if */\n      if (!val) {\n        warn$1('param \"' + key + '\" not found when generating ' + 'path for \"' + path + '\" with params ' + JSON.stringify(params));\n      }\n      return val || '';\n    });\n    if (query) {\n      path += genQuery(query);\n    }\n    return path;\n  }\n\n  var hashRE = /#.*$/;\n\n  var HTML5History = (function () {\n    function HTML5History(_ref) {\n      var root = _ref.root;\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, HTML5History);\n\n      if (root && root !== '/') {\n        // make sure there's the starting slash\n        if (root.charAt(0) !== '/') {\n          root = '/' + root;\n        }\n        // remove trailing slash\n        this.root = root.replace(/\\/$/, '');\n        this.rootRE = new RegExp('^\\\\' + this.root);\n      } else {\n        this.root = null;\n      }\n      this.onChange = onChange;\n      // check base tag\n      var baseEl = document.querySelector('base');\n      this.base = baseEl && baseEl.getAttribute('href');\n    }\n\n    HTML5History.prototype.start = function start() {\n      var _this = this;\n\n      this.listener = function (e) {\n        var url = location.pathname + location.search;\n        if (_this.root) {\n          url = url.replace(_this.rootRE, '');\n        }\n        _this.onChange(url, e && e.state, location.hash);\n      };\n      window.addEventListener('popstate', this.listener);\n      this.listener();\n    };\n\n    HTML5History.prototype.stop = function stop() {\n      window.removeEventListener('popstate', this.listener);\n    };\n\n    HTML5History.prototype.go = function go(path, replace, append) {\n      var url = this.formatPath(path, append);\n      if (replace) {\n        history.replaceState({}, '', url);\n      } else {\n        // record scroll position by replacing current state\n        history.replaceState({\n          pos: {\n            x: window.pageXOffset,\n            y: window.pageYOffset\n          }\n        }, '', location.href);\n        // then push new state\n        history.pushState({}, '', url);\n      }\n      var hashMatch = path.match(hashRE);\n      var hash = hashMatch && hashMatch[0];\n      path = url\n      // strip hash so it doesn't mess up params\n      .replace(hashRE, '')\n      // remove root before matching\n      .replace(this.rootRE, '');\n      this.onChange(path, null, hash);\n    };\n\n    HTML5History.prototype.formatPath = function formatPath(path, append) {\n      return path.charAt(0) === '/'\n      // absolute path\n      ? this.root ? this.root + '/' + path.replace(/^\\//, '') : path : resolvePath(this.base || location.pathname, path, append);\n    };\n\n    return HTML5History;\n  })();\n\n  var HashHistory = (function () {\n    function HashHistory(_ref) {\n      var hashbang = _ref.hashbang;\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, HashHistory);\n\n      this.hashbang = hashbang;\n      this.onChange = onChange;\n    }\n\n    HashHistory.prototype.start = function start() {\n      var self = this;\n      this.listener = function () {\n        var path = location.hash;\n        var raw = path.replace(/^#!?/, '');\n        // always\n        if (raw.charAt(0) !== '/') {\n          raw = '/' + raw;\n        }\n        var formattedPath = self.formatPath(raw);\n        if (formattedPath !== path) {\n          location.replace(formattedPath);\n          return;\n        }\n        // determine query\n        // note it's possible to have queries in both the actual URL\n        // and the hash fragment itself.\n        var query = location.search && path.indexOf('?') > -1 ? '&' + location.search.slice(1) : location.search;\n        self.onChange(path.replace(/^#!?/, '') + query);\n      };\n      window.addEventListener('hashchange', this.listener);\n      this.listener();\n    };\n\n    HashHistory.prototype.stop = function stop() {\n      window.removeEventListener('hashchange', this.listener);\n    };\n\n    HashHistory.prototype.go = function go(path, replace, append) {\n      path = this.formatPath(path, append);\n      if (replace) {\n        location.replace(path);\n      } else {\n        location.hash = path;\n      }\n    };\n\n    HashHistory.prototype.formatPath = function formatPath(path, append) {\n      var isAbsoloute = path.charAt(0) === '/';\n      var prefix = '#' + (this.hashbang ? '!' : '');\n      return isAbsoloute ? prefix + path : prefix + resolvePath(location.hash.replace(/^#!?/, ''), path, append);\n    };\n\n    return HashHistory;\n  })();\n\n  var AbstractHistory = (function () {\n    function AbstractHistory(_ref) {\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, AbstractHistory);\n\n      this.onChange = onChange;\n      this.currentPath = '/';\n    }\n\n    AbstractHistory.prototype.start = function start() {\n      this.onChange('/');\n    };\n\n    AbstractHistory.prototype.stop = function stop() {\n      // noop\n    };\n\n    AbstractHistory.prototype.go = function go(path, replace, append) {\n      path = this.currentPath = this.formatPath(path, append);\n      this.onChange(path);\n    };\n\n    AbstractHistory.prototype.formatPath = function formatPath(path, append) {\n      return path.charAt(0) === '/' ? path : resolvePath(this.currentPath, path, append);\n    };\n\n    return AbstractHistory;\n  })();\n\n  /**\n   * Determine the reusability of an existing router view.\n   *\n   * @param {Directive} view\n   * @param {Object} handler\n   * @param {Transition} transition\n   */\n\n  function canReuse(view, handler, transition) {\n    var component = view.childVM;\n    if (!component || !handler) {\n      return false;\n    }\n    // important: check view.Component here because it may\n    // have been changed in activate hook\n    if (view.Component !== handler.component) {\n      return false;\n    }\n    var canReuseFn = getRouteConfig(component, 'canReuse');\n    return typeof canReuseFn === 'boolean' ? canReuseFn : canReuseFn ? canReuseFn.call(component, {\n      to: transition.to,\n      from: transition.from\n    }) : true; // defaults to true\n  }\n\n  /**\n   * Check if a component can deactivate.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function canDeactivate(view, transition, next) {\n    var fromComponent = view.childVM;\n    var hook = getRouteConfig(fromComponent, 'canDeactivate');\n    if (!hook) {\n      next();\n    } else {\n      transition.callHook(hook, fromComponent, next, {\n        expectBoolean: true\n      });\n    }\n  }\n\n  /**\n   * Check if a component can activate.\n   *\n   * @param {Object} handler\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function canActivate(handler, transition, next) {\n    resolveAsyncComponent(handler, function (Component) {\n      // have to check due to async-ness\n      if (transition.aborted) {\n        return;\n      }\n      // determine if this component can be activated\n      var hook = getRouteConfig(Component, 'canActivate');\n      if (!hook) {\n        next();\n      } else {\n        transition.callHook(hook, null, next, {\n          expectBoolean: true\n        });\n      }\n    });\n  }\n\n  /**\n   * Call deactivate hooks for existing router-views.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function deactivate(view, transition, next) {\n    var component = view.childVM;\n    var hook = getRouteConfig(component, 'deactivate');\n    if (!hook) {\n      next();\n    } else {\n      transition.callHooks(hook, component, next);\n    }\n  }\n\n  /**\n   * Activate / switch component for a router-view.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Number} depth\n   * @param {Function} [cb]\n   */\n\n  function activate(view, transition, depth, cb, reuse) {\n    var handler = transition.activateQueue[depth];\n    if (!handler) {\n      saveChildView(view);\n      if (view._bound) {\n        view.setComponent(null);\n      }\n      cb && cb();\n      return;\n    }\n\n    var Component = view.Component = handler.component;\n    var activateHook = getRouteConfig(Component, 'activate');\n    var dataHook = getRouteConfig(Component, 'data');\n    var waitForData = getRouteConfig(Component, 'waitForData');\n\n    view.depth = depth;\n    view.activated = false;\n\n    var component = undefined;\n    var loading = !!(dataHook && !waitForData);\n\n    // \"reuse\" is a flag passed down when the parent view is\n    // either reused via keep-alive or as a child of a kept-alive view.\n    // of course we can only reuse if the current kept-alive instance\n    // is of the correct type.\n    reuse = reuse && view.childVM && view.childVM.constructor === Component;\n\n    if (reuse) {\n      // just reuse\n      component = view.childVM;\n      component.$loadingRouteData = loading;\n    } else {\n      saveChildView(view);\n\n      // unbuild current component. this step also destroys\n      // and removes all nested child views.\n      view.unbuild(true);\n\n      // build the new component. this will also create the\n      // direct child view of the current one. it will register\n      // itself as view.childView.\n      component = view.build({\n        _meta: {\n          $loadingRouteData: loading\n        },\n        created: function created() {\n          this._routerView = view;\n        }\n      });\n\n      // handle keep-alive.\n      // when a kept-alive child vm is restored, we need to\n      // add its cached child views into the router's view list,\n      // and also properly update current view's child view.\n      if (view.keepAlive) {\n        component.$loadingRouteData = loading;\n        var cachedChildView = component._keepAliveRouterView;\n        if (cachedChildView) {\n          view.childView = cachedChildView;\n          component._keepAliveRouterView = null;\n        }\n      }\n    }\n\n    // cleanup the component in case the transition is aborted\n    // before the component is ever inserted.\n    var cleanup = function cleanup() {\n      component.$destroy();\n    };\n\n    // actually insert the component and trigger transition\n    var insert = function insert() {\n      if (reuse) {\n        cb && cb();\n        return;\n      }\n      var router = transition.router;\n      if (router._rendered || router._transitionOnLoad) {\n        view.transition(component);\n      } else {\n        // no transition on first render, manual transition\n        /* istanbul ignore if */\n        if (view.setCurrent) {\n          // 0.12 compat\n          view.setCurrent(component);\n        } else {\n          // 1.0\n          view.childVM = component;\n        }\n        component.$before(view.anchor, null, false);\n      }\n      cb && cb();\n    };\n\n    var afterData = function afterData() {\n      // activate the child view\n      if (view.childView) {\n        activate(view.childView, transition, depth + 1, null, reuse || view.keepAlive);\n      }\n      insert();\n    };\n\n    // called after activation hook is resolved\n    var afterActivate = function afterActivate() {\n      view.activated = true;\n      if (dataHook && waitForData) {\n        // wait until data loaded to insert\n        loadData(component, transition, dataHook, afterData, cleanup);\n      } else {\n        // load data and insert at the same time\n        if (dataHook) {\n          loadData(component, transition, dataHook);\n        }\n        afterData();\n      }\n    };\n\n    if (activateHook) {\n      transition.callHooks(activateHook, component, afterActivate, {\n        cleanup: cleanup,\n        postActivate: true\n      });\n    } else {\n      afterActivate();\n    }\n  }\n\n  /**\n   * Reuse a view, just reload data if necessary.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   */\n\n  function reuse(view, transition) {\n    var component = view.childVM;\n    var dataHook = getRouteConfig(component, 'data');\n    if (dataHook) {\n      loadData(component, transition, dataHook);\n    }\n  }\n\n  /**\n   * Asynchronously load and apply data to component.\n   *\n   * @param {Vue} component\n   * @param {Transition} transition\n   * @param {Function} hook\n   * @param {Function} cb\n   * @param {Function} cleanup\n   */\n\n  function loadData(component, transition, hook, cb, cleanup) {\n    component.$loadingRouteData = true;\n    transition.callHooks(hook, component, function () {\n      component.$loadingRouteData = false;\n      component.$emit('route-data-loaded', component);\n      cb && cb();\n    }, {\n      cleanup: cleanup,\n      postActivate: true,\n      processData: function processData(data) {\n        // handle promise sugar syntax\n        var promises = [];\n        if (isPlainObject(data)) {\n          Object.keys(data).forEach(function (key) {\n            var val = data[key];\n            if (isPromise(val)) {\n              promises.push(val.then(function (resolvedVal) {\n                component.$set(key, resolvedVal);\n              }));\n            } else {\n              component.$set(key, val);\n            }\n          });\n        }\n        if (promises.length) {\n          return promises[0].constructor.all(promises);\n        }\n      }\n    });\n  }\n\n  /**\n   * Save the child view for a kept-alive view so that\n   * we can restore it when it is switched back to.\n   *\n   * @param {Directive} view\n   */\n\n  function saveChildView(view) {\n    if (view.keepAlive && view.childVM && view.childView) {\n      view.childVM._keepAliveRouterView = view.childView;\n    }\n    view.childView = null;\n  }\n\n  /**\n   * Check plain object.\n   *\n   * @param {*} val\n   */\n\n  function isPlainObject(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n  }\n\n  /**\n   * A RouteTransition object manages the pipeline of a\n   * router-view switching process. This is also the object\n   * passed into user route hooks.\n   *\n   * @param {Router} router\n   * @param {Route} to\n   * @param {Route} from\n   */\n\n  var RouteTransition = (function () {\n    function RouteTransition(router, to, from) {\n      babelHelpers.classCallCheck(this, RouteTransition);\n\n      this.router = router;\n      this.to = to;\n      this.from = from;\n      this.next = null;\n      this.aborted = false;\n      this.done = false;\n    }\n\n    /**\n     * Abort current transition and return to previous location.\n     */\n\n    RouteTransition.prototype.abort = function abort() {\n      if (!this.aborted) {\n        this.aborted = true;\n        // if the root path throws an error during validation\n        // on initial load, it gets caught in an infinite loop.\n        var abortingOnLoad = !this.from.path && this.to.path === '/';\n        if (!abortingOnLoad) {\n          this.router.replace(this.from.path || '/');\n        }\n      }\n    };\n\n    /**\n     * Abort current transition and redirect to a new location.\n     *\n     * @param {String} path\n     */\n\n    RouteTransition.prototype.redirect = function redirect(path) {\n      if (!this.aborted) {\n        this.aborted = true;\n        if (typeof path === 'string') {\n          path = mapParams(path, this.to.params, this.to.query);\n        } else {\n          path.params = path.params || this.to.params;\n          path.query = path.query || this.to.query;\n        }\n        this.router.replace(path);\n      }\n    };\n\n    /**\n     * A router view transition's pipeline can be described as\n     * follows, assuming we are transitioning from an existing\n     * <router-view> chain [Component A, Component B] to a new\n     * chain [Component A, Component C]:\n     *\n     *  A    A\n     *  | => |\n     *  B    C\n     *\n     * 1. Reusablity phase:\n     *   -> canReuse(A, A)\n     *   -> canReuse(B, C)\n     *   -> determine new queues:\n     *      - deactivation: [B]\n     *      - activation: [C]\n     *\n     * 2. Validation phase:\n     *   -> canDeactivate(B)\n     *   -> canActivate(C)\n     *\n     * 3. Activation phase:\n     *   -> deactivate(B)\n     *   -> activate(C)\n     *\n     * Each of these steps can be asynchronous, and any\n     * step can potentially abort the transition.\n     *\n     * @param {Function} cb\n     */\n\n    RouteTransition.prototype.start = function start(cb) {\n      var transition = this;\n\n      // determine the queue of views to deactivate\n      var deactivateQueue = [];\n      var view = this.router._rootView;\n      while (view) {\n        deactivateQueue.unshift(view);\n        view = view.childView;\n      }\n      var reverseDeactivateQueue = deactivateQueue.slice().reverse();\n\n      // determine the queue of route handlers to activate\n      var activateQueue = this.activateQueue = toArray(this.to.matched).map(function (match) {\n        return match.handler;\n      });\n\n      // 1. Reusability phase\n      var i = undefined,\n          reuseQueue = undefined;\n      for (i = 0; i < reverseDeactivateQueue.length; i++) {\n        if (!canReuse(reverseDeactivateQueue[i], activateQueue[i], transition)) {\n          break;\n        }\n      }\n      if (i > 0) {\n        reuseQueue = reverseDeactivateQueue.slice(0, i);\n        deactivateQueue = reverseDeactivateQueue.slice(i).reverse();\n        activateQueue = activateQueue.slice(i);\n      }\n\n      // 2. Validation phase\n      transition.runQueue(deactivateQueue, canDeactivate, function () {\n        transition.runQueue(activateQueue, canActivate, function () {\n          transition.runQueue(deactivateQueue, deactivate, function () {\n            // 3. Activation phase\n\n            // Update router current route\n            transition.router._onTransitionValidated(transition);\n\n            // trigger reuse for all reused views\n            reuseQueue && reuseQueue.forEach(function (view) {\n              return reuse(view, transition);\n            });\n\n            // the root of the chain that needs to be replaced\n            // is the top-most non-reusable view.\n            if (deactivateQueue.length) {\n              var _view = deactivateQueue[deactivateQueue.length - 1];\n              var depth = reuseQueue ? reuseQueue.length : 0;\n              activate(_view, transition, depth, cb);\n            } else {\n              cb();\n            }\n          });\n        });\n      });\n    };\n\n    /**\n     * Asynchronously and sequentially apply a function to a\n     * queue.\n     *\n     * @param {Array} queue\n     * @param {Function} fn\n     * @param {Function} cb\n     */\n\n    RouteTransition.prototype.runQueue = function runQueue(queue, fn, cb) {\n      var transition = this;\n      step(0);\n      function step(index) {\n        if (index >= queue.length) {\n          cb();\n        } else {\n          fn(queue[index], transition, function () {\n            step(index + 1);\n          });\n        }\n      }\n    };\n\n    /**\n     * Call a user provided route transition hook and handle\n     * the response (e.g. if the user returns a promise).\n     *\n     * If the user neither expects an argument nor returns a\n     * promise, the hook is assumed to be synchronous.\n     *\n     * @param {Function} hook\n     * @param {*} [context]\n     * @param {Function} [cb]\n     * @param {Object} [options]\n     *                 - {Boolean} expectBoolean\n     *                 - {Boolean} postActive\n     *                 - {Function} processData\n     *                 - {Function} cleanup\n     */\n\n    RouteTransition.prototype.callHook = function callHook(hook, context, cb) {\n      var _ref = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\n      var _ref$expectBoolean = _ref.expectBoolean;\n      var expectBoolean = _ref$expectBoolean === undefined ? false : _ref$expectBoolean;\n      var _ref$postActivate = _ref.postActivate;\n      var postActivate = _ref$postActivate === undefined ? false : _ref$postActivate;\n      var processData = _ref.processData;\n      var cleanup = _ref.cleanup;\n\n      var transition = this;\n      var nextCalled = false;\n\n      // abort the transition\n      var abort = function abort() {\n        cleanup && cleanup();\n        transition.abort();\n      };\n\n      // handle errors\n      var onError = function onError(err) {\n        postActivate ? next() : abort();\n        if (err && !transition.router._suppress) {\n          warn$1('Uncaught error during transition: ');\n          throw err instanceof Error ? err : new Error(err);\n        }\n      };\n\n      // since promise swallows errors, we have to\n      // throw it in the next tick...\n      var onPromiseError = function onPromiseError(err) {\n        try {\n          onError(err);\n        } catch (e) {\n          setTimeout(function () {\n            throw e;\n          }, 0);\n        }\n      };\n\n      // advance the transition to the next step\n      var next = function next() {\n        if (nextCalled) {\n          warn$1('transition.next() should be called only once.');\n          return;\n        }\n        nextCalled = true;\n        if (transition.aborted) {\n          cleanup && cleanup();\n          return;\n        }\n        cb && cb();\n      };\n\n      var nextWithBoolean = function nextWithBoolean(res) {\n        if (typeof res === 'boolean') {\n          res ? next() : abort();\n        } else if (isPromise(res)) {\n          res.then(function (ok) {\n            ok ? next() : abort();\n          }, onPromiseError);\n        } else if (!hook.length) {\n          next();\n        }\n      };\n\n      var nextWithData = function nextWithData(data) {\n        var res = undefined;\n        try {\n          res = processData(data);\n        } catch (err) {\n          return onError(err);\n        }\n        if (isPromise(res)) {\n          res.then(next, onPromiseError);\n        } else {\n          next();\n        }\n      };\n\n      // expose a clone of the transition object, so that each\n      // hook gets a clean copy and prevent the user from\n      // messing with the internals.\n      var exposed = {\n        to: transition.to,\n        from: transition.from,\n        abort: abort,\n        next: processData ? nextWithData : next,\n        redirect: function redirect() {\n          transition.redirect.apply(transition, arguments);\n        }\n      };\n\n      // actually call the hook\n      var res = undefined;\n      try {\n        res = hook.call(context, exposed);\n      } catch (err) {\n        return onError(err);\n      }\n\n      if (expectBoolean) {\n        // boolean hooks\n        nextWithBoolean(res);\n      } else if (isPromise(res)) {\n        // promise\n        if (processData) {\n          res.then(nextWithData, onPromiseError);\n        } else {\n          res.then(next, onPromiseError);\n        }\n      } else if (processData && isPlainOjbect(res)) {\n        // data promise sugar\n        nextWithData(res);\n      } else if (!hook.length) {\n        next();\n      }\n    };\n\n    /**\n     * Call a single hook or an array of async hooks in series.\n     *\n     * @param {Array} hooks\n     * @param {*} context\n     * @param {Function} cb\n     * @param {Object} [options]\n     */\n\n    RouteTransition.prototype.callHooks = function callHooks(hooks, context, cb, options) {\n      var _this = this;\n\n      if (Array.isArray(hooks)) {\n        this.runQueue(hooks, function (hook, _, next) {\n          if (!_this.aborted) {\n            _this.callHook(hook, context, next, options);\n          }\n        }, cb);\n      } else {\n        this.callHook(hooks, context, cb, options);\n      }\n    };\n\n    return RouteTransition;\n  })();\n\n  function isPlainOjbect(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n  }\n\n  function toArray(val) {\n    return val ? Array.prototype.slice.call(val) : [];\n  }\n\n  var internalKeysRE = /^(component|subRoutes|fullPath)$/;\n\n  /**\n   * Route Context Object\n   *\n   * @param {String} path\n   * @param {Router} router\n   */\n\n  var Route = function Route(path, router) {\n    var _this = this;\n\n    babelHelpers.classCallCheck(this, Route);\n\n    var matched = router._recognizer.recognize(path);\n    if (matched) {\n      // copy all custom fields from route configs\n      [].forEach.call(matched, function (match) {\n        for (var key in match.handler) {\n          if (!internalKeysRE.test(key)) {\n            _this[key] = match.handler[key];\n          }\n        }\n      });\n      // set query and params\n      this.query = matched.queryParams;\n      this.params = [].reduce.call(matched, function (prev, cur) {\n        if (cur.params) {\n          for (var key in cur.params) {\n            prev[key] = cur.params[key];\n          }\n        }\n        return prev;\n      }, {});\n    }\n    // expose path and router\n    this.path = path;\n    // for internal use\n    this.matched = matched || router._notFoundHandler;\n    // internal reference to router\n    Object.defineProperty(this, 'router', {\n      enumerable: false,\n      value: router\n    });\n    // Important: freeze self to prevent observation\n    Object.freeze(this);\n  };\n\n  function applyOverride (Vue) {\n    var _Vue$util = Vue.util;\n    var extend = _Vue$util.extend;\n    var isArray = _Vue$util.isArray;\n    var defineReactive = _Vue$util.defineReactive;\n\n    // override Vue's init and destroy process to keep track of router instances\n    var init = Vue.prototype._init;\n    Vue.prototype._init = function (options) {\n      options = options || {};\n      var root = options._parent || options.parent || this;\n      var router = root.$router;\n      var route = root.$route;\n      if (router) {\n        // expose router\n        this.$router = router;\n        router._children.push(this);\n        /* istanbul ignore if */\n        if (this._defineMeta) {\n          // 0.12\n          this._defineMeta('$route', route);\n        } else {\n          // 1.0\n          defineReactive(this, '$route', route);\n        }\n      }\n      init.call(this, options);\n    };\n\n    var destroy = Vue.prototype._destroy;\n    Vue.prototype._destroy = function () {\n      if (!this._isBeingDestroyed && this.$router) {\n        this.$router._children.$remove(this);\n      }\n      destroy.apply(this, arguments);\n    };\n\n    // 1.0 only: enable route mixins\n    var strats = Vue.config.optionMergeStrategies;\n    var hooksToMergeRE = /^(data|activate|deactivate)$/;\n\n    if (strats) {\n      strats.route = function (parentVal, childVal) {\n        if (!childVal) return parentVal;\n        if (!parentVal) return childVal;\n        var ret = {};\n        extend(ret, parentVal);\n        for (var key in childVal) {\n          var a = ret[key];\n          var b = childVal[key];\n          // for data, activate and deactivate, we need to merge them into\n          // arrays similar to lifecycle hooks.\n          if (a && hooksToMergeRE.test(key)) {\n            ret[key] = (isArray(a) ? a : [a]).concat(b);\n          } else {\n            ret[key] = b;\n          }\n        }\n        return ret;\n      };\n    }\n  }\n\n  function View (Vue) {\n\n    var _ = Vue.util;\n    var componentDef =\n    // 0.12\n    Vue.directive('_component') ||\n    // 1.0\n    Vue.internalDirectives.component;\n    // <router-view> extends the internal component directive\n    var viewDef = _.extend({}, componentDef);\n\n    // with some overrides\n    _.extend(viewDef, {\n\n      _isRouterView: true,\n\n      bind: function bind() {\n        var route = this.vm.$route;\n        /* istanbul ignore if */\n        if (!route) {\n          warn$1('<router-view> can only be used inside a ' + 'router-enabled app.');\n          return;\n        }\n        // force dynamic directive so v-component doesn't\n        // attempt to build right now\n        this._isDynamicLiteral = true;\n        // finally, init by delegating to v-component\n        componentDef.bind.call(this);\n\n        // locate the parent view\n        var parentView = undefined;\n        var parent = this.vm;\n        while (parent) {\n          if (parent._routerView) {\n            parentView = parent._routerView;\n            break;\n          }\n          parent = parent.$parent;\n        }\n        if (parentView) {\n          // register self as a child of the parent view,\n          // instead of activating now. This is so that the\n          // child's activate hook is called after the\n          // parent's has resolved.\n          this.parentView = parentView;\n          parentView.childView = this;\n        } else {\n          // this is the root view!\n          var router = route.router;\n          router._rootView = this;\n        }\n\n        // handle late-rendered view\n        // two possibilities:\n        // 1. root view rendered after transition has been\n        //    validated;\n        // 2. child view rendered after parent view has been\n        //    activated.\n        var transition = route.router._currentTransition;\n        if (!parentView && transition.done || parentView && parentView.activated) {\n          var depth = parentView ? parentView.depth + 1 : 0;\n          activate(this, transition, depth);\n        }\n      },\n\n      unbind: function unbind() {\n        if (this.parentView) {\n          this.parentView.childView = null;\n        }\n        componentDef.unbind.call(this);\n      }\n    });\n\n    Vue.elementDirective('router-view', viewDef);\n  }\n\n  var trailingSlashRE = /\\/$/;\n  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n  var queryStringRE = /\\?.*$/;\n\n  // install v-link, which provides navigation support for\n  // HTML5 history mode\n  function Link (Vue) {\n    var _Vue$util = Vue.util;\n    var _bind = _Vue$util.bind;\n    var isObject = _Vue$util.isObject;\n    var addClass = _Vue$util.addClass;\n    var removeClass = _Vue$util.removeClass;\n\n    var onPriority = Vue.directive('on').priority;\n    var LINK_UPDATE = '__vue-router-link-update__';\n\n    var activeId = 0;\n\n    Vue.directive('link-active', {\n      priority: 9999,\n      bind: function bind() {\n        var _this = this;\n\n        var id = String(activeId++);\n        // collect v-links contained within this element.\n        // we need do this here before the parent-child relationship\n        // gets messed up by terminal directives (if, for, components)\n        var childLinks = this.el.querySelectorAll('[v-link]');\n        for (var i = 0, l = childLinks.length; i < l; i++) {\n          var link = childLinks[i];\n          var existingId = link.getAttribute(LINK_UPDATE);\n          var value = existingId ? existingId + ',' + id : id;\n          // leave a mark on the link element which can be persisted\n          // through fragment clones.\n          link.setAttribute(LINK_UPDATE, value);\n        }\n        this.vm.$on(LINK_UPDATE, this.cb = function (link, path) {\n          if (link.activeIds.indexOf(id) > -1) {\n            link.updateClasses(path, _this.el);\n          }\n        });\n      },\n      unbind: function unbind() {\n        this.vm.$off(LINK_UPDATE, this.cb);\n      }\n    });\n\n    Vue.directive('link', {\n      priority: onPriority - 2,\n\n      bind: function bind() {\n        var vm = this.vm;\n        /* istanbul ignore if */\n        if (!vm.$route) {\n          warn$1('v-link can only be used inside a router-enabled app.');\n          return;\n        }\n        this.router = vm.$route.router;\n        // update things when the route changes\n        this.unwatch = vm.$watch('$route', _bind(this.onRouteUpdate, this));\n        // check v-link-active ids\n        var activeIds = this.el.getAttribute(LINK_UPDATE);\n        if (activeIds) {\n          this.el.removeAttribute(LINK_UPDATE);\n          this.activeIds = activeIds.split(',');\n        }\n        // no need to handle click if link expects to be opened\n        // in a new window/tab.\n        /* istanbul ignore if */\n        if (this.el.tagName === 'A' && this.el.getAttribute('target') === '_blank') {\n          return;\n        }\n        // handle click\n        this.handler = _bind(this.onClick, this);\n        this.el.addEventListener('click', this.handler);\n      },\n\n      update: function update(target) {\n        this.target = target;\n        if (isObject(target)) {\n          this.append = target.append;\n          this.exact = target.exact;\n          this.prevActiveClass = this.activeClass;\n          this.activeClass = target.activeClass;\n        }\n        this.onRouteUpdate(this.vm.$route);\n      },\n\n      onClick: function onClick(e) {\n        // don't redirect with control keys\n        /* istanbul ignore if */\n        if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n        // don't redirect when preventDefault called\n        /* istanbul ignore if */\n        if (e.defaultPrevented) return;\n        // don't redirect on right click\n        /* istanbul ignore if */\n        if (e.button !== 0) return;\n\n        var target = this.target;\n        if (target) {\n          // v-link with expression, just go\n          e.preventDefault();\n          this.router.go(target);\n        } else {\n          // no expression, delegate for an <a> inside\n          var el = e.target;\n          while (el.tagName !== 'A' && el !== this.el) {\n            el = el.parentNode;\n          }\n          if (el.tagName === 'A' && sameOrigin(el)) {\n            e.preventDefault();\n            var path = el.pathname;\n            if (this.router.history.root) {\n              path = path.replace(this.router.history.rootRE, '');\n            }\n            this.router.go({\n              path: path,\n              replace: target && target.replace,\n              append: target && target.append\n            });\n          }\n        }\n      },\n\n      onRouteUpdate: function onRouteUpdate(route) {\n        // router.stringifyPath is dependent on current route\n        // and needs to be called again whenver route changes.\n        var newPath = this.router.stringifyPath(this.target);\n        if (this.path !== newPath) {\n          this.path = newPath;\n          this.updateActiveMatch();\n          this.updateHref();\n        }\n        if (this.activeIds) {\n          this.vm.$emit(LINK_UPDATE, this, route.path);\n        } else {\n          this.updateClasses(route.path, this.el);\n        }\n      },\n\n      updateActiveMatch: function updateActiveMatch() {\n        this.activeRE = this.path && !this.exact ? new RegExp('^' + this.path.replace(/\\/$/, '').replace(queryStringRE, '').replace(regexEscapeRE, '\\\\$&') + '(\\\\/|$)') : null;\n      },\n\n      updateHref: function updateHref() {\n        if (this.el.tagName !== 'A') {\n          return;\n        }\n        var path = this.path;\n        var router = this.router;\n        var isAbsolute = path.charAt(0) === '/';\n        // do not format non-hash relative paths\n        var href = path && (router.mode === 'hash' || isAbsolute) ? router.history.formatPath(path, this.append) : path;\n        if (href) {\n          this.el.href = href;\n        } else {\n          this.el.removeAttribute('href');\n        }\n      },\n\n      updateClasses: function updateClasses(path, el) {\n        var activeClass = this.activeClass || this.router._linkActiveClass;\n        // clear old class\n        if (this.prevActiveClass && this.prevActiveClass !== activeClass) {\n          toggleClasses(el, this.prevActiveClass, removeClass);\n        }\n        // remove query string before matching\n        var dest = this.path.replace(queryStringRE, '');\n        path = path.replace(queryStringRE, '');\n        // add new class\n        if (this.exact) {\n          if (dest === path ||\n          // also allow additional trailing slash\n          dest.charAt(dest.length - 1) !== '/' && dest === path.replace(trailingSlashRE, '')) {\n            toggleClasses(el, activeClass, addClass);\n          } else {\n            toggleClasses(el, activeClass, removeClass);\n          }\n        } else {\n          if (this.activeRE && this.activeRE.test(path)) {\n            toggleClasses(el, activeClass, addClass);\n          } else {\n            toggleClasses(el, activeClass, removeClass);\n          }\n        }\n      },\n\n      unbind: function unbind() {\n        this.el.removeEventListener('click', this.handler);\n        this.unwatch && this.unwatch();\n      }\n    });\n\n    function sameOrigin(link) {\n      return link.protocol === location.protocol && link.hostname === location.hostname && link.port === location.port;\n    }\n\n    // this function is copied from v-bind:class implementation until\n    // we properly expose it...\n    function toggleClasses(el, key, fn) {\n      key = key.trim();\n      if (key.indexOf(' ') === -1) {\n        fn(el, key);\n        return;\n      }\n      var keys = key.split(/\\s+/);\n      for (var i = 0, l = keys.length; i < l; i++) {\n        fn(el, keys[i]);\n      }\n    }\n  }\n\n  var historyBackends = {\n    abstract: AbstractHistory,\n    hash: HashHistory,\n    html5: HTML5History\n  };\n\n  // late bind during install\n  var Vue = undefined;\n\n  /**\n   * Router constructor\n   *\n   * @param {Object} [options]\n   */\n\n  var Router = (function () {\n    function Router() {\n      var _this = this;\n\n      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n      var _ref$hashbang = _ref.hashbang;\n      var hashbang = _ref$hashbang === undefined ? true : _ref$hashbang;\n      var _ref$abstract = _ref.abstract;\n      var abstract = _ref$abstract === undefined ? false : _ref$abstract;\n      var _ref$history = _ref.history;\n      var history = _ref$history === undefined ? false : _ref$history;\n      var _ref$saveScrollPosition = _ref.saveScrollPosition;\n      var saveScrollPosition = _ref$saveScrollPosition === undefined ? false : _ref$saveScrollPosition;\n      var _ref$transitionOnLoad = _ref.transitionOnLoad;\n      var transitionOnLoad = _ref$transitionOnLoad === undefined ? false : _ref$transitionOnLoad;\n      var _ref$suppressTransitionError = _ref.suppressTransitionError;\n      var suppressTransitionError = _ref$suppressTransitionError === undefined ? false : _ref$suppressTransitionError;\n      var _ref$root = _ref.root;\n      var root = _ref$root === undefined ? null : _ref$root;\n      var _ref$linkActiveClass = _ref.linkActiveClass;\n      var linkActiveClass = _ref$linkActiveClass === undefined ? 'v-link-active' : _ref$linkActiveClass;\n      babelHelpers.classCallCheck(this, Router);\n\n      /* istanbul ignore if */\n      if (!Router.installed) {\n        throw new Error('Please install the Router with Vue.use() before ' + 'creating an instance.');\n      }\n\n      // Vue instances\n      this.app = null;\n      this._children = [];\n\n      // route recognizer\n      this._recognizer = new RouteRecognizer();\n      this._guardRecognizer = new RouteRecognizer();\n\n      // state\n      this._started = false;\n      this._startCb = null;\n      this._currentRoute = {};\n      this._currentTransition = null;\n      this._previousTransition = null;\n      this._notFoundHandler = null;\n      this._notFoundRedirect = null;\n      this._beforeEachHooks = [];\n      this._afterEachHooks = [];\n\n      // trigger transition on initial render?\n      this._rendered = false;\n      this._transitionOnLoad = transitionOnLoad;\n\n      // history mode\n      this._root = root;\n      this._abstract = abstract;\n      this._hashbang = hashbang;\n\n      // check if HTML5 history is available\n      var hasPushState = typeof window !== 'undefined' && window.history && window.history.pushState;\n      this._history = history && hasPushState;\n      this._historyFallback = history && !hasPushState;\n\n      // create history object\n      var inBrowser = Vue.util.inBrowser;\n      this.mode = !inBrowser || this._abstract ? 'abstract' : this._history ? 'html5' : 'hash';\n\n      var History = historyBackends[this.mode];\n      this.history = new History({\n        root: root,\n        hashbang: this._hashbang,\n        onChange: function onChange(path, state, anchor) {\n          _this._match(path, state, anchor);\n        }\n      });\n\n      // other options\n      this._saveScrollPosition = saveScrollPosition;\n      this._linkActiveClass = linkActiveClass;\n      this._suppress = suppressTransitionError;\n    }\n\n    /**\n     * Allow directly passing components to a route\n     * definition.\n     *\n     * @param {String} path\n     * @param {Object} handler\n     */\n\n    // API ===================================================\n\n    /**\n    * Register a map of top-level paths.\n    *\n    * @param {Object} map\n    */\n\n    Router.prototype.map = function map(_map) {\n      for (var route in _map) {\n        this.on(route, _map[route]);\n      }\n      return this;\n    };\n\n    /**\n     * Register a single root-level path\n     *\n     * @param {String} rootPath\n     * @param {Object} handler\n     *                 - {String} component\n     *                 - {Object} [subRoutes]\n     *                 - {Boolean} [forceRefresh]\n     *                 - {Function} [before]\n     *                 - {Function} [after]\n     */\n\n    Router.prototype.on = function on(rootPath, handler) {\n      if (rootPath === '*') {\n        this._notFound(handler);\n      } else {\n        this._addRoute(rootPath, handler, []);\n      }\n      return this;\n    };\n\n    /**\n     * Set redirects.\n     *\n     * @param {Object} map\n     */\n\n    Router.prototype.redirect = function redirect(map) {\n      for (var path in map) {\n        this._addRedirect(path, map[path]);\n      }\n      return this;\n    };\n\n    /**\n     * Set aliases.\n     *\n     * @param {Object} map\n     */\n\n    Router.prototype.alias = function alias(map) {\n      for (var path in map) {\n        this._addAlias(path, map[path]);\n      }\n      return this;\n    };\n\n    /**\n     * Set global before hook.\n     *\n     * @param {Function} fn\n     */\n\n    Router.prototype.beforeEach = function beforeEach(fn) {\n      this._beforeEachHooks.push(fn);\n      return this;\n    };\n\n    /**\n     * Set global after hook.\n     *\n     * @param {Function} fn\n     */\n\n    Router.prototype.afterEach = function afterEach(fn) {\n      this._afterEachHooks.push(fn);\n      return this;\n    };\n\n    /**\n     * Navigate to a given path.\n     * The path can be an object describing a named path in\n     * the format of { name: '...', params: {}, query: {}}\n     * The path is assumed to be already decoded, and will\n     * be resolved against root (if provided)\n     *\n     * @param {String|Object} path\n     * @param {Boolean} [replace]\n     */\n\n    Router.prototype.go = function go(path) {\n      var replace = false;\n      var append = false;\n      if (Vue.util.isObject(path)) {\n        replace = path.replace;\n        append = path.append;\n      }\n      path = this.stringifyPath(path);\n      if (path) {\n        this.history.go(path, replace, append);\n      }\n    };\n\n    /**\n     * Short hand for replacing current path\n     *\n     * @param {String} path\n     */\n\n    Router.prototype.replace = function replace(path) {\n      if (typeof path === 'string') {\n        path = { path: path };\n      }\n      path.replace = true;\n      this.go(path);\n    };\n\n    /**\n     * Start the router.\n     *\n     * @param {VueConstructor} App\n     * @param {String|Element} container\n     * @param {Function} [cb]\n     */\n\n    Router.prototype.start = function start(App, container, cb) {\n      /* istanbul ignore if */\n      if (this._started) {\n        warn$1('already started.');\n        return;\n      }\n      this._started = true;\n      this._startCb = cb;\n      if (!this.app) {\n        /* istanbul ignore if */\n        if (!App || !container) {\n          throw new Error('Must start vue-router with a component and a ' + 'root container.');\n        }\n        /* istanbul ignore if */\n        if (App instanceof Vue) {\n          throw new Error('Must start vue-router with a component, not a ' + 'Vue instance.');\n        }\n        this._appContainer = container;\n        var Ctor = this._appConstructor = typeof App === 'function' ? App : Vue.extend(App);\n        // give it a name for better debugging\n        Ctor.options.name = Ctor.options.name || 'RouterApp';\n      }\n\n      // handle history fallback in browsers that do not\n      // support HTML5 history API\n      if (this._historyFallback) {\n        var _location = window.location;\n        var _history = new HTML5History({ root: this._root });\n        var path = _history.root ? _location.pathname.replace(_history.rootRE, '') : _location.pathname;\n        if (path && path !== '/') {\n          _location.assign((_history.root || '') + '/' + this.history.formatPath(path) + _location.search);\n          return;\n        }\n      }\n\n      this.history.start();\n    };\n\n    /**\n     * Stop listening to route changes.\n     */\n\n    Router.prototype.stop = function stop() {\n      this.history.stop();\n      this._started = false;\n    };\n\n    /**\n     * Normalize named route object / string paths into\n     * a string.\n     *\n     * @param {Object|String|Number} path\n     * @return {String}\n     */\n\n    Router.prototype.stringifyPath = function stringifyPath(path) {\n      var generatedPath = '';\n      if (path && typeof path === 'object') {\n        if (path.name) {\n          var extend = Vue.util.extend;\n          var currentParams = this._currentTransition && this._currentTransition.to.params;\n          var targetParams = path.params || {};\n          var params = currentParams ? extend(extend({}, currentParams), targetParams) : targetParams;\n          generatedPath = encodeURI(this._recognizer.generate(path.name, params));\n        } else if (path.path) {\n          generatedPath = encodeURI(path.path);\n        }\n        if (path.query) {\n          // note: the generated query string is pre-URL-encoded by the recognizer\n          var query = this._recognizer.generateQueryString(path.query);\n          if (generatedPath.indexOf('?') > -1) {\n            generatedPath += '&' + query.slice(1);\n          } else {\n            generatedPath += query;\n          }\n        }\n      } else {\n        generatedPath = encodeURI(path ? path + '' : '');\n      }\n      return generatedPath;\n    };\n\n    // Internal methods ======================================\n\n    /**\n    * Add a route containing a list of segments to the internal\n    * route recognizer. Will be called recursively to add all\n    * possible sub-routes.\n    *\n    * @param {String} path\n    * @param {Object} handler\n    * @param {Array} segments\n    */\n\n    Router.prototype._addRoute = function _addRoute(path, handler, segments) {\n      guardComponent(path, handler);\n      handler.path = path;\n      handler.fullPath = (segments.reduce(function (path, segment) {\n        return path + segment.path;\n      }, '') + path).replace('//', '/');\n      segments.push({\n        path: path,\n        handler: handler\n      });\n      this._recognizer.add(segments, {\n        as: handler.name\n      });\n      // add sub routes\n      if (handler.subRoutes) {\n        for (var subPath in handler.subRoutes) {\n          // recursively walk all sub routes\n          this._addRoute(subPath, handler.subRoutes[subPath],\n          // pass a copy in recursion to avoid mutating\n          // across branches\n          segments.slice());\n        }\n      }\n    };\n\n    /**\n     * Set the notFound route handler.\n     *\n     * @param {Object} handler\n     */\n\n    Router.prototype._notFound = function _notFound(handler) {\n      guardComponent('*', handler);\n      this._notFoundHandler = [{ handler: handler }];\n    };\n\n    /**\n     * Add a redirect record.\n     *\n     * @param {String} path\n     * @param {String} redirectPath\n     */\n\n    Router.prototype._addRedirect = function _addRedirect(path, redirectPath) {\n      if (path === '*') {\n        this._notFoundRedirect = redirectPath;\n      } else {\n        this._addGuard(path, redirectPath, this.replace);\n      }\n    };\n\n    /**\n     * Add an alias record.\n     *\n     * @param {String} path\n     * @param {String} aliasPath\n     */\n\n    Router.prototype._addAlias = function _addAlias(path, aliasPath) {\n      this._addGuard(path, aliasPath, this._match);\n    };\n\n    /**\n     * Add a path guard.\n     *\n     * @param {String} path\n     * @param {String} mappedPath\n     * @param {Function} handler\n     */\n\n    Router.prototype._addGuard = function _addGuard(path, mappedPath, _handler) {\n      var _this2 = this;\n\n      this._guardRecognizer.add([{\n        path: path,\n        handler: function handler(match, query) {\n          var realPath = mapParams(mappedPath, match.params, query);\n          _handler.call(_this2, realPath);\n        }\n      }]);\n    };\n\n    /**\n     * Check if a path matches any redirect records.\n     *\n     * @param {String} path\n     * @return {Boolean} - if true, will skip normal match.\n     */\n\n    Router.prototype._checkGuard = function _checkGuard(path) {\n      var matched = this._guardRecognizer.recognize(path, true);\n      if (matched) {\n        matched[0].handler(matched[0], matched.queryParams);\n        return true;\n      } else if (this._notFoundRedirect) {\n        matched = this._recognizer.recognize(path);\n        if (!matched) {\n          this.replace(this._notFoundRedirect);\n          return true;\n        }\n      }\n    };\n\n    /**\n     * Match a URL path and set the route context on vm,\n     * triggering view updates.\n     *\n     * @param {String} path\n     * @param {Object} [state]\n     * @param {String} [anchor]\n     */\n\n    Router.prototype._match = function _match(path, state, anchor) {\n      var _this3 = this;\n\n      if (this._checkGuard(path)) {\n        return;\n      }\n\n      var currentRoute = this._currentRoute;\n      var currentTransition = this._currentTransition;\n\n      if (currentTransition) {\n        if (currentTransition.to.path === path) {\n          // do nothing if we have an active transition going to the same path\n          return;\n        } else if (currentRoute.path === path) {\n          // We are going to the same path, but we also have an ongoing but\n          // not-yet-validated transition. Abort that transition and reset to\n          // prev transition.\n          currentTransition.aborted = true;\n          this._currentTransition = this._prevTransition;\n          return;\n        } else {\n          // going to a totally different path. abort ongoing transition.\n          currentTransition.aborted = true;\n        }\n      }\n\n      // construct new route and transition context\n      var route = new Route(path, this);\n      var transition = new RouteTransition(this, route, currentRoute);\n\n      // current transition is updated right now.\n      // however, current route will only be updated after the transition has\n      // been validated.\n      this._prevTransition = currentTransition;\n      this._currentTransition = transition;\n\n      if (!this.app) {\n        (function () {\n          // initial render\n          var router = _this3;\n          _this3.app = new _this3._appConstructor({\n            el: _this3._appContainer,\n            created: function created() {\n              this.$router = router;\n            },\n            _meta: {\n              $route: route\n            }\n          });\n        })();\n      }\n\n      // check global before hook\n      var beforeHooks = this._beforeEachHooks;\n      var startTransition = function startTransition() {\n        transition.start(function () {\n          _this3._postTransition(route, state, anchor);\n        });\n      };\n\n      if (beforeHooks.length) {\n        transition.runQueue(beforeHooks, function (hook, _, next) {\n          if (transition === _this3._currentTransition) {\n            transition.callHook(hook, null, next, {\n              expectBoolean: true\n            });\n          }\n        }, startTransition);\n      } else {\n        startTransition();\n      }\n\n      if (!this._rendered && this._startCb) {\n        this._startCb.call(null);\n      }\n\n      // HACK:\n      // set rendered to true after the transition start, so\n      // that components that are acitvated synchronously know\n      // whether it is the initial render.\n      this._rendered = true;\n    };\n\n    /**\n     * Set current to the new transition.\n     * This is called by the transition object when the\n     * validation of a route has succeeded.\n     *\n     * @param {Transition} transition\n     */\n\n    Router.prototype._onTransitionValidated = function _onTransitionValidated(transition) {\n      // set current route\n      var route = this._currentRoute = transition.to;\n      // update route context for all children\n      if (this.app.$route !== route) {\n        this.app.$route = route;\n        this._children.forEach(function (child) {\n          child.$route = route;\n        });\n      }\n      // call global after hook\n      if (this._afterEachHooks.length) {\n        this._afterEachHooks.forEach(function (hook) {\n          return hook.call(null, {\n            to: transition.to,\n            from: transition.from\n          });\n        });\n      }\n      this._currentTransition.done = true;\n    };\n\n    /**\n     * Handle stuff after the transition.\n     *\n     * @param {Route} route\n     * @param {Object} [state]\n     * @param {String} [anchor]\n     */\n\n    Router.prototype._postTransition = function _postTransition(route, state, anchor) {\n      // handle scroll positions\n      // saved scroll positions take priority\n      // then we check if the path has an anchor\n      var pos = state && state.pos;\n      if (pos && this._saveScrollPosition) {\n        Vue.nextTick(function () {\n          window.scrollTo(pos.x, pos.y);\n        });\n      } else if (anchor) {\n        Vue.nextTick(function () {\n          var el = document.getElementById(anchor.slice(1));\n          if (el) {\n            window.scrollTo(window.scrollX, el.offsetTop);\n          }\n        });\n      }\n    };\n\n    return Router;\n  })();\n\n  function guardComponent(path, handler) {\n    var comp = handler.component;\n    if (Vue.util.isPlainObject(comp)) {\n      comp = handler.component = Vue.extend(comp);\n    }\n    /* istanbul ignore if */\n    if (typeof comp !== 'function') {\n      handler.component = null;\n      warn$1('invalid component for route \"' + path + '\".');\n    }\n  }\n\n  /* Installation */\n\n  Router.installed = false;\n\n  /**\n   * Installation interface.\n   * Install the necessary directives.\n   */\n\n  Router.install = function (externalVue) {\n    /* istanbul ignore if */\n    if (Router.installed) {\n      warn$1('already installed.');\n      return;\n    }\n    Vue = externalVue;\n    applyOverride(Vue);\n    View(Vue);\n    Link(Vue);\n    exports$1.Vue = Vue;\n    Router.installed = true;\n  };\n\n  // auto install\n  /* istanbul ignore if */\n  if (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(Router);\n  }\n\n  return Router;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-router/dist/vue-router.js\n// module id = 5\n// module chunks = 0","<template>\n<div>\n  <div class=\"nav\">\n    <a v-link=\"'/home'\">Home</a>\n    <a v-link=\"'/hello'\">Hello</a>\n  </div>\n  <router-view\n    class=\"view\"\n    keep-alive\n    transition\n    transition-mode=\"out-in\">\n  </router-view>\n</div>\n</template>\n<script>\nexport default {\n  data() {\n    return {}\n  }\n}\n</script>\n<style lang=\"less\">\nbody {\n  color: #333333;\n}\n.nav > a.active {\n  font-weight: bold;\n  font-size: 1.2em;\n}\n.view {\n  transition: opacity .2s ease;\n\n  &.v-enter,\n  &.v-leave {\n    opacity: 0;\n  }\n}\n</style>\n\n\n\n\n// WEBPACK FOOTER //\n// App.vue?559a8075","exports = module.exports = require(\"./../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"body{color:#333}.nav>a.active{font-weight:700;font-size:1.2em}.view{-webkit-transition:opacity .2s ease;transition:opacity .2s ease}.view.v-enter,.view.v-leave{opacity:0}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./~/vue-loader/lib/style-rewriter.js!./~/less-loader!./~/vue-loader/lib/selector.js?type=style&index=0!./src/App.vue\n// module id = 7\n// module chunks = 0","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader/lib/css-base.js\n// module id = 8\n// module chunks = 0","module.exports = \" <div> <div class=nav> <a v-link=\\\"'/home'\\\">Home</a> <a v-link=\\\"'/hello'\\\">Hello</a> </div> <router-view class=view keep-alive transition transition-mode=out-in> </router-view> </div> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = 9\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nvar stylesInDom = {},\n\tmemoize = function(fn) {\n\t\tvar memo;\n\t\treturn function () {\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\treturn memo;\n\t\t};\n\t},\n\tisOldIE = memoize(function() {\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\n\t}),\n\tgetHeadElement = memoize(function () {\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t}),\n\tsingletonElement = null,\n\tsingletonCounter = 0,\n\tstyleElementsInsertedAtTop = [];\n\nmodule.exports = function(list, options) {\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the bottom of <head>.\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list);\n\taddStylesToDom(styles, options);\n\n\treturn function update(newList) {\n\t\tvar mayRemove = [];\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction addStylesToDom(styles, options) {\n\tfor(var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles(list) {\n\tvar styles = [];\n\tvar newStyles = {};\n\tfor(var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\tif(!newStyles[id])\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse\n\t\t\tnewStyles[id].parts.push(part);\n\t}\n\treturn styles;\n}\n\nfunction insertStyleElement(options, styleElement) {\n\tvar head = getHeadElement();\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\tif (options.insertAt === \"top\") {\n\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\thead.insertBefore(styleElement, head.firstChild);\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\thead.appendChild(styleElement);\n\t\t}\n\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t} else if (options.insertAt === \"bottom\") {\n\t\thead.appendChild(styleElement);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement(styleElement) {\n\tstyleElement.parentNode.removeChild(styleElement);\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\tif(idx >= 0) {\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement(options) {\n\tvar styleElement = document.createElement(\"style\");\n\tstyleElement.type = \"text/css\";\n\tinsertStyleElement(options, styleElement);\n\treturn styleElement;\n}\n\nfunction addStyle(obj, options) {\n\tvar styleElement, update, remove;\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t} else {\n\t\tstyleElement = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, styleElement);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle(newObj) {\n\t\tif(newObj) {\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\treturn;\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = styleElement.childNodes;\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\tif (childNodes.length) {\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyleElement.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag(styleElement, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\tvar sourceMap = obj.sourceMap;\n\n\tif (media) {\n\t\tstyleElement.setAttribute(\"media\", media);\n\t}\n\n\tif (sourceMap) {\n\t\t// https://developer.chrome.com/devtools/docs/javascript-debugging\n\t\t// this makes source maps inside style tags work properly in Chrome\n\t\tcss += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */';\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = css;\n\t} else {\n\t\twhile(styleElement.firstChild) {\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t}\n\t\tstyleElement.appendChild(document.createTextNode(css));\n\t}\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-style-loader/addStyles.js\n// module id = 10\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../node_modules/css-loader/index.js!./../node_modules/vue-loader/lib/style-rewriter.js!./../node_modules/less-loader/index.js!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./App.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../node_modules/vue-style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js!./../node_modules/vue-loader/lib/style-rewriter.js!./../node_modules/less-loader/index.js!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./App.vue\", function() {\n\t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js!./../node_modules/vue-loader/lib/style-rewriter.js!./../node_modules/less-loader/index.js!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./App.vue\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-style-loader!./~/css-loader!./~/vue-loader/lib/style-rewriter.js!./~/less-loader!./~/vue-loader/lib/selector.js?type=style&index=0!./src/App.vue\n// module id = 11\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() { return this; })();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 12\n// module chunks = 0","import * as Vue from 'vue';\nimport * as Router from 'vue-router';\nimport Home from './home/';\nimport Hello from './Hello';\nVue.use(Router);\nvar router = new Router({ linkActiveClass: 'active' });\nrouter.map({\n    '/home': { component: Home },\n    '/hello': { component: Hello }\n});\nrouter.redirect({\n    '*': '/home'\n});\nrouter.beforeEach(function () {\n    window.scrollTo(0, 0);\n});\nrouter.start(require('./App.vue'), '#app');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/main.ts\n// module id = 13\n// module chunks = 0"],"sourceRoot":""}